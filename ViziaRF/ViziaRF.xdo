<!-- Premise Systems Sys Schema Version 2.1 Build 15117 -->
<!-- Premise Systems Sys Schema XML Version 2.0.19 -->
<Object ID="{8D692EC9-EB74-4155-9D83-315872AC9800}" Name="Premise SYS" Flags="0x120000" Class="sys://Schema/System/Object" Description="IP Camera REQUIRES IP CAMERAS EXTENSION" >
	<Object ID="{05B46F0B-A745-4B03-81C9-624D3B3E9CD7}" Name="Schema" Flags="0x52FA0000" Class="sys://Schema/System/Schema" >
		<Object ID="{79B9225F-8A86-42B2-9B31-78C8A2893404}" Name="Modules" Flags="0x40FA0000" Class="sys://Schema/System/ModuleFolder" Description="User-defined object types" DisplayName="Modules Folder" >
			<Object ID="{EF6B933B-C97F-4C95-8E89-90E1ECA54527}" Name="Leviton" Class="sys://Schema/System/Module" Version="2.0.19" >
				<Object ID="{D028F14A-A83E-4399-889C-C2A48A6339FF}" Name="Classes" Flags="0x120000" Class="sys://Schema/System/ClassFolder" >
					<Object ID="{E0C4BD97-EAAF-4A35-8A8A-E85986FA8087}" Name="ViziaRF" Class="sys://Schema/System/Class" Icon="AgAAADYQAAAAAAEAAgAQEAAAAAAAAGgDAAAmAAAAICAAAAAAAACoDAAAjgMAACgAAAAQAAAAIAAAAAEAGAAAAAAAQAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADp+/ukoaOrqq2rqq2rqq2rqq2rqq2rqq2rqq2rqq2koaPp+/sAAAAAAAAAAAAAAAChnZ5pZFlPPCBQORxSPyRQORxSPyRQORxSPyRONRhpZFmhnZ4AAAAAAAAAAAAAAACEho1AIABUWTZrpZRRTylrpZRRTylrpZRRTyltqZk+GgCDho0AAAAAAAAAAADX5OVRUUpOKABLHABSSCBLGQBSSCBLGQBSSCBLGQBSSCBLGwBWU0rX5OUAAAAAAACqp6tPOhxSVCxxzs5PRRtxzs5PRRtxzs5PRRtxzs5PRRtxz85MMA+qp6sAAAAAAACTk5VsZVhPPB9QNhhSPyRQNhhSPyRQNhhSPyRQNhhSPyRNMhNsZViTk5UAAAAAAAC5vLyWlZecm56bmp2bmp2bmp2bmp2bmp2bmp2bmp2bmp2cm56WlZe5vLwAAAAAAAAAAACcm56RkJKFhoaFhoaFhoaFhoaFhoaFhoaFhoaFhoaRkJKcm54AAAAAAAAAAAAAAAAAAACcm56cm56cm56cm56cm56cm56cm56cm56cm56cm54AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAA//8AAP//AADAAwAAwAMAAMADAACAAQAAgAEAAIABAACAAQAAwAMAAOAHAAD//wAA//8AAP//AAD//wf37S/v6SgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoLS/v8Tf3wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALS/v6SgoICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSgoLS/vwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKSgoICAgICAgHNzc2JiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYnNzc4CAgICAgKSgoAAAAAAAAAAAAAAAAAAAAAAAAAAAAMTf36SgoICAgG5vblAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAG5vboCAgKSgoMTf3wAAAAAAAAAAAAAAAAAAAAAAALS/v4+NjXh4eD84IFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAD84IHh4eI+NjbS/vwAAAAAAAAAAAAAAAAAAAAAAAKSgoICAgF1eXVAyAFAyAFAyAGPByo7//2PBylAyAGPByo7//2PBylAyAGPByo7//2PBylAyAGPByo7//2PBylAyAFAyAF1eXYCAgKSgoAAAAAAAAAAAAAAAAAAAAMTf36SgoICAgENDOFAyAFAyAFAyAFAyAF2WjVAyAFAyAFAyAF2WjVAyAFAyAFAyAF2WjVAyAFAyAFAyAF2WjVAyAFAyAFAyAENDOICAgKSgoMTf3wAAAAAAAAAAAAAAALS/v4+NjW5ubkI0E1AyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAE05FW5ubo+NjbS/vwAAAAAAAAAAAAAAAKSgoICAgGJiYlAyAFAyAGPByo7//2PBylAyAGPByo7//2PBylAyAGPByo7//2PBylAyAGPByo7//2PBylAyAGPByo7//2PBylAyAGJiYoCAgKSgoAAAAAAAAAAAAAAAAKSgoICAgGJiYlAyAFAyAFAyAF2WjVAyAFAyAFAyAF2WjVAyAFAyAFAyAF2WjVAyAFAyAFAyAF2WjVAyAFAyAFAyAF2WjVAyAFAyAGJiYoCAgKSgoAAAAAAAAAAAAAAAAI+NjYCAgHNzc1AyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAFAyAHNzc4CAgI+NjQAAAAAAAAAAAAAAAICAgICAgICAgHNzc2JiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYnNzc4CAgICAgICAgAAAAAAAAAAAAAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAAAAAAAAAAAAALS/v6SgoKSgoI+NjaSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoKSgoI+NjaSgoKSgoLS/vwAAAAAAAAAAAAAAAAAAALS/v4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLS/vwAAAAAAAAAAAAAAAAAAAAAAAAAAALS/v4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLS/vwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMTf37S/v4CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLS/v8Tf3wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////////////////////AAAA/wAAAP8AAAD+AAAAfgAAAH4AAAB8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAAD4AAAB/AAAA/4AAAf////////////////////////////////////////////////" Description="Base class for the ViziaRF driver." >
						<Object ID="{4DE7E201-5754-4D5E-BEFC-F3060B080346}" Name="OnChangeOnNewData" Class="sys://Schema/Scripting/ClassProperty" Property="{540A5FD4-C733-417F-B8B3-96CF4A82ED14}" >
<![CDATA[
Script=
'This script uses a global function called gViziaPacketParser found 
'under the global script Vizia.  Vizia handles all of the string parsing and returns an array.

'PROGRAM FLOW:  
'1. Some property change triggers a method that transfers a command to the vizia module.  
'2. OnChangeOnNewData calls gViziaPacketParser, then processes the reults.

redim aParms(0)
dim sMsg
dim iCnt
dim iParms
dim oDevice

'debugout this.RxTextLine

if sysevent.newVal = true and len(this.RxTextLine) > 0 then
	if gViziaIsDebugOn(2) then debugout "OnChangeOnNewData(): <" & now & "> rxtextline=" & this.RxTextLine
	for iCnt = 0 To this.RxLinesRemaining
		sMsg = ""
		select case gViziaPacketParser(this.RxTextLine, aParms)
			case 0: ' Bad Packet
				sMsg = "Bad packet case 0."
				this.Jobs.GetNextJob
				
			case 1:	' Error Status (<E)
				sMsg = "Error Status: " &  aParms(0)
				select case aParms(0)
					case 0: ' Acknowledgement
						this.Jobs.ConsecutiveFailedJobs = 0
						
						if this.Devices.DiscoverDevices = true then
							this.Jobs.GetNextJob
						elseif this.JobQueue.LastSentJob = ">AB" then
							'AB was successful
							this.Jobs.GetNextJob
						end if
					case 1,2,3,4,5,6,7,8,9:
						this.Jobs.RetryJob

					case 10:
						this.Devices.ProcessCmd_Discovery
				end select
			case 2: ' Transmission Status (<X)
				sMsg = "Transmission Status: " & aParms(0)
				if aParms(0) = 0 then
					this.Jobs.GetNextJob
				else
					this.TotalTransmissionErrors = this.TotalTransmissionErrors + 1
					this.Jobs.RetryJob
				end if
				
			case 3: ' Found Node (<F)
				'discover devices if discovery is in auto or processing
				if this.Devices.EnableAutoDiscovery = true or this.Devices.InDiscoveryMode = true then
					if this.VRC0Pv3 = true and aParms(0)= 0 then
						' Discover devices...
						this.Devices.ProcessCmd_Discovery
					elseif aParms(0) <> "" then
						sMsg = "Found Node: " & aParms(0)
						this.Devices.UpdateDevices aParms(0)
					end if
				end if
			case 4: ' Group Status (<M)
				sMsg = "Group Status: " & aParms(0)
				if aParms(0) = 0 then ' OK
					this.Jobs.ConsecutiveFailedJobs = 0
					this.Jobs.GetNextJob
				else ' Not OK
					this.Jobs.RetryJob
				end if
			
			case 5: ' Network Reconfiguration (<!)
				if this.Devices.EnableAutoDiscovery = true then
					sMsg = "Network Reconfiguration: " & aParms(0)
					'The VRC0P emits one or more <!016 followed by a <!000
					'Do nothing with <!016; only kick off rediscovery on <!000
					'The VRC0P appears to be unresponsive until the <!000 is received
					if aParms(0) = 0 then
						if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Network reconfiguration - aParms(0)=" & aParms(0) & ", rxText=" & this.RxTextLine
						this.Devices.DiscoverDevices = true
					end if
				end if
			case 10: ' Node Scene (<N S)
				sMsg = "Node Scene. Node: " & aParms(0) & _
					", Scene: " & aParms(1) & _
					", Brightness: " & aParms(2) & _
					", FadeRate: " & aParms(3)
				this.Devices.SetLightLevel aParms(0), aParms(2)
			
			case 11: ' Node Light Level (< N L)
				sMsg = "Node Light Level. Node: " & aParms(0) & _
					", Brightness: " & aParms(1)
				this.Devices.SetLightLevel aParms(0), aParms(1)
				this.Jobs.ShortenJobDelayTimer
				
			case 12: ' Node General (<N :) or <n :
				sMsg = "Node General. Node: " & aParms(0)
				iParms = ubound(aParms)
				for iParm = 1 to iParms - 1
					sMsg = sMsg & " (" & iParm & "):" & aParms(iParm)
				next
				this.Jobs.ShortenJobDelayTimer
				parms = gViziaArgsPack( aParms, iParms )
				
				select case aParms(1)
					case 0: 'A SECURE VIZIA RF PACKET
						' reformat security packet for compatibility with ProcessCmd methods...
						parms = gViziaSecureArgsPack( aParms, iParms)
						if iParms > 2 then
							iParms = iParms - 1 
						end if
						
						' find command class
						select case aParms(2)
							case 128: 'BATTERY
								if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process BATTERY command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
								this.Devices.ProcessCmd_Battery parms, iParms
							case 98: 'LOCK
								if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process LOCK command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
								this.Devices.ProcessCmd_Lock parms, iParms
							case 99: 'USER_CODE
								if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process UserCode command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
								this.Devices.ProcessCmd_UserCode parms, iParms
							case 113: 'ALARM
								if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process ALARM command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
								this.Devices.ProcessCmd_Alarm parms, iParms
							case 117: 'TAMPERPROOF SETTING
								if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process TAMPER command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
								this.Devices.ProcessCmd_TamperProof parms, iParms
							case 133: 'ASSOCIATION
								if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process ASSOCIATION command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
								this.Devices.ProcessCmd_Association parms, iParms
						end select
						
					case 32: 'BASIC
						if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process BASIC command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
						this.Devices.ProcessCmd_Basic parms, iParms
						
					case 38: 'SWITCH_MULTILEVEL
						if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process SWITCH_MULTILEVEL command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
						this.Devices.ProcessCmd_SwitchMultilevel parms, iParms
					
					case 44: 'SCENE ACTUATOR CONFIG
						if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process SCENE command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
						this.Devices.ProcessCmd_SceneActuatorConfiguration parms, iParms
						
					case 49: 'SENSOR_MULTILEVEL
						if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process SENSOR_MULTILEVEL command from node=" & aParms(0) & ", , rxText=" & this.RxTextLine
						if  iParms = 6 and aParms(2) = 5 and aParms(3) = 1 and aParms(4) = 9 then 
							this.Devices.SetTemperature aParms(0), aParms(5)
						else
							this.Devices.ProcessCmd_SensorMultilevel parms, iParms
						end if

					case 64: 'THERMOSTAT_MODE
						if iParms = 4 and aParms(2) = 3 then 
							this.Devices.SetThermostatHVACMode aParms(0), aParms(3)
						end if

					case 66: 'THERMOSTAT_OPERATING_STATE
						if iParms = 4 and aParms(2) = 3 then 
							this.Devices.SetThermostatHVACState aParms(0), aParms(3)
						end if

					case 67: 'THERMOSTAT_SETPOINT
						'if  aParms(2) = 1 and _
						if  (aParms(2) = 1 or aParms(2) = 3) and (aParms(3) = 1 or aParms(3) = 2) and aParms(4) = 9 then 
							this.Devices.SetThermostatSetpoint aParms(0), aParms(5), aParms(3)
						end if
					
					case 68: 'THERMOSTAT_FAN_MODE
						if iParms = 4 and aParms(2) = 3 then 
							this.Devices.SetThermostatFanMode aParms(0), aParms(3)
						end if

					case 69: 'THERMOSTAT_FAN_STATE
						if gViziaIsDebugOn(0) then debugout "OnChangeOnNewData(): <" & now & "> Process THERMOSTAT_FAN_STATE command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
						this.Devices.ProcessCmd_ThermostatFanState parms, iParms

					case 96: 'MULTI_INSTANCE
						if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process MULTI_INSTANCE command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
						this.Devices.ProcessCmd_MultiInstance parms, iParms

					case 112: 'CONFIGURATION
						if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process CONFIGURATION command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
						this.Devices.ProcessCmd_Configuration parms, iParms

					case 113: 'ALARM
						if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process ALARM command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
						this.Devices.ProcessCmd_Alarm parms, iParms

					case 114: 'MANUFACTURER_SPECIFIC
						if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process MANUFACTURER_SPECIFIC command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
						this.Devices.ProcessCmd_ManufacturerSpecific parms, iParms
					
					case 117: 'TAMPERPROOF SETTING
							if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process TAMPER command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
							this.Devices.ProcessCmd_TamperProof parms, iParms

					case 128: 'BATTERY
						if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process BATTERY command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
						this.Devices.ProcessCmd_Battery parms, iParms

					case 130: 'HAIL
						' New code to count toggles of switch/dimmer
						if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process HAIL command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
						if iParms = 3 and aParms(2) = 1 then
							' Count manual button presses of a dimmer or switch
							' And toggle a boolean switch property called SwitchToggle
							this.Devices.SetLocallyManipulated aParms(0)	
						end if

					case 132: 'WAKE_UP
						if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process WAKE_UP command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
						this.Devices.ProcessCmd_Wake_Up parms, iParms
						
					case 133: 'ASSOCIATION
						if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process ASSOCIATION command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
						this.Devices.ProcessCmd_Association parms, iParms
						
					case 134: 'VERSION
						if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process VERSION command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
						this.Devices.ProcessCmd_Version parms, iParms

					case 145: 'MANUFACTURER_PROPRIETARY
						if gViziaIsDebugOn(0) then debugout "OnChangeOnNewData(): <" & now & "> Process MANUFACTURER_PROPRIETARY command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
						this.Devices.ProcessCmd_ManufacturerProprietary parms, iParms
						
					case 152: 'SECURITY
						'Be silent unless debugging level is high
						if gViziaIsDebugOn(2) then debugout "OnChangeOnNewData(): <" & now & "> Unhandled SECURITY command from node=" & aParms(0) & ", rxText=" & this.RxTextLine

					case 156: 'SENSOR_ALARM
						if gViziaIsDebugOn(1) then debugout "OnChangeOnNewData(): <" & now & "> Process SENSOR_ALARM command from node=" & aParms(0) & ", rxText=" & this.RxTextLine
						this.Devices.ProcessCmd_SensorAlarm parms, iParms

					case else: 'Unknown
						if gViziaIsDebugOn(0) then debugout "OnChangeOnNewData(): <" & now & "> Unknown Node General command: from node=" & aParms(0) & ", rxText=" & this.RxTextLine
				end select

			case 13: ' Node Name (< N ")
				sMsg = "Node Name. Node: " & aParms(0) & _
					", Name: " & aParms(1)
					this.Devices.SetDeviceName aParms(0), aParms(1)
					this.Jobs.ShortenJobDelayTimer
			case 14: ' Node Location Name (<N ')
				sMsg = "Node Location Name. Node: " & aParms(0) & _
					", Location: " & aParms(1)
					this.Devices.SetDeviceLocation aParms(0), aParms(1)
					this.Jobs.ShortenJobDelayTimer
			case -1:
				sMsg = "Bad <Error State> packet"
			case -2:
				sMsg = "Bad <Transmission State> packet"
			case -3:
				sMsg = "Bad <Found Node> packet"
			case -4:
				sMsg = "Bad <Group Status> packet"
			case -5:
				sMsg = "Bad <Network Configuration> packet"
			case -10:
				sMsg = "Bad <Node Scene> packet"
			case -11:
				sMsg = "Bad <Node Light Level> packet"
			case -12:
				sMsg = "Bad <Node General> packet"
			case -13:
				sMsg = "Bad <Node Name> packet"
			case -14:
				sMsg = "Bad <Node Location Name> packet"
			case else: 
				sMsg = "Unknown packet"
		end select
		this.Status = sMsg
		'debugout "rxTextLine: " & this.RxTextLine & " EOT"
		'debugout "Length rxTextLine: " & len(this.RxTextLine) & "."
		'debugout sMsg
		this.RxNextLine = true
	next
end if]]>
						</Object>
						<Object ID="{A006F1FF-AE97-451F-A357-9B95F3DA3C14}" Name="ClassConstructor" Class="sys://Schema/Scripting/ClassConstructor" >
<![CDATA[
Script=
' Configure the serial port
this.Baud = 11
this.DataBits = 4
this.Parity = 2
this.StopBits = 0
this.FlowControl = 0
this.RTS = 1
this.DTR = 1
this.CTS = false	' CTS is a boolean, not a multivalue
this.DSR = false	' DSR is a boolean, not a multivalue
this.RxMode = true
this.RxTextLineTerminators = "0D 0A"

' Create a Serial Command object to transmit data
set oTmp = this.CreateObject("sys://Schema/Device/Serial/Command","OutCmd")

' Hide the Serial Command object
oTmp.SetValue "Flags", 2

' Communications are in text mode
oTmp.AppendCR = true
oTmp.AppendLF = true

' Pause between transmitted commands (milliseconds)
oTmp.WaitTime = 400

set oTmp = nothing

this.BuildDevicesContainer
this.BuildAllLightsGroup
this.BuildScenesContainer
this.BuildJobQueue]]>
						</Object>
						<Object ID="{C262DFBD-09B5-49ED-9109-4347538A7B4D}" Name="Status" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" DisplayName="Status" />
						<Object ID="{18FD6186-4BC1-4511-A24B-C073BF51EC5B}" Name="TotalTransmissionErrors" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" />
						<Object ID="{BABBD711-BAAD-4949-B7A3-55AA4CF7DDD3}" Name="SerialPort" Flags="0x900" Class="sys://Schema/System/ObjectRef" ReadOnly="-1" Browsable="0" />
						<Object ID="{EF2A9C0E-87B2-45E7-8BCD-63042155FC97}" Name="OnChangeNetwork" Class="sys://Schema/Scripting/ClassProperty" Property="{342063DA-112F-4B0D-B55D-6B957FC4C3FB}" >
<![CDATA[
Script=
'
' Store the selected serial port

if not this.Network is nothing then set this.SerialPort = this.Network]]>
						</Object>
						<Object ID="{5C20FB0B-FE48-49B5-B0A2-12BA817A88E1}" Name="Jobs" Flags="0x900" Class="sys://Schema/System/ObjectRef" ReadOnly="-1" Description="Convenience pointer to JobQueue container" Browsable="0" />
						<Object ID="{C58F360D-D762-4E3A-91DE-3701F57323D2}" Name="BuildJobQueue" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Create container for all Jobs." >
<![CDATA[
Script=
'
dim oJobQueue

set oJobQueue = this.GetObject("sys://Devices/CustomDevices/" & this.Name & "/JobQueue")
if oJobQueue is nothing then
	' Construct a container (Job Queue) to hold queued Jobs
	set oJobQueue = this.CreateObject(Schema.Modules.Leviton.Classes.JobQueue.Path, "JobQueue")
	oJobQueue.SetValue "Flags", 1179648 ' Object cannot be deleted and its name cannot be modified.
end if

this.Jobs = oJobQueue

set oJobQueue = nothing

]]>
						</Object>
						<Object ID="{0B9855FA-4B65-484A-90D9-E90D10A60DB9}" Name="Devices" Flags="0x900" Class="sys://Schema/System/ObjectRef" ReadOnly="-1" Description="Convenience pointer to Devices container" Browsable="0" />
						<Object ID="{C405F533-DB41-4AB6-B83F-E7AD7069E73F}" Name="BuildDevicesContainer" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Create container for all Devices." >
<![CDATA[
Script=
'
dim oDevices

set oDevices = this.GetObject("sys://Devices/CustomDevices/" & this.Name & "/Devices")
if oDevices is nothing then
	' Construct a container for all Devices
	set oDevices = this.CreateObject(Schema.Modules.Leviton.Classes.Devices.Path, "Devices")
	oDevices.SetValue "Flags", 1179648 ' Object cannot be deleted and its name cannot be modified.
end if

this.Devices = oDevices

set oDevices = nothing

]]>
						</Object>
						<Object ID="{8CA48CD3-BDD9-4384-A658-ED1667931E3D}" Name="BuildScenesContainer" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'
'
dim oScenes

set oScenes = this.GetObject("sys://Devices/CustomDevices/" & this.Name & "/Scenes")
if oScenes is nothing then
	' Construct a container for all Scenes
	set oScenes = this.CreateObject(Schema.Modules.Leviton.Classes.Scenes.Path, "Scenes")
	oScenes.SetValue "Flags", 1179648 ' Object cannot be deleted and its name cannot be modified.
end if

'this.Scenes = oScenes

set oScenes = nothing
]]>
						</Object>
						<Object ID="{3CE67EB1-EAC3-4063-B80D-D3819581A8C0}" Name="BuildAllLightsGroup" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Create and populate the All Lights group." >
<![CDATA[
Script=
'
' If more than 27 devices are used in a group, a buffer overflow will result (>E002).
' We must check for device count and stop at 27 devices for any group ID other than 1

dim oGroup, oDevice, oItem, iDevice

set oGroup = this.GetObject("sys://Devices/CustomDevices/" & this.Name & "/Groups")
if oGroup is nothing then
	' Construct a container for Device Groups
	set oGroup = this.CreateObject(Schema.Modules.Leviton.Classes.Groups.Path, "Groups")
	oGroup.SetValue "Flags", 1179648 ' Object cannot be deleted and its name cannot be modified.
end if

set oGroup = this.GetObject("sys://Devices/CustomDevices/" & this.Name & "/Groups/AllLights")
if oGroup is nothing then
	' Create the All group
	set oGroup = this.GetObject("sys://Devices/CustomDevices/" & this.Name & "/Groups")
	set oGroup = oGroup.CreateObject(Schema.Modules.Leviton.Classes.Group.Path, "AllLights")
	oGroup.SetValue "Flags", 1179648
end if

' Iterate through all Lighting Devices and create members in the AllLights group
for each oDevice in this.GetObjectsByType(Schema.Modules.Leviton.Classes.Lighting.Path)
'	if iDevice <= 26 then
		set oItem = oGroup.CreateObject(Schema.Modules.Leviton.Classes.GroupMember.Path, oDevice.Name)
		oItem.Device = oDevice
		oItem.SetValue "Flags", 1179648
'	end if
'	iDevice = iDevice + 1
next

set oItem = nothing
set oDevice = nothing
set oGroup = nothing
]]>
						</Object>
						<Object ID="{63C57275-60AE-492B-9374-11D99C550306}" Name="OnChangeOnInit" Class="sys://Schema/Scripting/ClassProperty" Property="{3D265B93-51DF-407E-BE37-B9B54D0076AB}" >
<![CDATA[
Script=
' Configure the serial port
this.Baud = 11
this.DataBits = 4
this.Parity = 2
this.StopBits = 0
this.FlowControl = 0
this.RTS = 1
this.DTR = 1
this.CTS = false	' CTS is a boolean, not a multivalue
this.DSR = false	' DSR is a boolean, not a multivalue

' toggle line terminator on reboot
this.RxTextLineTerminators = "0D"
this.RxTextLineTerminators = "0D 0A"

' Just incase some jobs are left over after a reboot
this.Jobs.PurgeAllJobs
'this.Devices.ResetFailedJobs
'this.Devices.ResetLocalManipulations
'this.Jobs.ResetJobTotals
'this.TotalTransmissionErrors = 0
'this.Devices.ResetDiscovery]]>
						</Object>
						<Object ID="{E0640B19-0BEB-4BCF-946B-5D82A8179359}" Class="sys://Schema/System/SuperClass" LinkObject="{507FA380-E7ED-4C7F-AA71-656B12C45DA3}" />
						<Object ID="{F628A875-4C05-411A-8510-40A84AC7042C}" Class="sys://Schema/System/SuperClass" LinkObject="{D3262B40-344B-4535-BFDE-795DAF70DD34}" />
						<Object ID="{40AD866F-158C-455D-AF4C-6484ABEB7648}" Name="SendCommand" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Transmit a ViziaRF command." >
<![CDATA[
Script=
if gViziaIsDebugOn(1) then debugout "SendCommand(): <" & now & "> SEND COMMAND: " & method.Data
if this.Jobs.CurrentJob <> "" then
    this.Jobs.AddJob method.Data, method.Priority, method.NodeID
else
    this.Jobs.RunJob method.Data, method.Priority, method.NodeID
end if
]]>
							<Object ID="{9E8D4FBE-A6F5-468A-BE53-CC0AFE22E8AE}" Name="Data" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{C47D59DA-2803-4439-9F4D-1A4EB147A333}" Name="Priority" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{C7BBF708-0107-4D6A-8192-7EE731943990}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{6C01250E-F92D-4D20-B2F0-4B281A650A81}" Name="InterfaceFailureTime" Flags="0x900" Class="sys://Schema/System/DateTime" DefaultValue="1/1/2000" AutoSet="0" ReadOnly="-1" Description="Last time when the interface device failed to respond." />
						<Object ID="{74CB6C49-F1A0-4040-88B0-6E336B734927}" Name="InterfaceFailure" Flags="0x900" Class="sys://Schema/System/Boolean" ReadOnly="-1" Description="Interface device failed to respond." />
						<Object ID="{283F07E5-4B6F-4910-B516-D92D8870EBB7}" Name="InterfaceFailures" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" />
						<Object ID="{DADA791B-DD62-4B02-8B7A-07D12CB5C070}" Name="MaxInterfaceFailures" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" DefaultValue="50" />
						<Object ID="{10A47C78-67C0-4948-893D-7E0AB80B73CB}" Name="OnChangeInterfaceFailure" Class="sys://Schema/Scripting/ClassProperty" Property="{74CB6C49-F1A0-4040-88B0-6E336B734927}" >
<![CDATA[
Script=
'
' If interfaceFailure's new value is true then...

if this.TestingInProgress = true then
	this.Stop = true
end if

if sysevent.newVal then
	'set time/date of failure
	this.InterfaceFailureTime = now
	
	'increment interface failure count
	this.InterfaceFailures = this.InterfaceFailures + 1
	
	dim oEvent
	if this.InterfaceFailures < this.MaxInterfaceFailures then

		'Create an entry in the Premise Event log for the auto reset
		set oEvent = Events.CreateObject(Schema.System.Event.Path, "Job Failure")
		with oEvent
			.Description = this.Name & " experienced " & this.Jobs.MaxConsecutiveFailedJobs & " consecutive failed Jobs." & VbCrLf &_
			"The port was automatically reset as a result."
			.Severity = 50
			.EventTime = Now
			.LinkObject = this
		end with
		
		'reset the port
		this.ResetPort
	else
		'Create an entry in the Premise Event Log	
		set oEvent = Events.CreateObject(Schema.System.Event.Path, "Port Interface Failure")
		with oEvent
			.Description = this.Name & " experienced " & this.InterfaceFailures & " failed port resets." & VbCrLf &_
			 "Please ensure a proper connection then reset port manually through Premise Builder."
			.Severity = 90
			.EventTime = Now
			.LinkObject = this
		end with
		
		'stop all further polls
		this.Devices.PollingInterval = 0
		
		'purge all jobs
		this.Jobs.PurgeAllJobs		
		
		'this.InterfaceFailure = false
		this.InterfaceFailures = 0
		this.InterfaceFailure = false
		
		'set port and reference to nothing
		set this.SerialPort = nothing
		set this.Network = nothing
	end if
	set oEvent = nothing
end if]]>
						</Object>
						<Object ID="{FF3C63EA-F116-48FF-B2A9-65FCCB185FF2}" Name="ResetPort" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Disconnect and reconnect the serial port." >
<![CDATA[
Script=
'
'debugout "<ResetPort>"

if not this.Network is nothing then
	'debugout "Disconnecting " & this.Network.Name
	' Disconnect the port
	set this.Network = nothing
	' Reconnect a few seconds later
	system.addTimer 3, "on error resume next: this.ResetPort", 1, this.Name & "_ResetPort_" & this.ObjectID
else
	' Connect the port
	'debugout "Reconnecting " & this.SerialPort.Name
	this.InterfaceFailure = false
	set this.Network = this.SerialPort
	
	'tell the VRC0P to abort commands
	this.SendCommand ">AB", true
	
	'reset the VRC0P in an attempt to fix the issue	
	'this.SendCommand ">DE", true
end if]]>
						</Object>
						<Object ID="{9EA38B14-5AFE-4FFF-A82E-27C878C3C867}" Name="ViziaRFCommand" Flags="0x900" Class="sys://Schema/System/Text" Description="Raw ViziaRF Command." />
						<Object ID="{7B749A6B-C54B-4E8A-A9F1-42157CEDC2C4}" Name="SendViziaRFCommand" Flags="0xD00" Class="sys://Schema/System/Boolean" Momentary="-1" CaptionTrue="" CaptionFalse="" />
						<Object ID="{FFB657BB-E136-44F4-86C5-A5EDC7C383D3}" Name="OnChangeSendViziaRFCommand" Class="sys://Schema/Scripting/ClassProperty" Property="{7B749A6B-C54B-4E8A-A9F1-42157CEDC2C4}" >
<![CDATA[
Script=
'NodeID 999 is reserved for "other"
if sysevent.newVal and len(this.ViziaRFCommand) > 0 then this.SendCommand this.ViziaRFCommand, true, 999 ' High-priority]]>
						</Object>
						<Object ID="{696F58C9-4B23-4D6B-979C-062409742E7D}" Class="sys://Schema/System/SuperClass" LinkObject="{686FA396-20F7-4CB1-B9D0-62754898B4CF}" />
						<Object ID="{84348606-BF63-4657-8F4C-34275D44B7D4}" Name="VRC0PNodeID" Flags="0x900" Class="sys://Schema/System/Number" Description="Node ID of the VRC0P controller to which premise is connected.  Must be manually entered." />
						<Object ID="{B69F8BBF-F95F-441C-B6CF-A9FC8C290527}" Name="VRC0Pv3" Flags="0x900" Class="sys://Schema/System/Boolean" Description="Set to true if using VRC0Pv3" />
						<Object ID="{D8912EF9-56A5-454A-BCE6-88D427DFBE3D}" Class="sys://Schema/System/SuperClass" LinkObject="{64D14522-5816-4C26-BF92-130F6C1AB84A}" />
						<Object ID="{007EBF2D-5270-449F-AF22-6CCD11B10005}" Name="OnChangeVRC0Pv3" Class="sys://Schema/Scripting/ClassProperty" Property="{B69F8BBF-F95F-441C-B6CF-A9FC8C290527}" >
<![CDATA[
Script=
'
if sysevent.newVal = true then
	this.JobQueue.JobTimeout = 60
	this.JobQueue.AddDelayForNextJob = true
else
	this.JobQueue.JobTimeout = 20
	this.JobQueue.AddDelayForNextJob = false
end if]]>
						</Object>
					</Object>
					<Object ID="{75FF2C6B-0351-451B-A35F-0BC0A85117F7}" Name="Devices" Class="sys://Schema/System/Class" Description="Container for all Devices." Icon="Devices.ico" >
						<Object ID="{B28ECC4D-8D4F-4373-BDEF-92AE82BC9C03}" Name="Container" Class="sys://Schema/System/SuperClass" LinkObject="{DD124036-E4EE-4354-9253-BE8E38337936}" />
						<Object ID="{04C5BA2A-F24C-4F25-8F22-E2C47630DB39}" Class="sys://Schema/System/ChildClass" LinkObject="{7FD4DC2D-07D4-43C5-8FCA-8706ADC665B8}" />
						<Object ID="{0DD96EE7-0219-47F4-A0B1-4CB8201A5345}" Name="ClassChildDeleted" Class="sys://Schema/Scripting/ClassChildDeleted" >
<![CDATA[
Script=
'
' When a Device is deleted
' purge its membership from all groups
dim oDevices, oDevice, oItem
dim bFound

' Build collection of all Devices
set oDevices = this.GetObjectsByType(Schema.Modules.Leviton.Classes.Device.Path, false)

' Iterate through the members of all groups
' Remove orphaned members
on error resume next
for each oItem in this.Parent.Groups.GetObjectsByType(Schema.Modules.Leviton.Classes.GroupMember.Path, true)
	bFound = false
	for each oDevice in oDevices
		if oDevice.Name = oItem.Name then bFound = true
	next
	if not bFound then
		oItem.SetValue "Flags", 0 ' Clear all
	 	oItem.Parent.DeleteObject oItem.Name
	end if
next
on error goto 0
' Clean up
set oDevices = nothing
set oDevice = nothing
]]>
						</Object>
						<Object ID="{1F01A940-6E56-49B8-961A-DD59263253BC}" Class="sys://Schema/System/SuperClass" LinkObject="{AB37F7A4-4173-41E1-8276-3AF0F08D59E9}" />
						<Object ID="{8E87A932-1B72-4F56-84F8-186876471D24}" Class="sys://Schema/System/SuperClass" LinkObject="{C6C98D36-F389-49DD-94E9-3B122D3E3135}" />
						<Object ID="{716B47F3-A124-4754-9203-416533A8202C}" Class="sys://Schema/System/SuperClass" LinkObject="{049882CB-AB77-4B07-B420-FF07087AB6B3}" />
						<Object ID="{C2D4D12A-F39C-44EC-81FB-942C7DFEE6D5}" Name="UpdateDevices" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Handle Devices found during Discovery." >
<![CDATA[
Script=
'
' Called by OnChangeOnNewData
if gViziaIsDebugOn(2) then debugout "UpdateDevices(): "

'iNodeID is the node ID of the node currently being discovered. iNodeID 996 is a fake node ID used for discovery
dim iNodeID: iNodeID = 996

' Handle <F responses only if currently in Discovery Mode
if this.InDiscoveryMode = true then 
	select case this.DiscoveryType
		case 16: ' Switch
			this.AddDevice "Switch", method.NodeID
			iNodeID = method.NodeID
	
		case 17: ' Dimmer
			this.AddDevice "Dimmer", method.NodeID
			iNodeID = method.NodeID
			
		case 8: ' Thermostat
			this.AddDevice "Thermostat", method.NodeID
			iNodeID = method.NodeID

		case 32: ' Binary Sensor
			this.AddDevice "BinarySensor", method.NodeID
			iNodeID = method.NodeID

		case 33: ' Multilevel Sensor
			this.AddDevice "MultilevelSensor", method.NodeID
			iNodeID = method.NodeID

		case 161: ' Alarm Sensor
			this.AddDevice "AlarmSensor", method.NodeID
			iNodeID = method.NodeID
		case 64: ' Lock (only tested for kwikset)
			this.AddDevice "Lock", method.NodeID
			iNodeID = method.NodeID
		case 1:  ' also check basic class to be sure it's an in wall controller (e.g. static controller)
			select case this.DiscoveryBasicClass
				case 2: ' Controller
					this.AddDevice "Controller", method.NodeID
					iNodeID = method.NodeID
			end select
		case else: ' Unknown
			if gViziaIsDebugOn(0) then debugout "UpdateDevices(): Unknown device type: " & this.DiscoveryType & ", Node: " & method.NodeID
	end select

	' Continue discovering devices
	this.CurrentDiscoveryNodeID = this.CurrentDiscoveryNodeID + 1
	'note that iNodeID is either the node being updated or 996 (a fake node for keeping track of the type of job)
	this.Parent.SendCommand ">?FI" & this.DiscoveryBasicClass & "," & this.DiscoveryType & ",0," & this.CurrentDiscoveryNodeID, true, iNodeID
end if


]]>
							<Object ID="{018CF995-4E58-432B-9EFE-4963AB5F8A20}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{C4499382-4AA5-4DE8-B26B-48543C664A5B}" Name="AddDevice" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Add Device to the Devices list." >
<![CDATA[
Script=
'
' Called by UpdateDevices

'debugout "<AddDevice>"

dim oClass, oDevice
dim sClass: sClass = "sys://Schema/Modules/Leviton/Classes/" & method.ClassName
dim sDelimiter: sDelimiter = ""

if method.NodeID <> this.Parent.VRC0PNodeID then
set oClass = sys.GetObject(sClass)
set oDevice = this.GetDeviceByNodeID(method.NodeID)

if oDevice is nothing then
	if gViziaIsDebugOn(1) then debugout "AddDevice(): CREATE new device of class=" & method.ClassName & ", node=" & method.NodeID
	set oDevice = this.CreateObject(sClass, method.ClassName & method.NodeID)
	oDevice.NodeID = method.NodeID
elseif not oDevice.IsOfExplicitType(oClass.ObjectID) then ' Device exists but wrong class.
		set oDevice.Class = oClass ' Convert its class.
else
	if gViziaIsDebugOn(2) then debugout "AddDevice(): Device exists, nothing to do for node=" & method.NodeID
end if

if this.DiscoveredDevices <> "" then sDelimiter = ","
this.DiscoveredDevices = this.DiscoveredDevices & sDelimiter & method.NodeID

set oDevice = nothing
set oClass = nothing
end if]]>
							<Object ID="{8D0811E2-A26F-46A6-9391-7055CF279D3F}" Name="ClassName" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{32E9E50E-524D-4DF3-BB07-7B551E3BDB79}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{ABC736A0-93A0-4145-9AC3-9C2E7B1A24A2}" Name="DeleteOrphanDevices" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Remove Device objects without physical counterparts." >
<![CDATA[
Script=
'
' Called by OnChangeOnNewData
' If a Device object exists but Discovery could not find
' a matching physical device, delete the Device object.

dim oDevice

for each oDevice in this.GetObjectsByType(Schema.Modules.Leviton.Classes.Device.Path)
	if inStr(this.DiscoveredDevices, oDevice.NodeID) = 0 then
		if gViziaIsDebugOn(2) then debugout "DeleteOrphanDevices(): DELETING device=" & oDevice.Name
		this.DeleteObject oDevice.Name
	end if
next

set oDevice = nothing
]]>
						</Object>
						<Object ID="{993ADB26-6ACC-4E35-96F8-B1FD6AEA132A}" Name="SetLightLevel" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Set Powerstate and Brightness" >
<![CDATA[
Script=
'
' Called by OnChangeOnNewData and OnChangeOnDiscoverDevices

dim oDevice
dim bIsDimmer: bIsDimmer = false

set oDevice = this.GetDeviceByNodeID(method.NodeID)
if not oDevice is nothing then

	oDevice.ReceivingUpdate = true

	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Dimmer.Path) then bIsDimmer = true
	
	' Set PowerState and Brightness properties
	with oDevice
		select case method.Level
			case 0
				.PowerState = false
			case 99
				.PowerState = true
				if bIsDimmer then .Brightness = 1
			case else
				.PowerState = true
				if bIsDimmer then .Brightness = method.Level/100
		end select
	end with
	
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if		

]]>
							<Object ID="{C977EA3C-DC1B-4AD4-8998-776B0A92E2D4}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
							<Object ID="{0A7AF334-4F4D-4452-8EF4-171BB93FBF67}" Name="Level" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{AD29A7A5-7058-4A77-939C-8AADDEEA8E58}" Name="GetDeviceByNodeID" Class="sys://Schema/Scripting/SimpleClassMethod" ReturnParameter="{80A19474-1331-4F52-A686-876BC7DC13EF}" Description="Get a Device by its NodeID" >
<![CDATA[
Script=
'
'Get the first Device object with a matching NodeID

dim oDevice
set method.Device = nothing

for each oDevice in this.GetObjectsByTypeAndPropertyValue(Schema.Modules.Leviton.Classes.Device.Path, "NodeID", method.NodeID)
	set method.Device = oDevice
	exit for
next

set oDevice = nothing
]]>
							<Object ID="{C33489F3-D920-44D8-9801-EEEF0FFC4033}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
							<Object ID="{80A19474-1331-4F52-A686-876BC7DC13EF}" Name="Device" Flags="0x900" Class="sys://Schema/System/ObjectRef" />
						</Object>
						<Object ID="{7825FCBD-C4DE-466F-9A58-CAB929AEB6C7}" Name="SetDeviceName" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Set the Device Name" >
<![CDATA[
Script=
'
' Called by OnChangeOnNewData and OnChangeOnDiscoverDevices

dim oDevice

set oDevice = this.GetDeviceByNodeID(method.NodeID)
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	oDevice.Name = method.NodeName
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if		

]]>
							<Object ID="{CAB85C52-6B2D-4173-BC87-4991C714071B}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
							<Object ID="{53C16141-73D1-4386-A460-1589EF5873C8}" Name="NodeName" Flags="0x900" Class="sys://Schema/System/Text" />
						</Object>
						<Object ID="{8774B5AE-F350-453B-9CBB-62D9859863C3}" Name="SetDeviceLocation" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Set the Device Name" >
<![CDATA[
Script=
'
' Called by OnChangeOnNewData and OnChangeOnDiscoverDevices

dim oDevice

set oDevice = this.GetDeviceByNodeID(method.NodeID)
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	oDevice.Description = method.NodeLocation
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if		

]]>
							<Object ID="{14E9C44D-8C1B-4433-BA1F-3B0DE5897EA7}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
							<Object ID="{62ABF0A8-CAE4-40F2-B7B9-596ADA1B1A20}" Name="NodeLocation" Flags="0x900" Class="sys://Schema/System/Text" />
						</Object>
						<Object ID="{9103919D-DD04-4565-AB8E-B5FB60625BFA}" Name="SetTemperature" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Set the temperature." >
<![CDATA[
Script=
'
' Assumes the supplied temperature is in Fahrenheit

dim oDevice

set oDevice = this.GetDeviceByNodeID(method.NodeID)
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	oDevice.Temperature.Fahrenheit = method.Temperature
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if
]]>
							<Object ID="{24B27DF7-E203-45D9-B546-0B24FC15AD4E}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
							<Object ID="{0DD4135C-941C-46D2-A59F-576A212915C5}" Name="Temperature" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{BBB3DAEF-2961-445F-97E3-A0E60A5D9B01}" Name="SetThermostatSetpoint" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Set the Heating or Cooling SetPoint." >
<![CDATA[
Script=
'
' Assumes the supplied temperature is in Fahrenheit
' Heating is Mode=1 
' Cooling is Mode=2

dim oDevice

set oDevice = this.GetDeviceByNodeID(method.NodeID)
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	if method.Mode = 1 then ' Heating
		oDevice.HeatingSetPoint.Fahrenheit = method.Temperature
	else ' Cooling
		oDevice.CoolingSetPoint.Fahrenheit = method.Temperature
	end if
	
' Premise TemperatureMode codes:
' 	Auto = 0 
' 	Heat = 1
'	Cool = 2
'	EmergencyHeat = 3
'	Off = 4

	' Convert from Z-Wave to Premise
	select case oDevice.TemperatureMode
		case 0:  ' Auto
			if oDevice.CurrentSetPoint < oDevice.Temperature then
				oDevice.CurrentSetPoint = oDevice.HeatingSetPoint
			else
				oDevice.CurrentSetPoint = oDevice.CoolingSetPoint
			end if
		case 1: oDevice.CurrentSetPoint = oDevice.HeatingSetPoint ' Heat
		case 2: oDevice.CurrentSetPoint = oDevice.CoolingSetPoint ' Cool
		case 3: oDevice.CurrentSetPoint = oDevice.HeatingSetPoint ' Emergency Heat
		case 4: oDevice.CurrentSetPoint = "" ' off
	end select
	
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if

]]>
							<Object ID="{97955A1B-8373-465F-AA6A-C8F58B0852EA}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
							<Object ID="{85A129E1-46E1-4956-B059-CC5A92F4782C}" Name="Temperature" Flags="0x900" Class="sys://Schema/System/Number" />
							<Object ID="{C282AE34-B345-440B-A4E4-4BE02F3FF59F}" Name="Mode" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{077ED7D4-ED67-45D2-9E22-C21E7C591E41}" Name="SetThermostatFanMode" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Set the Fan Mode." >
<![CDATA[
Script=
'
' Z-Wave Fan Mode codes:
' 	Auto/Auto Low = 0 
' 	On/On Low = 1
' 	Auto High = 2
'	On High = 3
' Premise FanControl codes:
' 	Auto = 0 
' 	On = 1

dim oDevice

set oDevice = this.GetDeviceByNodeID(method.NodeID)
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true

	' Convert from Z-Wave to Premise
	select case method.Mode
		case 0: iMode = 0 ' Auto
		case 1: iMode = 1 ' On
		case 2: iMode = 0 ' Auto 
		case 3: iMode = 1 ' On
	end select
	
	oDevice.FanControl = method.Mode

	oDevice.ReceivingUpdate = false	
	set oDevice = nothing
end if
]]>
							<Object ID="{80AA64A9-145B-493D-978C-5B6D63FF6D28}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
							<Object ID="{9F9C9AF4-AED6-494E-9C5E-1CFEA49EA040}" Name="Mode" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{7319FCF0-8A46-4FCD-B68E-257D4902F061}" Name="SetThermostatHVACMode" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Set the HVAC operating mode." >
<![CDATA[
Script=
'
' Z-Wave HVAC Mode codes:
' 	Off = 0 
' 	Heat = 1
'	Cool = 2
'	Auto = 3
'	Aux/Emergency Heat = 4
'	Resume = 5
'	Fan Only = 6
'	Furnace = 7
'	Dry Air = 8
'	Moist Air = 9
'	Auto Changeover = 10
'
' Premise TemperatureMode codes:
' 	Auto = 0 
' 	Heat = 1
'	Cool = 2
'	EmergencyHeat = 3
'	Off = 4


dim oDevice
dim iMode: iMode = 0 ' Auto

set oDevice = this.GetDeviceByNodeID(method.NodeID)
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	
	' Convert from Z-Wave to Premise
	select case method.Mode
		case 0: iMode = 4 ' Off
		case 1: iMode = 1 ' Heat
		case 2: iMode = 2 ' Cool
		case 3: iMode = 0 ' Auto
		case 4: iMode = 3 ' Aux/Emergency Heat
		case 5: iMode = 0 ' Resume
		case 6: iMode = 0 ' Fan Only
		case 7: iMode = 1 ' Furnace
		case 8: iMode = 0 ' Dry Air
		case 9: iMode = 0 ' Moist air
		case 10: iMode = 0 ' Auto Changeover
	end select
	oDevice.TemperatureMode = iMode

	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if
]]>
							<Object ID="{BBA2C51D-6E5A-4472-82DD-7DCBE9A3F019}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
							<Object ID="{1D7EC3B2-63A7-4FB3-8792-C508F72869D7}" Name="Mode" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{3349C39D-FFBC-474B-8059-B98A531B85BD}" Name="SetThermostatHVACState" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Set the current HVAC operating state." >
<![CDATA[
Script=
'
' Z-Wave HVAC State codes:
' 	Off = 0 
' 	Heat = 1
'	Cool = 2
'	PendingHeat = 3
'	PendingCool = 4
' Premise HeatingState codes:
' 	Heat = 1
'	Cool = 2
' 	Off = 4 

' No match for heat/cool pending states
' so translate them into heat/cool states.

dim oDevice
dim iMode: iMode = 4 ' Off

set oDevice = this.GetDeviceByNodeID(method.NodeID)
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	
	select case method.State
		case 0: ' Off
			iMode = 4
			oDevice.CurrentSetpoint = empty
			
		case 1, 3:' Heat or PendingHeat
			iMode = 1
			oDevice.CurrentSetpoint = oDevice.HeatingSetPoint
			
		case 2, 4: ' Cool or PendingCool
			iMode = 2
			oDevice.CurrentSetpoint = oDevice.CoolingSetPoint

	end select
	oDevice.HeatingStatus = iMode

	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if
]]>
							<Object ID="{A4391BCB-28A6-4C90-AFA5-7056060F5694}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
							<Object ID="{21656BFE-3DD2-45D8-9C9D-427E71526CC0}" Name="State" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{67F49189-92B0-4409-8FA7-9AE1F0302B51}" Name="ProcessCmd_ThermostatFanState" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
' Z-Wave Fan State codes:
'	0     Idle
'	1     Running / Running low - Lower speed is selected in case it is a two-speed fan
'	2     Running High - High speed is selected in case it is a two-speed fan
'	3-15  Reserved for future use
' Premise FanStatus codes:
' 	Off = 0
'	On = 1

iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	Dim obj
	oDevice.ReceivingUpdate = true
	'Make sure the command is properly formatted
	if iParms = 4 then
		select case aParms(2)
			case 3: 'Report
				'Make sure this device is a thermostat
				if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Thermostat.Path) then
					if gViziaIsDebugOn(2) then debugout "ProcessCmd_ThermostatFanState(): Process THERMOSTAT_FAN_STATE report command for node=" & aParms(0) & ", state=" & aParms(3)
					'Fan Operating State is the low 4 bits 
					fanOperatingState = aParms(3) And &H0f
					if fanOperatingState = 0 then
						oDevice.FanStatus = 0
					else
						'Ensure any non-zero value causes ON state
						oDevice.FanStatus = 1
					end if
				end if
		end select
	end if
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if
]]>
							<Object ID="{2F5CE6E6-9083-4563-8703-C4AEFA3D2FBD}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{D48A2DF7-3A4F-423A-A1C1-47BCB70AE074}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{9D36FDC8-5D25-4F47-A05B-3DBE76A2FE8B}" Name="ProcessCmd_Basic" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	Dim obj
	oDevice.ReceivingUpdate = true
	select case aParms(2)
		case 1: 'Set
			for each oSensorType in oDevice.GetObjectsByType(Schema.Modules.Leviton.SensorTypes.Classes.SensorType_Binary.Path,false)
				if oSensorType.IsOfExplicitType(Schema.Modules.Leviton.SensorTypes.Classes.SensorType_Binary.Path) then
					' Ensure any non-zero value causes TRUE state
					if gViziaIsDebugOn(2) then debugout "ProcessCmd_Basic(): Process BASIC set command for node=" & aParms(0) & ", state=" & aParms(3)
					if aParms(3) = 0 then
						oSensorType.State = false
					else
						oSensorType.State = true
					end if
				end if
				'set oSensorType = Nothing
			next
			
		case 3: 'Report
			if gViziaIsDebugOn(0) then debugout "ProcessCmd_Basic(): Unhandled BASIC report command for node=" & aParms(0) & ", parms=" & method.parms
	end select
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if
]]>
							<Object ID="{9DDF0326-252D-4C79-97E6-E9C45C7911A1}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{38CC3B0B-3209-4441-ACEC-6E6C1A95A1FF}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{68D04C38-581F-49AE-93F6-FCD64403D6BD}" Name="ProcessCmd_Wake_Up" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true

	select case aParms(2)
		case 6: 'Wakeup interval report
			if iParms >= 6 then
				'Setting the WakeupInterval will cause SetWakeupInterval to be set true (because of OnChangeWakeupInterval)
				'Remember the state of SetWakeupInterval prior to adjusting WakeupInterval
				' then set it back to that value after the assignment of WakeupInterval
				previousState = oDevice.SetWakeupInterval
				oDevice.WakeupInterval = (aParms(3) * 65536) + (aParms(4) * 256) + aParms(5)
				oDevice.SetWakeupInterval = previousState
				if gViziaIsDebugOn(2) then debugout "ProcessCmd_Wake_Up(): <" & now & "> WAKE_UP INTERVAL_REPORT report from node=" & aParms(0) & ", interval=" & oDevice.WakeupInterval
			end if

		case 7: 'Wakeup notification
			if gViziaIsDebugOn(2) then debugout "ProcessCmd_Wake_Up(): <" & now & "> WAKE_UP NOTIFICATION report from node=" & aParms(0) & ", parms=" & method.parms
			oDevice.LastWakeupNotificationTime = now
			'Now that this device is awake, send any pending commands to the device
			oDevice.DeviceIsAwake

		case else: 'Unknown
			if gViziaIsDebugOn(0) then debugout "ProcessCmd_Wake_Up(): <" & now & "> Unknown type of wakeup command: " & method.parms
	end select

	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if

'    WakeUpCmd_IntervalSet           = 0x04,
'    WakeUpCmd_IntervalGet           = 0x05,
'    WakeUpCmd_IntervalReport        = 0x06,
'    WakeUpCmd_Notification          = 0x07,
'    WakeUpCmd_NoMoreInformation     = 0x08 (when sent to the device, puts device to sleep)
]]>
							<Object ID="{F61EAAC2-4B4F-4947-9D49-728DBCA361F1}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{1F06F1E6-7A66-48BC-AE67-25D13DD8419D}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{FCF2E417-F6A7-4BD0-A84B-66151A41375E}" Name="ProcessCmd_Alarm" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
' Command Class 113
iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	select case aParms(2)
		case 5: 'Report
			if gViziaIsDebugOn(2) then debugout "ProcessCmd_Alarm(): node=" & aParms(0) & ", alarmtype=" & aParms(3) & ", alarmlevel=" & aParms(4)
			if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Alarm.Path) then
				oDevice.Alarm = true
				oDevice.AlarmType = aParms(3)
				oDevice.AlarmLevel = aParms(4)
				oDevice.LastAlarmTime = now
			end if
	end select
	system.removeTimer "SendCmd_GetLockState_" & oDevice.Name & oDevice.ObjectID
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if
]]>
							<Object ID="{188AA0DE-54A8-4576-9F73-C8A24E23BF8F}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{30142D9D-801B-474D-A344-3A84ED274248}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{D1744101-4021-4892-B075-BF53FEC3E1D1}" Name="ProcessCmd_SensorAlarm" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	select case aParms(2)
		case 2: 'Report
			for each oSensorType in oDevice.GetObjectsByType(Schema.Modules.Leviton.SensorTypes.Classes.SensorType_Alarm.Path,false)
				if oSensorType.IsOfExplicitType(Schema.Modules.Leviton.SensorTypes.Classes.SensorType_Alarm.Path) then
					if gViziaIsDebugOn(2) then debugout "ProcessCmd_SensorAlarm(): node=" & aParms(0) & ", alarmtype=" & aParms(4) & ", alarmlevel=" & aParms(5)
					if aParms(5) = 0 then
						'Reset SensorAlarm properties
						oSensorType.SensorAlarm = false
						oSensorType.SensorAlarmType = 0
						oSensorType.SensorAlarmLevel = 0
						oSensorType.LastSensorAlarmClearTime = now
					else
						'Set SensorAlarm properties
						oSensorType.SensorAlarm = true
						oSensorType.SensorAlarmType = aParms(4)
						oSensorType.SensorAlarmLevel = aParms(5)
						oSensorType.LastSensorAlarmTime = now
						oSensorType.LastSensorAlarmClearTime = 0
					end if
				end if
			next

	end select
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if


'SensorAlarmCmd_Get              = 0x01,
'SensorAlarmCmd_Report           = 0x02,
'SensorAlarmCmd_SupportedGet     = 0x03,
'SensorAlarmCmd_SupportedReport  = 0x04

'Types:
'General 			0
'Smoke				1
'Carbon Monoxide	2
'Carbon Dioxide		3
'Heat				4
'Flood				5
]]>
							<Object ID="{6ECDF8C7-74D1-4D6D-B4D3-0D9BDFFCF08D}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{19C59AB6-BA06-4607-957B-E68FA6A0F047}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{F2FA09C2-0A4A-4DF1-8BA4-FDE6204DCC57}" Name="ProcessCmd_Battery" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
' Command Class 128

iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	'Battery commands only operate on devices of type BatteryDevice
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.BatteryDevice.Path) = true then
		select case aParms(2)
			case 3: 'Report
				'0xff is a low battery level alarm, otherwise it should be the battery level percentage
				if gViziaIsDebugOn(2) then debugout "ProcessCmd_Battery(): batteryLevel=" & aParms(3)
				if aParms(3) = 255 then
					oDevice.BatteryLevelAlarm = true
				else
					oDevice.BatteryLevel = aParms(3) / 100
					'reset battery alarm automatically (in case batteries are replaced)
					if oDevice.BatteryLevelAlarm = true and aParms(3) = 100 then
						oDevice.BatteryLevelAlarm = false
					end if
				end if
				oDevice.LastBatteryLevelTime = now
		end select
	end if
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if
]]>
							<Object ID="{EE69E25D-7977-4C5E-8FBC-80A9B1035D62}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{664FFECA-142E-467D-B288-D63F066DB565}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{845AE2D0-2BB1-473E-B26C-F9443DED6E9B}" Name="ProcessCmd_ManufacturerSpecific" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	if iParms = 9 then
		oDevice.CodeManufacturer = (aParms(3) * 256) + aParms(4)
		oDevice.CodeProductType  = (aParms(5) * 256) + aParms(6)
		oDevice.CodeProductID    = (aParms(7) * 256) + aParms(8)
		if gViziaIsDebugOn(2) then debugout "ProcessCmd_ManufacturerSpecific(): MANUF=" & oDevice.CodeManufacturer & ", PRODTYPE=" & oDevice.CodeProductType & ", PRODID=" & oDevice.CodeProductID
		oDevice.ConfigureDevice
	end if
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if
]]>
							<Object ID="{153A83DD-0A72-43E8-9D4E-03423D00380C}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{DD8E9183-752B-4FEF-B920-09445BE8C308}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{4FE3BFDB-BDA8-4F9B-9838-06165566A810}" Name="ProcessCmd_Version" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	if iParms = 8 then
		oDevice.VersionZwaveLibraryType = aParms(3)
		oDevice.VersionZwaveProtocol = aParms(4) & "." & aParms(5)
		oDevice.VersionApplication = aParms(6) & "." & aParms(7)
	end if
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if
]]>
							<Object ID="{9D26605A-D456-4B6F-8F74-E22A04462EF0}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{8954A038-5BBB-4705-A511-0B57EF4E4DFA}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{CDD66FC4-1168-439A-9279-091CFE45F233}" Name="ProcessCmd_SensorMultilevel" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	'Sensor_Multilevel commands only operate on devices of type BatteryDevice
	'Note: The above statement is probably not true, as it appears that thermostats can emit SensorMultilevel commands
	'      At some point, we may need to adjust the conditional to test for Classes.Thermostat.Path
	'      If we attach a SensorType_Temperature child object to the thermostat device, gViziaProcessSensorMultilevel
	'      should work without any changes
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.BatteryDevice.Path) = true then
		if gViziaIsDebugOn(2) then debugout "ProcessCmd_SensorMultilevel(): time=" & now
		result = gViziaProcessSensorMultilevel( oDevice, aParms, iParms )
	end if
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if]]>
							<Object ID="{8F722BCE-4981-4216-A278-5AF07C62E265}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{E6DC12BB-EE10-4EA0-9AD4-BF5B60A08103}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{7D3DE4C4-EB8A-4735-9BBE-9321B92120DE}" Name="ProcessCmd_MultiInstance" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	'MultiInstance commands only operate on devices of type BatteryDevice
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.BatteryDevice.Path) = true then
		if gViziaIsDebugOn(2) then debugout "ProcessCmd_MultiInstance(): time=" & now
		result = gViziaProcessSensorMultilevel( oDevice, aParms, iParms )
	end if
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if
]]>
							<Object ID="{9A77B5F2-6CD9-4082-B454-FBCC187A0756}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{6B99CF92-7531-43C8-A5CD-ABE9B79C94A3}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{98CE0F00-618C-4A00-BB73-98CB3E045795}" Name="ProcessCmd_Configuration" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	'Configuration commands only operate on devices of type BatteryDevice
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.BatteryDevice.Path) = true then
		if aParms(2) = 6 then  'Report
			'If the sensor device has a reference to an object, and the object is of type Model,
			' then process the model-specific command from the device
			if Not oDevice.DeviceModelDetails is Nothing then
				if odevice.DeviceModelDetails.IsOfExplicitType(Schema.Modules.Leviton.Models.Classes.Model.Path) then
					parameterNumber = aParms(3)
					'Number of bytes are contained in bits 0-2
					numBytes = aParms(4) And &H07
					select case numBytes
						case 1:
							parameterValue = aParms(5)
						case 2:
							parameterValue = (aParms(5)*256) + aParms(6)
						case 3:
							parameterValue = (aParms(5)*65536) + (aParms(6)*256) + aParms(7)
						case 4:
							parameterValue = (aParms(5)*16777216) + (aParms(6)*65536) + (aParms(7)*265) + aParms(8)
					end select
					if gViziaIsDebugOn(2) then debugout "ProcessCmd_Configuration(): parameterNumber=" & parameterNumber & ", parameterValue=" & parameterValue
					oDevice.DeviceModelDetails.ProcessConfigurationCommand parameterNumber, parameterValue
				end if
			end if
		end if
	end if
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if
]]>
							<Object ID="{E4DD894E-7407-4858-8465-974C67F6A3BF}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{EA2D3DF5-00ED-4CE9-B4D3-836A7F46B853}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{F0741B2A-8051-4E29-8369-601E1EF180CD}" Name="ProcessCmd_SceneActuatorConfiguration" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Lighting.Path) then
		oDevice.ReceivingUpdate = true
		this.SetLightLevel aParms(0), aParms(4)				
		oDevice.ReceivingUpdate = false
	end if
	set oDevice = nothing
end if
]]>
							<Object ID="{F3C1F909-DA62-41DD-9564-039526A0D2A1}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{E9EFAC2F-DB89-4ED5-B43C-D26412C03476}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{6B7EEB3F-51D2-46A1-AE69-C1EDCF7B65EB}" Name="ProcessCmd_TamperProof" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
' Update tamperproof setting (117)

iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.TamperProof.Path) then
		oDevice.ReceivingUpdate = true
		select case aParms(3)
			case 0:
				oDevice.TamperProof = 0
			case 1: 
				oDevice.TamperProof = 1
			case 2: 
				oDevice.TamperProof = 2			
		end select
		oDevice.ReceivingUpdate = false
	end if
	set oDevice = nothing
end if]]>
							<Object ID="{BC23A00D-8262-41C2-A367-97166989F313}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{AC1B345E-0D8D-469A-BD5E-C015E14E40AE}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{208B1E39-3051-4C58-A1F6-90CD7277FCF7}" Name="ProcessCmd_UserCode" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
' Command Class 99
' Update user code

iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )

if not oDevice is nothing then
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.UserCode.Path) then
		oDevice.ReceivingUpdate = true
		select case aParms(2)
			case 3: 'Receive user data
				'aParms(3) = UserNumber, aParms(4) = UserStatus aParms(5) = first digit...
				if  aParms(4) = 0 and ubound(aParms) = 4 then
					' delete UserCode from SYS
					oDevice.DeleteUserCode aParms(3)
				else
					' process usercode
					sUserCode = ""
					for iCount = 5 to ubound(aParms)
						sUserCode = sUserCode & chr(aParms(iCount))
					next
					oDevice.SetUserCode aParms(3), sUserCode
				end if
					'
			case 5: 'Receive max num users
				oDevice.MaxNumUsersSupported = aParms(3)
		end select
		oDevice.ReceivingUpdate = false
	end if
	set oDevice = nothing
end if]]>
							<Object ID="{11CE441B-6C40-4B40-B26C-6C3F8D9600B3}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{2AFB3C46-3E7C-4073-B8D4-EDA51E250C4B}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{5F019EA2-2034-4751-B974-568F0BB33EBD}" Name="ProcessCmd_Lock" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
' Command Class 98
' Update lock following a poll or status update (HAIL)

iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Lock.Path) and aParms(2) = 5 then
		select case aParms(3)
			case 255: 'Lock
				select case aParms(5) 'hardware state of latch
					case 0:	
						oDevice.Unlocked = false
					case 2:
						' fail safe to unlock position eventhough door may be partially locked
						' the locks firmware should fail safe for us, but just in case...
						oDevice.Unlocked = true
				end select
			case 0: 'Unlock
				select case aParms(5) 'hardware state of latch
					case 0:	
						oDevice.Unlocked = true
					case 2:
						' fail safe to unlock position eventhough door may be partially locked
						' the locks firmware should fail safe for us, but just in case... 
						oDevice.Unlocked = true
				end select
			end select
	elseif oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Lock.Path) and aParms(2) = 3 then
		select case aParms(3)
			case 255: 'Lock
				select case aParms(5) 'hardware state of latch
					case 0:	
						oDevice.Unlocked = false
					case 2:
						' fail safe to unlock position eventhough door may be partially locked
						' the locks firmware should fail safe for us, but just in case...
						oDevice.Unlocked = true
				end select
			case 0: 'Unlock
				select case aParms(5) 'hardware state of latch
					case 0:	
						oDevice.Unlocked = true
					case 2:
						' fail safe to unlock position eventhough door may be partially locked
						' the locks firmware should fail safe for us, but just in case... 
						oDevice.Unlocked = true
				end select
			end select
	end if
	
	
	
	' remove get request since lock reported status already
	system.removeTimer "SendCmd_GetLockState_" & oDevice.Name & oDevice.ObjectID
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if]]>
							<Object ID="{546443C4-6313-44B0-B79E-4F4A18299AEF}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{A10367A1-F20E-4094-9BB2-3665AF05F208}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{3C458578-7603-40D5-9C64-914DEB8BDDA7}" Name="ProcessCmd_ManufacturerProprietary" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
' Command Class 145
iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	if aParms(2) = 0 and aParms(3) = 29 and aParms(4) = 12 and aParms(6) = 0 then
		if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Controller.Path) then
			' VRC0P implementation for third party control of controller buttons
			' <N064:145,000,029,012,003,000
			' <N064:145,000,029,012,007,000
		
			' pass aParms(5) to correct controller button
			for each oButton in this.GetObjectsByTypeAndPropertyValue(modules.Leviton.Classes.Button.Path, "Address",aParms(5),true)
				'oButton.PressReceived = true
				oButton.ButtonState = 1
				'system.addTimer .1, "oButton.ButtonState = 0",1, "Release_" & this.ObjectID
			next
		end if
	end if
	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if]]>
							<Object ID="{BB9E3FCB-5B37-4C5B-B54D-0DE383226011}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{1338D250-71F6-42C2-9648-23E4921E3A1C}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{A8BE1033-5592-485C-AF68-74DD70B28ADC}" Name="ProcessCmd_Association" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
' Command Class 133
iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Associations.Path) then
		oDevice.ReceivingUpdate = true
		select case aParms(2)
			case 3: 'Get assocations report 
			' Example: Node 8 Group 1 has node 9 associated with it.  
			'<N008:133,003,001,232,000,009
			if ubound(aParms) > 5 then
				sAssociations = ""
				for iCount = 6 to ubound(aParms)
					sAssociations = sAssociations & "," & aParms(iCount)
				next
				' clean first comma
				sAssociations = right(sAssociations,len(sAssociations)-1)
			end if
			
			' Check for children of type GroupAssociation
			' Find GroupID
			for each oGroup in oDevice.GetObjectsByType(Modules.Leviton.Classes.GroupAssociation.Path, true)
				if oGroup.GroupID = cint(aParms(3)) then oGroup.Associations = sAssociations
			next
			
			' Check for case of no children
			if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.GroupAssociation.Path) then
				if oDevice.GroupID = cint(aParms(3)) then oDevice.Associations = sAssociations
			end if
			
			case 6: 'Get max supported assocations report
				if gViziaIsDebugOn(2) then debugout "ProcessCmd_ASSOCIATION(): node=" & aParms(0) & ", groups_supported=" & aParms(3)
				oDevice.SetValueForced "Groups", aParms(3)
		end select
		system.removeTimer "SendCmd_GetLockState_" & oDevice.Name & oDevice.ObjectID
		oDevice.ReceivingUpdate = false
	end if
	set oDevice = nothing
end if]]>
							<Object ID="{E7C1EF59-3D87-4081-B7B1-A84DDB98C5C3}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{3071F809-9FE5-4FE6-AC1E-449D31DE6DFE}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{03652ED4-544E-4682-9262-8935B353BC71}" Name="ProcessCmd_SwitchMultilevel" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
' Command Class 38
iParms = method.numparms
aParms = gViziaArgsUnpack( method.parms, method.numparms )

dim oDevice
set oDevice = this.GetDeviceByNodeID( aParms(0) )
if not oDevice is nothing then
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.SwitchMultilevel.Path) = true then
		oDevice.ReceivingUpdate = true
		'Switch_Multilevel commands are seen on Leviton's zone controller when the up/down (bright/dim) buttons are pressed.
		'Not sure what else uses them...
		select case aParms(2)
			case 4: 'Report
				
				' we can force level state changes for zone controllers (e.g. VRCZ4) that will
				' pass the same level each time an up/down button is pressed 
				if oDevice.ForceLevelStateChange = true then 
					oDevice.SetValueForced "Level",aParms(3)/100
				else
					oDevice.Level =  aParms(3)/100
				end if
				
				if aParms(3) = 99 then oDevice.Level = 1

		end select
		if gViziaIsDebugOn(2) then debugout "ProcessCmd_SwitchMultilevel(): time=" & now
		oDevice.ReceivingUpdate = false
	end if
	set oDevice = nothing
end if]]>
							<Object ID="{37F9F457-C603-4A24-86C5-F7CB3F8CBD28}" Name="parms" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{56F50211-AA96-4CF1-BC6A-4A34E0EB123C}" Name="numparms" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{4EA244E6-5BE0-408E-BA4F-0A125AE5A0C4}" Name="ProcessCmd_Discovery" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
if this.InDiscoveryMode = true then 
	this.Parent.Jobs.ConsecutiveFailedJobs = 0
	this.CurrentDiscoveryNodeID = 1
	select case this.DiscoveryType
		case 16: ' Switches
			' No more Switches. Move on to discovering Dimmers.
			this.DiscoveryBasicClass = 0
			this.DiscoveryType = 17
			this.DiscoveryStatus = "Discovering Dimmers ..."
			if gViziaIsDebugOn(1) then debugout "Discovering Dimmers ..."
			this.Parent.SendCommand ">?FI0,17,0,1", false, 996

		case 17: ' Dimmers	
			' No more Dimmers or Switches. Move on to discovering Thermostats.
			this.DiscoveryBasicClass = 0
			this.DiscoveryType = 8
			this.DiscoveryStatus = "Discovering Thermostats ..."
			if gViziaIsDebugOn(1) then debugout "Discovering Thermostats ..."
			this.Parent.SendCommand ">?FI0,8,0,1", false, 996

		case 8: ' Thermostats
			' No more Thermostats. Move on to discovering Alarm Sensors.
			this.DiscoveryBasicClass = 0
			this.DiscoveryType = 161
			this.DiscoveryStatus = "Discovering Alarm Sensors ..."
			if gViziaIsDebugOn(1) then debugout "Discovering Alarm Sensors ..."
			this.Parent.SendCommand ">?FI0,161,0,1", false, 996

		case 161: ' Alarm Sensors
			' No more Alarm Sensors. Move on to discovering Multilevel Sensors.
			this.DiscoveryBasicClass = 0
			this.DiscoveryType = 33
			this.DiscoveryStatus = "Discovering Multilevel Sensors ..."
			if gViziaIsDebugOn(1) then debugout "Discovering Multilevel Sensors ..."
			this.Parent.SendCommand ">?FI0,33,0,1", false, 996

		case 33: ' Multilevel Sensors
			' No more Multilevel Sensors. Move on to discovering Binary Sensors.
			this.DiscoveryBasicClass = 0
			this.DiscoveryType = 32
			this.DiscoveryStatus = "Discovering Binary Sensors ..."
			if gViziaIsDebugOn(1) then debugout "Discovering Binary Sensors ..."
			this.Parent.SendCommand ">?FI0,32,0,1", false, 996

		case 32: ' Binary Sensors
			' No more Binary Sensors. Move on to discovering locks.
			this.DiscoveryBasicClass = 0
			this.DiscoveryType = 64
			this.DiscoveryStatus = "Discovering Locks ..."
			if gViziaIsDebugOn(1) then debugout "Discovering Locks ..."
			this.Parent.SendCommand ">?FI0,64,0,1", false, 996

		case 64: ' Lock									
			' No more Locks. Move on to discovering Static Controllers.
			this.DiscoveryBasicClass = 2
			this.DiscoveryType = 1
			this.DiscoveryStatus = "Discovering Static Controllers ..."
			if gViziaIsDebugOn(1) then debugout "Discovering Static Controllers ..."
			this.Parent.SendCommand ">?FI2,1,0,1", false, 996

		case 1: 
			' No more Controllers. Quit and reset.
			this.DeleteOrphanDevices
			this.ResetDiscovery
			this.InitializeDevices
												
			'reset device counters
			this.ResetFailedJobs
			this.ResetLocalManipulations	
	end select				

	this.Parent.Jobs.GetNextJob
else
	this.Parent.Jobs.RetryJob
end if]]>
						</Object>
						<Object ID="{ED7566D0-DB8B-4C16-8282-0C3653F8BE4B}" Name="ResetLocalManipulations" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Resets the device specific local manipulations count." >
<![CDATA[
Script=
' Reest local manipulation count for all devices
' This method is called upon initialization of viziaRF.
' This method is also called upon completion of Discovery by OnChangeOnNewData.

for each oDevice in this.GetObjectsByPropertyName("LocalManipulations")
	if oDevice.LocalManipulations <> 0 then oDevice.LocalManipulations = 0
next]]>
						</Object>
						<Object ID="{4BC8E351-F1F7-4E6A-8395-A601C0E6C1CB}" Name="SetLocallyManipulated" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Set Powerstate and Brightness" >
<![CDATA[
Script=
'
' Called by OnChangeOnNewData to update toggle status for a dimmer or switch
' Since the dimmer class inherits from the switch class, 
' the toggle property is located under the switch class. 

dim oDevice

set oDevice = this.GetDeviceByNodeID(method.NodeID)
if not oDevice is nothing then	
	with oDevice
		' Toggle locally manipulated boolean
		if .LocallyManipulated = true then
			.LocallyManipulated = false
		else
			.LocallyManipulated = true
		end if

		' Increment local manipulations count
		.LocalManipulations = .LocalManipulations + 1
	end with
	
	set oDevice = nothing
end if	]]>
							<Object ID="{8DBF42F0-D383-40FE-862E-1CB7B1B0737F}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{442498AB-7A23-4D1C-9315-63FCFD74D324}" Name="ResetFailedJobs" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Resets the device specific job count for all devices." >
<![CDATA[
Script=
' Reest the device specific failed job count
' This method is called upon initialization of viziaRF.
' This method is also called upon completion of Discovery by OnChangeOnNewData.

for each oDevice in this.GetObjectsByPropertyName("FailedJobs")
	if oDevice.FailedJobs <> 0 then oDevice.FailedJobs = 0
next]]>
						</Object>
						<Object ID="{A0F66F87-52A5-406A-A76D-880534F9EC16}" Name="SetFailedJob" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Increment device specific failed job count." >
<![CDATA[
Script=
'
' Called only by RetryJob to increment the failed job count for a device.

dim oDevice

set oDevice = this.GetDeviceByNodeID(method.NodeID)

if not oDevice is nothing then	

	' Increment device specific failed job count
	oDevice.FailedJobs = oDevice.FailedJobs + 1
	
	set oDevice = nothing
end if	]]>
							<Object ID="{AAEFE58F-882D-4486-9B8F-87317A0157A3}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{35FDEB53-FC38-4720-947D-453E720A8E05}" Name="SetEventNotification" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'
' Set an event notification with in Premise Builder
' The user has the option of enabling emails based on event severity (see Premise Builder help files).
 
dim oDevice
dim oEvent

set oDevice = this.GetDeviceByNodeID(method.NodeID)

if not oDevice is nothing then	
	set oEvent = Events.CreateObject(Schema.System.Event.Path, method.DeviceType & "-" & oDevice.Name)
	with oEvent
		.Description = method.DeviceType & " " & oDevice.Name & " with node ID " & method.NodeID & " " & method.EventText
		.Severity = method.Severity
		.EventTime = Now
		.LinkObject = oDevice
	end with
	set oDevice = nothing
end if]]>
							<Object ID="{6074E88C-FA6E-4AA1-ADE2-6ED90A89C5D6}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
							<Object ID="{41519003-DDEF-430A-AE16-B70AEA27EADD}" Name="Severity" Flags="0x900" Class="sys://Schema/System/Number" />
							<Object ID="{1008AE93-50CD-4323-8D93-44503C72209C}" Name="DeviceType" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{C71C6A69-4A02-49DD-A362-5066550E1242}" Name="EventText" Flags="0x900" Class="sys://Schema/System/Text" />
						</Object>
						<Object ID="{52AF6BA1-61E4-475D-B7EC-1E5FE4EF1735}" Name="SetThermostatFanState" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Set current Fan operating state." >
<![CDATA[
Script=
'
' NOTE: Do not know the total number of Z-Wave fan states.
'
' Z-Wave Fan State codes:
' 	Off = 0 
' 	On = 1
'	Others States?
' Premise FanStatus codes:
' 	Off = 0
'	On = 1

dim oDevice

set oDevice = this.GetDeviceByNodeID(method.NodeID)
if not oDevice is nothing then
	oDevice.ReceivingUpdate = true
	
	' If there are more than two Z-Wave fan states,
	' this next line may fail!
	oDevice.FanStatus = method.State

	oDevice.ReceivingUpdate = false
	set oDevice = nothing
end if
]]>
							<Object ID="{3F218DA8-44F5-4E00-A30B-F5C05D77FE09}" Name="NodeID" Class="sys://Schema/System/Number" />
							<Object ID="{DD52381D-A5A0-4CF4-A94F-62274B7B6787}" Name="State" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{E24A7BF8-D0FF-45D2-A1D0-0430443316D5}" Name="InitializeDevices" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'
this.Initializing = true

this.ImportDeviceNames
this.ImportModel
this.ImportVersion

' Poll all Devices unless Polling is already enabled
if this.PollingInterval = 0 then 
	this.PollDevices
end if

for each oDevice in this.GetObjectsByType(Schema.Modules.Leviton.Classes.Device.Path)
	'Skip devices of type Wakeup, as those devices are asleep and/or often don't support device naming
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Wakeup.Path) = false then
		' set individual parameters for each device
		oDevice.SetInit
	end if
next]]>
						</Object>
						<Object ID="{D038DF0D-29D5-47EE-9219-04FAB64F4CE3}" Name="iCount" Flags="0x900" Class="sys://Schema/System/Number" />
						<Object ID="{CD76003D-17F8-414A-AD49-5B7F3644491B}" Name="Initializing" Flags="0x900" Class="sys://Schema/System/Boolean" Description="Initializing devices..." ReadOnly="-1" />
					</Object>
					<Object ID="{7FD4DC2D-07D4-43C5-8FCA-8706ADC665B8}" Name="Device" Class="sys://Schema/System/Class" Description="Base class for all Z-Wave devices." Virtual="-1" Transformable="-1" Icon="AgAAAD4BAAAAAAEAAQAQEBAAAAAAACgBAAAWAAAAKAAAABAAAAAgAAAAAQAEAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAAAAAFUFUAAAAABVVQVVUAAAVVVVBVVVUABVVVUFVVVQAFVVVQVVVVAAVVVVBVVVUABVVQBQBVVQAFUAVVVQBVAAAFVVVVVQAABVVVVVVVVQAABVVVVVUAAAAABVVVAAAAAAAABQAAAAAAAAAAAAAAAP7/AAD4PwAA4A8AAIADAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAIADAADgDwAA+D8AAP7/AAA=" >
						<Object ID="{A861A3EF-1753-4D4E-9AFC-E917611EB868}" Name="Binding" Class="sys://Schema/System/SuperClass" LinkObject="{65311CA4-A02B-41D5-B8C0-156A1325BA6A}" />
						<Object ID="{99AF98EB-8BE5-4948-8120-A443493D8787}" Name="NodeID" Flags="0xB00" Class="sys://Schema/System/Number" Bindable="-1" Description="Node Identifier" />
						<Object ID="{C8AEA3D2-56FA-4A31-9063-C004BDACA918}" Name="FailedJobs" Flags="0x900" Class="sys://Schema/System/Number" Description="If a job for a device is retried the max number of times and fails, this value is incremented." ReadOnly="-1" />
						<Object ID="{E6EAB02E-A558-4E0B-9F28-1B2173C381A9}" Name="MaxFailedJobs" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="5" Description="Failed jobs below this count will not result in an event being set." />
						<Object ID="{1C526416-07DF-439F-AFE9-DBE8FF4E0F81}" Name="ReceivingUpdate" Flags="0x900" Class="sys://Schema/System/Boolean" ReadOnly="-1" Browsable="0" />
						<Object ID="{B184A806-A40D-49ED-882A-EF53F9B0BB1E}" Name="OneWay" Flags="0x900" Class="sys://Schema/System/Boolean" Description="This Device does not automatically report its status and needs to be polled." />
						<Object ID="{F132B9A0-F355-4FC6-BB0A-512BEBC30107}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" Description="Received as part of MANUFACTURER_SPECIFIC command class" DisplayName="Manufacturer" ReadOnly="-1" />
						<Object ID="{305BCA9E-4EF6-4947-8A2A-DE81C94C3D7F}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" Description="Received as part of MANUFACTURER_SPECIFIC command class" DisplayName="Product Type" ReadOnly="-1" />
						<Object ID="{64910D18-DF7A-4D43-BF25-41C744DAFFDD}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" Description="Received as part of MANUFACTURER_SPECIFIC command class" DisplayName="Product ID" ReadOnly="-1" />
						<Object ID="{578C8213-8AC0-40BB-9B05-FDA726AA5985}" Name="VersionZwaveLibraryType" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
						<Object ID="{61E3524E-317E-4B89-B262-281547D0AA4A}" Name="VersionZwaveProtocol" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
						<Object ID="{A34D1378-BD75-4EF8-903F-34DB7CF28D49}" Name="VersionApplication" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
						<Object ID="{27D6A89C-DD8F-4E93-9E2F-1D4CBF636665}" Name="DeviceModelDetails" Flags="0x900" Class="sys://Schema/System/ObjectRef" Location="{F55D3197-6B59-4D76-B5BB-3A60E10081CC}" />
						<Object ID="{D19D8A3F-9F78-4878-B582-734FB740C8BA}" Name="SendCmd_GetManufacturerSpecific" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Request the MANUFACTURER_SPECIFIC report from the device
'The information in the report will be used to associate a model
'child object with the device, as well as child objects for the 
'types of sensor(s) supported by the device (if it is a sensor device)

command = ">N" & this.NodeID & "SE114,4"
this.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_GetManufacturerSpecific(): MANUFACTURER_SPECIFIC GET from node=" & this.NodeID
]]>
						</Object>
						<Object ID="{8CAE93D8-D7BE-45C3-9F9B-3D08A75169BC}" Name="SendCmd_GetVersion" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Request version information from the device

command = ">N" & this.NodeID & "SE134,17"
this.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_GetVersion(): VERSION GET from node=" & this.NodeID
]]>
						</Object>
						<Object ID="{AF9B5538-267A-4F8E-92B4-EF2B3610C6C0}" Name="ConfigureDevice" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
if gViziaIsDebugOn(1) then debugout "ConfigureDevice(): CONFIGURE DEVICE MODEL for " &  this.Name

'This function is called from ProcessCmd_ManufacturerSpecific upon receipt 
'of a MANUFACTURER_SPECIFIC command class containing codes for the device's 
'manufacturer, product type, and product ID.

'Iterate over the DeviceModels enumeration class to determine whether
'the device is among the supported model types.  It is a known device
'if the device's manufacturer, product type, and product id matches one
'of the models in the enumeration.  If a match is found,add the child 
'object for the device.
for each obj in Modules.Leviton.Models.Classes.DeviceModels.GetChildren()
	sModel = "Model_" & obj.Name
	sPath = "sys://Schema/Modules/Leviton/Models/Classes/" & sModel
	dim obj
	set obj = sys.GetObject(sPath)
	if not obj is nothing then
		if obj.CodeManufacturer = this.CodeManufacturer And obj.CodeProductType = this.CodeProductType And obj.CodeProductID = this.CodeProductID then
			'FIRST check to see if the object is already a child of this object
			if this.ChildExists(sPath) = false then
				if gViziaIsDebugOn(1) then debugout "ConfigureDevice(): CREATE MODEL " & sModel
				set oModel = this.CreateObject( sPath, sModel )
				if not oModel is Nothing then
					'this.DeviceModel = obj.Name
					oModel.DisplayName = obj.DisplayName
					oModel.Description = obj.Description
					'set the ObjectRef
					this.DeviceModelDetails = oModel
					set oModel = Nothing
				end if
			else
				'Model object already exists
				if gViziaIsDebugOn(0) then debugout "ConfigureDevice(): WARNING - Model object already exists as a child of this device, model=" & sModel
			end if

			'Iterate through obj.Capabilities to create SensorType_XXXXXXX objects
			dim oSensorType
			capabilities = Split( obj.Capabilities, "," )
			for each c in capabilities
				select case c
					case "1":
						sSensorType = "SensorType_Binary"
					case "2":
						sSensorType = "SensorType_Alarm"
					case "3":
						sSensorType = "SensorType_Temperature"
					case "4":
						sSensorType = "SensorType_Humidity"
					case "5":
						sSensorType = "SensorType_Light"
					case else:
						if gViziaIsDebugOn(0) then debugout "ConfigureDevice(): Unsupported capability c=" & c
						sSensorType = ""
				end select
				if sSensorType <> "" then
					sPath = "sys://Schema/Modules/Leviton/SensorTypes/Classes/" & sSensorType
					if this.ChildExists(sPath) = false then
						if gViziaIsDebugOn(1) then debugout "ConfigureDevice(): CREATE SENSORTYPE " & sSensorType
						set oSensorType = this.CreateObject( sPath, sSensorType )
						if Not oSensorType is Nothing then
							set oSensorType = Nothing
						end if
					else
						'SensorType object already exists
						if gViziaIsDebugOn(0) then debugout "ConfigureDevice(): WARNING - SensorType object already exists as a child of this device, sensortype=" & sSensorType
					end if
				end if
			next
		end if
		'If this is a device supporting Wakeup, request the wakeup interval and
		'battery status next time the device wakes up
		if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Wakeup.Path) = true then
			this.GetWakeupInterval = true
		end if
		if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.BatteryDevice.Path) = true then
			this.GetBatteryLevel = true
		end if
		set obj = Nothing
	end if
next
]]>
						</Object>
						<Object ID="{A96A4C23-11E1-46E6-B86E-A19A4F3BBC4E}" Name="ChildExists" Class="sys://Schema/Scripting/SimpleClassMethod" ReturnParameter="{7F2A9967-71D5-40A9-B6B4-8BB79CD93D97}" >
<![CDATA[
Script=
'See if a child object of this type already exists

method.Result = false
for each oChild in this.GetChildren(2)
	if oChild.IsOfExplicitType(method.Path) = true then
		method.Result = true
	end if
next
]]>
							<Object ID="{8249A5F3-B19E-4D35-BC62-ECAAA37E7C9D}" Name="Path" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{7F2A9967-71D5-40A9-B6B4-8BB79CD93D97}" Name="Result" Flags="0x900" Class="sys://Schema/System/Boolean" />
						</Object>
						<Object ID="{7DC568BF-B262-47E4-886D-EF5CADAEB504}" Name="OnChangeFailedJobs" Class="sys://Schema/Scripting/ClassProperty" Property="{C8AEA3D2-56FA-4A31-9063-C004BDACA918}" >
<![CDATA[
Script=
'
' If failed job count exceeds 5, alert the user to check the device
' It is important to check for bad batteries or even a light bulb 
' (some incandescent dimmers use the bulb for the return to neutral that would give control power)
' A failed device could cause the network to slow if it's a bottleneck
' Due to the importance of all devices working, we set a higher than normal event severity

if sysevent.newVal >= this.MaxFailedJobs then
	this.Parent.SetEventNotification this.NodeID, 70, "", "has failed to respond " & this.Parent.Parent.JobQueue.MaxConsecutiveFailedJobs * this.FailedJobs & " times."
end if]]>
						</Object>
						<Object ID="{9285F9FE-11CC-4682-906E-AB0652104263}" Name="SetInit" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Runs following discovery." >
<![CDATA[
Script=
' initialize devices once the discovery process completes
' do setinit only for devices that are always awake
if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Wakeup.Path) = false then
	if this.IsOfExplicitType(modules.Leviton.Classes.Associations.Path) then
		' get number of buttons
		this.SendCmd_GetSupportedAssociations
	end if

	if this.IsOfExplicitType(modules.Leviton.Classes.Lock.Path) then
		' initialize parameters
		system.addTimer 2,"on error resume next:this.Parent.QueryLock this.NodeID",1,"QueryLock_" & this.ObjectID
		system.addTimer 4,"on error resume next:this.SendCmd_GetBatteryLevel",1, "GetBatteryLevel_" & this.ObjectID
		system.addTimer 6, "on error resume next:this.SendCmd_GetNumUsers",1,"GetNumUsers_" & this.ObjectID
		system.addTimer 8, "on error resume next:this.SendCmd_GetTamperProof",1,"GetTamperProof_" & this.ObjectID
		' ensure lock is associated with VRC0P
		system.addTimer 10, "on error resume next:this.AssociateWithVRC0P = true",1,"Associate_" & this.ObjectID
	elseif this.IsOfExplicitType(modules.Leviton.Classes.Controller.Path) then
		' send  proprietary command to enable use of the control buttons by a third party device...
		this.SendCmd_SetManufacturerProprietaryThridPartyControl
	end if
end if]]>
						</Object>
						<Object ID="{D4CB703B-99DC-4FBD-9B41-BAF0C09C3AAE}" Class="sys://Schema/System/SuperClass" LinkObject="{FD07A77F-F9C8-4917-9A57-99804075D751}" />
					</Object>
					<Object ID="{783E650E-B3FD-4CBD-BD40-398D731C65E9}" Name="Secure" Class="sys://Schema/System/Class" Description="Base class for devices that use secure commands.  VRC0Pv3 is required." Icon="" Virtual="-1" />
					<Object ID="{A9DE68F7-3EAA-4ACB-9CBC-49C828D5F39F}" Name="Alarm" Class="sys://Schema/System/Class" Virtual="-1" Icon="AgAAAH4FAAAAAAEAAQAQEAAAAAAAAGgFAAAWAAAAKAAAABAAAAAgAAAAAQAIAAAAAABAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAwNzAAPDKpgDU8P8AseL/AI7U/wBrxv8ASLj/ACWq/wAAqv8AAJLcAAB6uQAAYpYAAEpzAAAyUADU4/8Ascf/AI6r/wBrj/8ASHP/ACVX/wAAVf8AAEncAAA9uQAAMZYAACVzAAAZUADU1P8AsbH/AI6O/wBra/8ASEj/ACUl/wAAAP8AAADcAAAAuQAAAJYAAABzAAAAUADj1P8Ax7H/AKuO/wCPa/8Ac0j/AFcl/wBVAP8ASQDcAD0AuQAxAJYAJQBzABkAUADw1P8A4rH/ANSO/wDGa/8AuEj/AKol/wCqAP8AkgDcAHoAuQBiAJYASgBzADIAUAD/1P8A/7H/AP+O/wD/a/8A/0j/AP8l/wD/AP8A3ADcALkAuQCWAJYAcwBzAFAAUAD/1PAA/7HiAP+O1AD/a8YA/0i4AP8lqgD/AKoA3ACSALkAegCWAGIAcwBKAFAAMgD/1OMA/7HHAP+OqwD/a48A/0hzAP8lVwD/AFUA3ABJALkAPQCWADEAcwAlAFAAGQD/1NQA/7GxAP+OjgD/a2sA/0hIAP8lJQD/AAAA3AAAALkAAACWAAAAcwAAAFAAAAD/49QA/8exAP+rjgD/j2sA/3NIAP9XJQD/VQAA3EkAALk9AACWMQAAcyUAAFAZAAD/8NQA/+KxAP/UjgD/xmsA/7hIAP+qJQD/qgAA3JIAALl6AACWYgAAc0oAAFAyAAD//9QA//+xAP//jgD//2sA//9IAP//JQD//wAA3NwAALm5AACWlgAAc3MAAFBQAADw/9QA4v+xANT/jgDG/2sAuP9IAKr/JQCq/wAAktwAAHq5AABilgAASnMAADJQAADj/9QAx/+xAKv/jgCP/2sAc/9IAFf/JQBV/wAASdwAAD25AAAxlgAAJXMAABlQAADU/9QAsf+xAI7/jgBr/2sASP9IACX/JQAA/wAAANwAAAC5AAAAlgAAAHMAAABQAADU/+MAsf/HAI7/qwBr/48ASP9zACX/VwAA/1UAANxJAAC5PQAAljEAAHMlAABQGQDU//AAsf/iAI7/1ABr/8YASP+4ACX/qgAA/6oAANySAAC5egAAlmIAAHNKAABQMgDU//8Asf//AI7//wBr//8ASP//ACX//wAA//8AANzcAAC5uQAAlpYAAHNzAABQUADy8vIA5ubmANra2gDOzs4AwsLCALa2tgCqqqoAnp6eAJKSkgCGhoYAenp6AG5ubgBiYmIAVlZWAEpKSgA+Pj4AMjIyACYmJgAaGhoADg4OAPD7/wCkoKAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAAIiIiIyMjJCQlJSYmACsAAAAAAAAAAAAAAAAAAAAqKwAAAAAiIiIjIyMkJCUAKiorAAAAAAAAAAAAAAAAACorACIiIiMjIyQkJSUmJgArAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAAAAAAAAAAAAAAAAAAiAAAAAAAAAAAAAAAAACIAKAAiAAAAAAAAAAAAAAAAIyojAAAAAAAAAAAAACQiKComKigiJAAAAAAAAAAAAAAjKiMAAAAAAAAAAAAAAAAiACgAIgAAAAAAAAAAAAAAAAAiAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA//8AAAALAAD/+QAA4AgAAP/5AAAACwAA//8AAPf/AAD3/wAA1f8AAOP/AAAAfwAA4/8AANX/AAD3/wAA9/8AAA==" >
						<Object ID="{B16E7FAC-F9A0-42AF-AD7D-909103801D1A}" Name="Alarm" Flags="0x900" Class="sys://Schema/System/Boolean" />
						<Object ID="{58953BEC-7978-4DE0-A961-BC7DA78D975C}" Name="AlarmType" Flags="0x900" Class="sys://Schema/System/Number" />
						<Object ID="{F42BB065-26D7-4380-9DE2-E485E089D640}" Name="AlarmLevel" Flags="0x900" Class="sys://Schema/System/Number" />
						<Object ID="{9A27B044-39EE-4502-9897-12B863DB1171}" Name="LastAlarmTime" Flags="0x900" Class="sys://Schema/System/DateTime" DefaultValue="3/16/2011 8:01:05 PM" ReadOnly="-1" />
					</Object>
					<Object ID="{3F8287FE-1104-4979-901F-ED72046073D7}" Name="Wakeup" Class="sys://Schema/System/Class" Virtual="-1" Icon="" >
						<Object ID="{AED033BD-C06B-4345-ADE8-771D848D7C92}" Name="ClassConstructor" Class="sys://Schema/Scripting/ClassConstructor" >
<![CDATA[
Script=
'Inherit from this class if the device supports the Wake_Up command class
'Generally, this will be battery-powered devices, such as sensors
'When a device is made, set a wakeup notification timer 
this.SetWakeupNotificationTimer
]]>
						</Object>
						<Object ID="{04C263C1-BFF1-4241-83A7-E2BC8AB1F7D4}" Name="WakeupInterval" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="14400" Description="Sensor sends a wakeup notification report every WakeupInterval seconds. Default is 4 hours" />
						<Object ID="{5C5A6C9B-BC71-4538-84EA-0529A9ABE810}" Name="OnChangeWakeupInterval" Class="sys://Schema/Scripting/ClassProperty" Property="{04C263C1-BFF1-4241-83A7-E2BC8AB1F7D4}" >
<![CDATA[
Script=
this.SetWakeupInterval = true
]]>
						</Object>
						<Object ID="{9C527EB8-AB1C-4A0C-AF58-4E7E4A26B843}" Name="SetWakeupInterval" Flags="0x900" Class="sys://Schema/System/Boolean" Description="Send WakeupInterval to the sensor.  Sensor must be awake to process the command." />
						<Object ID="{C3FEBF5E-0A0D-4F27-8C83-1AB538B67E43}" Name="SendCmd_SetWakeupInterval" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'This does the work to construct and queue the SetWakeupInterval command
'The WakeupInterval is a device property
byte1 = this.WakeupInterval mod 256
byte2 = this.WakeupInterval \ 256
byte3 = this.WakeupInterval \ 65536

sSendType = "SE"
if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

'Only send the set interval command if VRC0PNodeID is set; otherwise, the
'command will tell the device to send the WAKE_UP report to the wrong place!!
'Note that according to Leviton support, there is no way to programmatically 
'get the VRC0P node ID from the VRC0P; therefore, it must be set by hand.
'Let's use this condition as an opportunity to throw an alert to remind the user 
if this.Parent.Parent.VRC0PNodeID <> 0 then
	command = ">N" & this.NodeID &  sSendType & "132,4," & byte3 & "," & byte2 & "," & byte1 & "," & this.Parent.Parent.VRC0PNodeID
	this.Parent.Parent.SendCommand command, true, 995
	
	' If the wakeup interval is changed, reset wakeup notification timer
	this.SetWakeupNotificationTimer
	
	if gViziaIsDebugOn(2) then debugout "SendCmd_SetWakeupInterval(): WAKE_UP SET interval=" & this.WakeupInterval & ", on node=" & this.NodeID
else
	if gViziaIsDebugOn(0) then debugout "SendCmd_SetWakeupInterval(): ERROR ViziaRF.VRC0PNodeID is not set!!!"
	set oEvent = Events.CreateObject(Schema.System.Event.Path, "VRC0P NodeID not set")
	with oEvent
		.Description = this.Name & " VRC0P NodeID is not set." & VbCrLf &_
			"Using Premise Builder, set ViziaRF.VRC0PNodeID to the NodeID of the VRC0P."
		.Severity = 90
		.EventTime = Now
		.LinkObject = this
	end with
	set oEvent = nothing
end if
]]>
						</Object>
						<Object ID="{5223F757-7374-482A-82C0-D520888D8C3B}" Name="GetWakeupInterval" Flags="0x900" Class="sys://Schema/System/Boolean" Description="Request the wakeup interval from the sensor.  Sensor must be awake to process command." />
						<Object ID="{C47A837C-5783-483C-B155-0241E48360C7}" Name="SendCmd_GetWakeupInterval" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
sSendType = "SE"

if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if


command = ">N" & this.NodeID & sSendType & "132,5"
this.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_GetWakeupInterval(): WAKE_UP GET command=" & command
]]>
						</Object>
						<Object ID="{3FEA4727-295E-4476-9819-1E4760CFB3E5}" Name="EnableWakeupNotification" Flags="0x900" Class="sys://Schema/System/Boolean" Description="If set to true, an event will be set if no wakeup notification is received for 2.5x WakeupInterval." />
						<Object ID="{65E6B855-7BC0-4821-8DFB-71641E8631B9}" Name="SetWakeupNotificationTimer" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
' Set or reset wakeup notification timer
' Timer is 2.5 times the device's WakeupInterval. 
' This allows for two failed receipts.
if this.EnableWakeupNotification then
	if this.WakeupInterval <> 0 then
		' Only set the timer if WakeupInterval is non-zero
		timerDuration = this.WakeupInterval * 2.5
		system.addTimer timerDuration, "on error resume next: this.Parent.SetEventNotification this.NodeID, 60, 'Sensor', 'missed two wakeup cycles. Check sensor!'", 1, this.Name & "_WakeUpNotification_" & this.ObjectID
	end if
end if
]]>
						</Object>
						<Object ID="{D550D396-CC5F-4089-B290-87D000C4B76A}" Name="RemoveWakeupNotificationTimer" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
' Remove wakeup notification timer
system.removeTimer this.Name & "_WakeUpNotification_" & this.ObjectID]]>
						</Object>
						<Object ID="{E711AD40-97A4-4AE1-B43D-EE1ED56AA7D4}" Name="LastWakeupNotificationTime" Flags="0x900" Class="sys://Schema/System/DateTime" DefaultValue="1/1/1959 5:52:28 PM" AutoSet="0" ReadOnly="-1" />
						<Object ID="{ADFC7F72-45E3-4B98-B0B8-7F265EC13310}" Name="DeviceIsAwake" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Device is awake.  Process any pending commands for the device
if gViziaIsDebugOn(2) then debugout "DeviceIsAwake(): <" & now & "> send any pending commands for the device with node=" & this.NodeID

'If the Manufacturer, ProductType, and ProductID are not set in the device's properties,
'issue the MANUFACTURER_SPECIFIC GET command.  This condition typically occurs just after a new
'device is added through Device Discovery.  Once we receive the MANUFACTIRER_SPECIFIC 
'reply (containing the manufacturer, product type, and product ID), we can auto configure the
'device model and sensor type(s).
if this.CodeManufacturer = 0 and this.CodeProductType = 0 and this.CodeProductID = 0 then
	if gViziaIsDebugOn(0) then debugout "DeviceIsAwake(): send MANUFACTURER_SPECIFIC request for node=" & this.NodeID
	this.SendCmd_GetManufacturerSpecific
end if

'Send the command to get the version information
if this.VersionZwaveLibraryType = "" And this.VersionZwaveProtocol = "" And this.VersionApplication = "" then
	this.SendCmd_GetVersion
end if

'See how long it's been since the battery level was updated
if this.RefreshBatteryLevel = true then
	if gViziaIsDebugOn(2) then debugout "DeviceIsAwake(): Refresh the battery level for node=" & this.NodeID
	this.GetBatteryLevel = true
end if

'Send the command to SET the wakeup interval
if this.SetWakeupInterval = true then
	if gViziaIsDebugOn(2) then debugout "DeviceIsAwake(): SET wakeup interval for node=" & this.NodeID
	this.SetWakeupInterval = false
	this.SendCmd_SetWakeupInterval
end if

'Send the command to GET the wakeup interval
if this.GetWakeupInterval = true then
	if gViziaIsDebugOn(2) then debugout "DeviceIsAwake(): GET wakeup interval for node=" & this.NodeID
	this.GetWakeupInterval = false
	this.SendCmd_GetWakeupInterval
end if

'Send the command to GET the battery level
if this.GetBatteryLevel = true then
	if gViziaIsDebugOn(2) then debugout "DeviceIsAwake(): GET battery report for node=" & this.NodeID
	this.GetBatteryLevel = false
	this.SendCmd_GetBatteryLevel
end if

'If the  device has a reference to a DeviceModelDetails object, and the object is of type Model
'then send any pending model-specific config commands to the device
if Not this.DeviceModelDetails is Nothing then
	if this.DeviceModelDetails.IsOfExplicitType(Schema.Modules.Leviton.Models.Classes.Model.Path) then
		this.DeviceModelDetails.SendModelSpecificCommands
	end if
end if
]]>
						</Object>
					</Object>
					<Object ID="{FEA6B57D-0272-48AE-B247-89CC8EF012D1}" Name="BatteryDevice" Class="sys://Schema/System/Class" Virtual="-1" >
						<Object ID="{3AA5873C-6BC5-4B1B-B475-3A7C89D80C24}" Class="sys://Schema/System/SuperClass" LinkObject="{7FD4DC2D-07D4-43C5-8FCA-8706ADC665B8}" />
						<Object ID="{585B9F97-4B1E-4A83-8E4B-D7E41904C039}" Name="BatteryLevel" Flags="0xB00" Class="sys://Schema/System/Percent" Bindable="-1" ReadOnly="-1" />
						<Object ID="{2D8CB665-E2DD-40F4-AC13-E2D7E6A01A8C}" Name="BatteryLevelAlarm" Flags="0xB00" Class="sys://Schema/System/Boolean" Bindable="-1" ReadOnly="-1" />
						<Object ID="{3F49AFCF-C587-42BC-B892-19D3C0B11E2E}" Name="LastBatteryLevelTime" Flags="0xB00" Class="sys://Schema/System/DateTime" DefaultValue="1/1/1959 11:26:44 AM" Bindable="-1" AutoSet="0" />
						<Object ID="{8A4E926A-D109-4448-9EE6-E46ADC88929D}" Name="GetBatteryLevel" Flags="0x900" Class="sys://Schema/System/Boolean" Description="Fetch battery level when device is awake. For devices supporting WAKE_UP only." />
						<Object ID="{699154A2-663C-40A5-BB33-69A5AFEF4313}" Name="SendCmd_GetBatteryLevel" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'
sSendType = "SE"

if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

command = ">N" & this.NodeID & sSendType & "128,2"
this.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(1) then debugout "SendCmd_GetBatteryLevel(): BATTERY LEVEL GET from node=" & this.NodeID
]]>
						</Object>
						<Object ID="{996CFF6B-2FC0-4B93-9A68-98C5A2C29D34}" Name="RefreshBatteryLevelInterval" Flags="0x900" Class="sys://Schema/System/Number" Description="Request a battery level report after this number of seconds since last battery level report.  Default is 1 week." DefaultValue="604800" />
						<Object ID="{E4C4A92F-C879-4E94-A4D5-2912A38EC267}" Name="RefreshBatteryLevel" Class="sys://Schema/Scripting/SimpleClassMethod" ReturnParameter="{D2EC7E64-57F1-4FC8-A0A1-422F3BDAD873}" >
<![CDATA[
Script=
'If a battery level request is not already queued, see how long it's
'been since the last report.  If it's more than LastBatteryLevelInterval seconds
'request a report
'iNewTime = DateAdd("s", this.RefreshBatteryLevelInterval, this.LastBatteryLevelTime)
NewDateTime = DateAdd("s", this.RefreshBatteryLevelInterval, this.LastBatteryLevelTime)
if this.GetBatteryLevel = false then
	if NewDateTime <= now then
'	if DateValue(iNewTime) <= DateValue(now) then
		method.Status = true
	else
		method.Status = false
	end if
end if
]]>
							<Object ID="{D2EC7E64-57F1-4FC8-A0A1-422F3BDAD873}" Name="Status" Flags="0x900" Class="sys://Schema/System/Boolean" />
						</Object>
					</Object>
					<Object ID="{4574D1AD-E239-4B28-B4F8-AC27C83AACB8}" Name="UserCode" Class="sys://Schema/System/Class" Icon="AgAAAD4BAAAAAAEAAQAQEBAAAAAAACgBAAAWAAAAKAAAABAAAAAgAAAAAQAEAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAM/jAADPyQAAz/kAAMgzAADJ+QAAjMkAAM5jAAD/PwAA+T8AAPx/AAD//wAA//8AAP//AAA=" Virtual="-1" >
						<Object ID="{20E56B2C-28E6-4183-B6E2-216A6DE58D72}" Name="NumberOfUsers" Flags="0x900" Class="sys://Schema/System/Number" Description="Defines the number of user objects to create, but is bounded by MaxNumUsersSupported." />
						<Object ID="{88378304-FF4E-4736-8DA5-ECD59F15624B}" Name="OnChangeNumberOfUsers" Class="sys://Schema/Scripting/ClassProperty" Property="{20E56B2C-28E6-4183-B6E2-216A6DE58D72}" >
<![CDATA[
Script=
'
if sysevent.newVal > this.MaxNumUsersSupported then
	this.NumberOfUsers = this.MaxNumUsersSupported
end if

' create correct number of users
this.CreateUsers


]]>
						</Object>
						<Object ID="{16F5496B-BE65-4F8B-86A9-10B1F9BC0AC2}" Name="MaxNumUsersSupported" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" Description="The maximum number of users supported by the device." />
						<Object ID="{9940F676-0265-4861-B1E3-C73B1D8827E9}" Name="GetMaxNumUsersSupported" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" />
						<Object ID="{34B6F729-7768-4040-A9C1-A9E49E5CBAEC}" Name="OnChangeGetMaxNumUsersSupported" Class="sys://Schema/Scripting/ClassProperty" Property="{9940F676-0265-4861-B1E3-C73B1D8827E9}" >
<![CDATA[
Script=
'
this.SendCmd_GetNumUsers]]>
						</Object>
						<Object ID="{982AF55D-A741-49D4-8404-97EBE9C71696}" Name="CreateUsers" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
' create correct number of users

dim iCount
iCount = 0

for iCount = 1 to this.NumberOfUsers
	set oUser = this.GetUserByNumber(iCount)
	
	' if user doesn't exist, create user
	if oUser is nothing then
		' user doesn't exist, create user
		set oTmp = this.CreateObject(Schema.Modules.Leviton.Classes.User.Path,"User" & iCount)
		oTmp.UserNumber = iCount
		set oTmp = nothing
	end if
	set oUser = nothing
next

' delete users that are greater than NumberOfUsers
for each oUser in this.GetObjectsByType(Schema.Modules.Leviton.Classes.User.Path)
	if oUser.UserNumber > this.NumberOfUsers then
		' delete object
		this.DeleteObject(oUser.Name)
	end if
next
set oUser = nothing]]>
						</Object>
						<Object ID="{F3EFDD41-D7B5-4D2C-BFEF-6A97AAF2906E}" Name="GetUserByNumber" Class="sys://Schema/Scripting/SimpleClassMethod" ReturnParameter="{63A1D41B-67C3-48D6-9B4F-4B1770403CAC}" >
<![CDATA[
Script=
'
' get the first user object with matching user number

dim oUser
set method.User = nothing

for each oUser in this.GetObjectsByTypeAndPropertyValue(Schema.Modules.Leviton.Classes.User.Path, "UserNumber", method.UserNumber)
	set method.User = oUser
	' found user exit loop
	exit for
next
set oUser = nothing]]>
							<Object ID="{30F2B085-4B6F-4DEB-ACD5-769255C87E90}" Name="UserNumber" Flags="0x900" Class="sys://Schema/System/Number" />
							<Object ID="{63A1D41B-67C3-48D6-9B4F-4B1770403CAC}" Name="User" Flags="0x900" Class="sys://Schema/System/ObjectRef" />
						</Object>
						<Object ID="{4E601AAC-EC22-4778-BCFF-EDC16F20260B}" Name="SendCmd_GetNumUsers" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'
sSendType = "SE"

if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

command = ">N" & this.NodeID & sSendType & "99,4"
this.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(1) then debugout "SendCmd_GetNumUsers(): GET MAX NUM OF USERS from node=" & this.NodeID
]]>
						</Object>
						<Object ID="{2E1E73CE-283D-48B6-A5BA-37D8ED272D1B}" Name="SendCmd_DeleteUserCode" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
' clears the code for a given user
' once set, the code will nolonger unlock the door
' WARNING: ONLY VERIFIED TO WORK ON KWIKSET SMARTCODE DEADBOLT, USE AT YOUR OWN RISK!
sSendType = "SE"

if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

command = ">N" & this.NodeID & sSendType & "99,1," & method.UserNumber & ",0"
this.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(1) then debugout "SendCmd_GetNumUsers(): DELETE USER " & method.UserNumber & " from node=" & this.NodeID
]]>
							<Object ID="{AE8B1990-32CF-44B3-9108-69F68764345E}" Name="UserNumber" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{35B98216-2712-45D5-8804-E9A59D797CAB}" Name="SendCmd_GetUserCode" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
' requests the code for a given user
' ProcessCmd_UserCode will proccess the receipt from the device
sSendType = "SE"

if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

command = ">N" & this.NodeID & sSendType & "99,2," & method.UserNumber
this.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(1) then debugout "SendCmd_GetNumUsers(): GET USER " & method.UserNumber & " CODE from node=" & this.NodeID
]]>
							<Object ID="{0542C17A-92C3-4256-83EF-FE126477C4DD}" Name="UserNumber" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{B793BBF3-829A-4DE0-BF4A-86E47E265250}" Name="SendCmd_SetUserCode" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'
sSendType = "SE"

if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

sUserCodeASC = this.UserCodeASC(method.UserCode)

command = ">N" & this.NodeID & sSendType & "99,1," & method.UserNumber & "," & "1," & sUserCodeASC
this.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(1) then debugout "SendCmd_GetNumUsers(): SET USER_CODE for " & method.UserNumber & " from node=" & this.NodeID
]]>
							<Object ID="{184A174F-A764-4A89-B663-5C42BE8D3E1C}" Name="UserNumber" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{998608E9-C6FE-4213-9F84-0C2D19E43456}" Name="UserCode" Flags="0x900" Class="sys://Schema/System/Text" Password="-1" />
						</Object>
						<Object ID="{AFABF5E5-B340-418A-9A41-F4FFB6EE0FB0}" Name="MaxCodeLength" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="8" Description="Max code length for all users." />
						<Object ID="{82AD373F-8111-4164-A899-60F29A8292E8}" Name="MinCodeLength" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="4" Description="Min code length for all users." />
						<Object ID="{4D23CDFE-3753-4E63-94AB-1517BB887A77}" Name="DeleteAllUserCodes" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" Description="Clears all UserCodes shown in SYS.  If you want to clear all UserCodes on the device, set NumberOfUsers = MaxNumUsersSupported, then toggle DeleteAllUserCodes." />
						<Object ID="{E451DC47-8E62-4600-A032-832EBC5CFF42}" Name="OnChangeDeleteAllUserCodes" Class="sys://Schema/Scripting/ClassProperty" Property="{4D23CDFE-3753-4E63-94AB-1517BB887A77}" >
<![CDATA[
Script=
'
this.DeleteUserCodes]]>
						</Object>
						<Object ID="{FA8BB714-A308-4B55-B27F-3BB9BE5D676E}" Name="DeleteUserCodes" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
dim iCount
iCount = 0

for iCount = 1 to this.NumberOfUsers
	set oUser = this.GetUserByNumber(iCount)
	
	' if user exists, delete user code
	if not oUser is nothing then
		oUser.DeleteCode = true
	end if
	set oUser = nothing
next
]]>
						</Object>
						<Object ID="{7FC48585-4602-49BC-ABB6-675681C6AB09}" Name="DeleteUserCode" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
set oUser = this.GetUserByNumber(method.UserNumber)
' if user exists, delete user code
if not oUser is nothing then
	oUser.DeleteCode = true
end if
set oUser = nothing]]>
							<Object ID="{96C74222-B2C0-48EC-9C66-B6A3C96DECBF}" Name="UserNumber" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="1" ReadOnly="-1" />
						</Object>
						<Object ID="{D3CDC64F-8A32-4191-97E1-B30A6A3C4A02}" Name="UserCodeASC" Class="sys://Schema/Scripting/SimpleClassMethod" ReturnParameter="{B0E23BEC-DFC9-43F6-A302-406BE12D7239}" Description="Formats the user code for the VRC0Pv3 to process." >
<![CDATA[
Script=
' iterate through all characters and replace with ascii equivalent

' remove spaces if there are any
method.InputCode = trim(method.InputCode)

for iCount = 1 to len(method.InputCode)
	if iCount = 1 then
		' get asc from first char of string
		char = asc(method.InputCode)
	elseif iCount <= len(method.InputCode) then
		' set first char
		char = asc(mid(method.InputCode,iCount))
	end if
	
	' test char to ensure it's a number
	if char > 47 and char < 58 then
		if iCount = 1 then
			method.OutputCode = method.OutputCode & char
		else
			method.OutputCode = method.OutputCode & "," & char
		end if
	end if
next]]>
							<Object ID="{A19B2F9C-BED0-4414-A05B-850E50459B9E}" Name="InputCode" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{B0E23BEC-DFC9-43F6-A302-406BE12D7239}" Name="OutputCode" Flags="0x900" Class="sys://Schema/System/Text" />
						</Object>
						<Object ID="{07A9506D-559F-4F29-B1BB-2AC5A742A505}" Name="SetUserCode" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
set oUser = this.GetUserByNumber(method.UserNumber)
' if user exists, set user code
if not oUser is nothing then
	oUser.UserCode = method.UserCode
end if
set oUser = nothing]]>
							<Object ID="{8E5CE78C-080E-441E-8661-A4EFB7850874}" Name="UserNumber" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{53F15568-EED6-4A6B-890D-0E39593CB8AC}" Name="UserCode" Flags="0x900" Class="sys://Schema/System/Text" Password="-1" />
						</Object>
						<Object ID="{56985F2D-CF24-442B-BE96-00EDBC41ABCB}" Name="OnChangeMaxNumUsersSupported" Class="sys://Schema/Scripting/ClassProperty" Property="{16F5496B-BE65-4F8B-86A9-10B1F9BC0AC2}" >
<![CDATA[
Script=
' if previous value was 0, set NumberOfUsers to 5

if sysevent.oldVal = 0 and sysevent.newVal > 5 then
	this.NumberOfUsers = 5
elseif sysevent.oldVal = 0 and sysevent.newVal < 5 then
	this.NumberOfUsers = sysevent.newVal
end if]]>
						</Object>
						<Object ID="{92706D16-3DEE-4347-8B21-D276A29A2D84}" Name="DeleteUserCodesNotUsed" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'set remaining users stored in lock to zero
for iCount = this.NumberOfUsers + 1 to this.MaxNumUsersSupported
	this.SendCmd_DeleteUserCode iCount
next]]>
						</Object>
						<Object ID="{FA1E6FCC-EFD5-4F7F-A051-320187E99CD6}" Name="SyncLockToSYS" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
' set user code for each user that exists in SYS
' e.g. SYS user -> user stored in lock
for iCount = 1 to this.NumberOfUsers
	set oUser = this.GetUserByNumber(iCount)
	' if user exists, send user code to lock
	if not oUser is nothing then
		oUser.SendUserCode
	end if
	set oUser = nothing
next

'set remaining users stored in lock to zero
this.DeleteUserCodesNotUsed]]>
						</Object>
					</Object>
					<Object ID="{B7BEAE9D-8F11-4C8A-9E96-EB3B71788878}" Name="User" Class="sys://Schema/System/Class" Icon="AgAAADYEAAAAAAEAAgAgIBAAAAAAAOgCAAAmAAAAEBAQAAAAAAAoAQAADgMAACgAAAAgAAAAQAAAAAEABAAAAAAAgAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/+T////Ef///xH///8R////Ef///xH///8R////Ef///xH///8R////Ef///wH///8B///9AX//+QE///kBP//5gz//+RE///kRP//5ET//+BA///gQP//4ED//+BA///z+f///x////4P///8B////Af///wH///+D////x//ygAAAAQAAAAIAAAAAEABAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9fwAA+T8AAPk/AAD5PwAA+T8AAPk/AAD4PwAA6C8AAOxvAADpLwAA6S8AAOEPAADznwAA/H8AAPg/AAD8fwAA" >
						<Object ID="{5A9590F7-EF34-4388-B2EA-591E4B289B38}" Name="UserNumber" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" />
						<Object ID="{9410A373-4E5D-4603-AB41-5113662B55B9}" Name="UserCode" Flags="0x900" Class="sys://Schema/System/Text" Password="-1" />
						<Object ID="{23549C8E-0D4E-4B71-B169-EFEDA7079D7F}" Name="LastAction" Flags="0x900" Class="sys://Schema/System/Text" Description="Last user action." ReadOnly="-1" />
						<Object ID="{39143B7C-BA96-4A51-AB3F-D53810BBFD96}" Name="AccessCount" Flags="0x900" Class="sys://Schema/System/Number" Description="Number of times user has accessed door." ReadOnly="-1" />
						<Object ID="{BBA39A12-8BBD-4B46-BDCA-BAAC551146EE}" Name="LastAccessDate" Flags="0x900" Class="sys://Schema/System/DateTime" DefaultValue="5/13/2011 9:13:04 PM" Description="Date that user code was last used for access." ReadOnly="-1" />
						<Object ID="{AD8FA583-A01B-437F-AEA2-8B5AC177E90D}" Name="OnChangeUserCode" Class="sys://Schema/Scripting/ClassProperty" Property="{9410A373-4E5D-4603-AB41-5113662B55B9}" >
<![CDATA[
Script=
this.SendUserCode]]>
						</Object>
						<Object ID="{FD10E2DD-BDAC-4C29-B612-EC555DED7549}" Name="DeleteCode" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" />
						<Object ID="{8413983E-78FB-4E06-9517-1089546A0A1E}" Name="OnChangeDeleteCode" Class="sys://Schema/Scripting/ClassProperty" Property="{FD10E2DD-BDAC-4C29-B612-EC555DED7549}" >
<![CDATA[
Script=
if this.Parent.ReceivingUpdate = false then
	' pass the user number so that code is cleared 
	this.Parent.SendCmd_DeleteUserCode this.UserNumber
end if

' do some house keeping
this.UserCode = ""]]>
						</Object>
						<Object ID="{800AA73E-039E-4C22-AF2A-9BDF505D2DCD}" Name="OnChangeUserNumber" Class="sys://Schema/Scripting/ClassProperty" Property="{5A9590F7-EF34-4388-B2EA-591E4B289B38}" >
<![CDATA[
Script=
' when a user is created, it's usernumer is set, query device for current user code...
' we are spacing the commands apart by 2 second so we ensure the lock has time to respond
system.addTimer 2*this.UserNumber,"on error resume next:this.Parent.SendCmd_GetUserCode this.UserNumber",1,"GetUserNumber" & this.ObjectID

' if this is the last user we are adding, clear any unused codes in lock
'if this.UserNumber = this.Parent.NumberOfUsers then
'	this.Parent.DeleteUserCodesNotUsed
'end if]]>
						</Object>
						<Object ID="{FF9E3D9A-330E-4423-9920-3B7B9A3C347D}" Name="SendUserCode" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
' ensure code is less than max and greater than minimum
if len(this.UserCode) > this.Parent.MaxCodeLength then
	this.UserCode = left(this.UserCode,this.Parent.MaxCodeLength)
elseif len(this.UserCode) < this.Parent.MinCodeLength then
	this.UserCode = ""
end if

' if we are left with a valid usercode, set it assuming we are not processing an update
' otherwise if code is "" then delete code stored in lock.
if this.UserCode <> "" and this.Parent.ReceivingUpdate = false then
	this.Parent.SendCmd_SetUserCode this.UserNumber, this.UserCode
elseif this.UserCode = "" and this.Parent.ReceivingUpdate = false then
	this.Parent.SendCmd_DeleteUserCode this.UserNumber
end if]]>
						</Object>
					</Object>
					<Object ID="{930F0A85-504F-4F42-828E-FA70E6462C60}" Name="TamperProof" Class="sys://Schema/System/Class" Icon="AgAAAD4BAAAAAAEAAQAQEBAAAAAAACgBAAAWAAAAKAAAABAAAAAgAAAAAQAEAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAA/////wAAAA//////AAAAD/////8AAAD/D////wAAD/APDw8PAAAAAA8PDw8AAAAADw8PDwAAAAAPDw8PAAAAAA8PDwAAAAAADw8PAAAAAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD4BwAA+AcAAPADAADgAwAA4AMAAMADAACAAwAAiAMAAPgDAAD4AwAA+AcAAPgPAAD8HwAA/n8AAP//AAA=" Virtual="-1" >
						<Object ID="{60494D6C-BA1D-4240-8A7F-3BF4F221C21F}" Name="TamperProof" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{1F346843-8A36-4970-AEBA-E11A32FE8495}" />
						<Object ID="{207CA98A-93D3-439F-AA51-E4765CC69C30}" Name="GetTamperProof" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" />
						<Object ID="{CE9E51CE-F273-4292-8E31-68E3B6340B60}" Name="SendCmd_SetTamperProof" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'
sSendType = "SE"

if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

'EXAMPLE:
'>N49SS117,1,0 tamper proof off
'>N49SS117,1,1 multiple presses required
'>N49SS117,1,2 disables control

command = ">N" & this.NodeID & sSendType & "117,1," & method.TamperProof
this.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(1) then debugout "SendCmd_GetBatteryLevel(): SET_TAMPER_PROOF from node=" & this.NodeID
]]>
							<Object ID="{F3FDBA37-6F29-4C3F-A3AB-6D93A47EBFF5}" Name="TamperProof" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{D548987F-A662-455A-9D65-A9BD38062293}" Name="SendCmd_GetTamperProof" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'
sSendType = "SE"

if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

'EXAMPLE:
'>N49SS117,1,0 tamper proof off
'>N49SS117,1,1 multiple presses required
'>N49SS117,1,2 disables control

command = ">N" & this.NodeID & sSendType & "117,2"
this.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(1) then debugout "SendCmd_GetBatteryLevel(): GET_TAMPER_PROOF from node=" & this.NodeID
]]>
							<Object ID="{5686E5C2-AA17-440E-B74B-781A28827E76}" Name="TamperProof" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{088C38CC-7B54-4981-8A35-E8DFD4A66719}" Name="OnChangeTamperProof" Class="sys://Schema/Scripting/ClassProperty" Property="{60494D6C-BA1D-4240-8A7F-3BF4F221C21F}" >
<![CDATA[
Script=
'
this.SendCmd_SetTamperProof this.TamperProof]]>
						</Object>
						<Object ID="{60F86073-F293-4ECC-BB91-607B9163DC92}" Name="OnChangeGetTamperProof" Class="sys://Schema/Scripting/ClassProperty" Property="{207CA98A-93D3-439F-AA51-E4765CC69C30}" >
<![CDATA[
Script=
'
this.SendCmd_GetTamperProof]]>
						</Object>
					</Object>
					<Object ID="{47A6B906-747D-4430-A142-924A7BF4169C}" Name="Associations" Class="sys://Schema/System/Class" Icon="AgAAAH4DAAAAAAEAAQAQEAAAAAAAAGgDAAAWAAAAKAAAABAAAAAgAAAAAQAYAAAAAABAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKWSc/+ytf+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+Oa/+Oa/+OawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+Oa/+Oa/+Oa/+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+Oa/+Oa/+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+Oa/+Oa/+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+Oa/+Oa/+OawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+Oa/+Oa/+OawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+ytaWScwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD/jwAA//MAAP/7AAD/xwAA/4cAAP8PAAD/nwAA+f8AAPD/AADh/wAA4/8AAN//AADP/wAA8f8AAP//AAA=" Virtual="-1" Description="Device level association commands and properties." >
						<Object ID="{C345FF94-FC77-4EC6-A0AF-7FD404D8DDBD}" Name="GetNumberSupportedAssociations" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" />
						<Object ID="{AE73676F-5E90-4E3F-8D14-77C20D17231C}" Name="Groups" Flags="0x900" Class="sys://Schema/System/Number" Description="Maximum number of supported groups.  Corresponds to the number of buttons on a zone/scene controller." ReadOnly="-1" />
						<Object ID="{1666DAD8-4E31-4E46-B93B-969991581218}" Name="SendCmd_GetSupportedAssociations" Class="sys://Schema/Scripting/ClassFunction" Description="Gets the number of possible group ids for a device." >
<![CDATA[
Script=
' ProcessCmd_Association will proccess the receipt from the device
sSendType = "SE"

if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

command = ">N" & this.NodeID & sSendType & "133,5"
this.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(1) then debugout "SendCmd_GetSupportedAssociations() from node=" & this.NodeID]]>
						</Object>
						<Object ID="{F46CC945-7737-4725-88EE-39B755CFC0CF}" Name="SendCmd_RemoveAssociations" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
' Example:
' Remove all nodes associated with node 8 (controller) button 1
' >N8SE133,4,1
' Pass groupID (aka button number)

sSendType = "SE"

if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

' if the groupID is supported, go ahead and remove association
if method.GroupID <= this.Groups and method.GroupID <> 0 then
	command = ">N" & this.NodeID & sSendType & "133,4," & method.GroupID
	this.Parent.Parent.SendCommand command, true, 995
	
	' refresh outstanding associations
	this.SendCmd_GetAssociations method.GroupID
		
	if gViziaIsDebugOn(2) then debugout "SendCmd_RemoveAssociations(): remove all ASSOCIATIONS for group=" & method.GroupID & " from controller node=" & this.NodeID
end if]]>
							<Object ID="{135B4ACF-50E9-4AAE-A8D8-77101E43C678}" Name="GroupID" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{5C0C9981-F21E-4083-88C0-C3E4B717A38A}" Name="SendCmd_RemoveAssociation" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
' Example:
' Remove node 9 (switch) from node 8 (controller) button 1
' >N8SE133,4,1,9
' Pass NodeID for device to be associated to group
' Pass groupID

sSendType = "SE"

if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

' if the groupID is supported, go ahead and remove association
if method.NodeID <> 0 and method.GroupID <= this.Groups  and method.GroupID <> 0 then
	command = ">N" & this.NodeID & sSendType & "133,4," & method.GroupID & "," & method.NodeID
	this.Parent.Parent.SendCommand command, true, 995
		
	' refresh outstanding associations
	this.SendCmd_GetAssociations method.GroupID
	
	if gViziaIsDebugOn(2) then debugout "SendCmd_RemoveAssociation(): remove ASSOCIATION for node=" & method.NodeID & " from controller node=" & this.NodeID & " GroupID=" & method.GroupID
end if]]>
							<Object ID="{4F6D803E-DA4A-42C7-8C15-5410E71345D2}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" Description="NodeID of controller." ReadOnly="-1" />
							<Object ID="{4E899D9D-3031-45E5-8153-1F23038DC50E}" Name="GroupID" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{F979A91B-AD56-41B5-975D-4E3C0F99A6E9}" Name="SendCmd_SetAssociation" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Example:
'associate controller (48) with lock (49)
'>N49SS133,1,1,48
' Pass NodeID for device to be associated to group
' Pass groupID

sSendType = "SE"

if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

' if the groupID is supported, go ahead and set association
if method.NodeID <> 0 and method.GroupID <= this.Groups  and method.GroupID <> 0 then
	command = ">N" & this.NodeID & sSendType & "133,1," & method.GroupID & "," & method.NodeID
	this.Parent.Parent.SendCommand command, true, 995
		
	' refresh outstanding associations
	this.SendCmd_GetAssociations method.GroupID
	
	if gViziaIsDebugOn(2) then debugout "SendCmd_SetAssociation(): ASSOCIATE node=" & method.NodeID & " with controller node=" & this.NodeID & " GroupID=" & method.GroupID
end if]]>
							<Object ID="{4D052C85-8E4A-4A9C-97D9-7DE18F3FBDE3}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" Description="NodeID of controller." ReadOnly="-1" />
							<Object ID="{37AC2ACF-BF7C-42F0-B67E-D3BEBBAF2DBF}" Name="GroupID" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" DefaultValue="1" />
						</Object>
						<Object ID="{289DC0E3-5C82-46D3-8622-BC5EDDBD9393}" Name="SendCmd_GetAssociations" Class="sys://Schema/Scripting/ClassFunction" Description="Gets the nodes associated with a GropuID." >
<![CDATA[
Script=
' ProcessCmd_Association will proccess the receipt from the device
sSendType = "SE"

if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

if  method.GroupID <> 0 then 
	command = ">N" & this.NodeID & sSendType & "133,2," & method.GroupID
	this.Parent.Parent.SendCommand command, true, 995
end if

if gViziaIsDebugOn(1) then debugout "SendCmd_GetAssociations() from node=" & this.NodeID & " GroupID=" & method.GroupID]]>
							<Object ID="{7EBC19EA-6BF7-4FCE-B57A-72ED4289E8AD}" Name="GroupID" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" DefaultValue="1" />
						</Object>
						<Object ID="{FA6BE6AE-D6F1-442E-ACD5-B1AFFFF7A365}" Name="OnChangeGroups" Class="sys://Schema/Scripting/ClassProperty" Property="{AE73676F-5E90-4E3F-8D14-77C20D17231C}" >
<![CDATA[
Script=
' if this object also inherits from GroupAssociation, set the GroupAssociation GroupID to 1
if this.IsOfExplicitType(Modules.Leviton.Classes.GroupAssociation.Path) then
	this.GroupID = 1
end if]]>
						</Object>
						<Object ID="{B2BBE806-D08B-4CA4-97E8-C4B3CEAA326F}" Name="OnChangeGetNumberSupportedAssociations" Class="sys://Schema/Scripting/ClassProperty" Property="{C345FF94-FC77-4EC6-A0AF-7FD404D8DDBD}" >
<![CDATA[
Script=
'
this.SendCmd_GetSupportedAssociations]]>
						</Object>
					</Object>
					<Object ID="{657D6703-E52E-4BD1-BB78-FB2321AEA9FD}" Name="GroupAssociation" Class="sys://Schema/System/Class" Description="Group level association commands and properties.  An object inheriting from this class should have a parent inheriting from Associations or inherit from Associations also." Icon="AgAAAH4DAAAAAAEAAQAQEAAAAAAAAGgDAAAWAAAAKAAAABAAAAAgAAAAAQAYAAAAAABAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKWSc/+ytf+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+Oa/+Oa/+OawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+Oa/+Oa/+Oa/+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+Oa/+Oa/+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+Oa/+Oa/+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+Oa/+Oa/+OawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+Oa/+Oa/+OawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+ytQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+ytf+ytaWScwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD/jwAA//MAAP/7AAD/xwAA/4cAAP8PAAD/nwAA+f8AAPD/AADh/wAA4/8AAN//AADP/wAA8f8AAP//AAA=" Virtual="-1" >
						<Object ID="{B0B1BF2A-E91D-441B-99E5-E69ED8826214}" Name="GroupID" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" Description="Group identifier for button." />
						<Object ID="{32400324-FFB7-4738-9537-2F6106126C3D}" Name="Associations" Flags="0x900" Class="sys://Schema/System/Text" Description="Current associations for group by nodeID." ReadOnly="-1" />
						<Object ID="{F3AD711A-0E24-4240-8326-71B9AFC41435}" Name="AssociateWithNodeID" Flags="0x900" Class="sys://Schema/System/Number" Description="NodeID of device to associate button with." />
						<Object ID="{F34CBA89-A4FA-4A20-B3BD-11AF245DCC93}" Name="SetAssociation" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" />
						<Object ID="{3EABD2BD-D41A-4C0C-977D-79F03B79437D}" Name="GetAssociation" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" />
						<Object ID="{ED43EAE0-AAFD-41A3-AD49-FF1CFCF8BBA8}" Name="RemoveAssociation" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" />
						<Object ID="{CD309DDB-7F72-4590-A684-C43CDDAAFBB5}" Name="RemoveAllAssociations" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" />
						<Object ID="{C528F812-4CF4-45A4-AF40-07D8873D4C08}" Name="MaxNodesSupported" Flags="0x900" Class="sys://Schema/System/Number" Description="Maximum number of nodes supported for this group." />
						<Object ID="{150A9199-5A73-4528-90AC-831EE9381BC2}" Name="OnChangeGetAssociation" Class="sys://Schema/Scripting/ClassProperty" Property="{3EABD2BD-D41A-4C0C-977D-79F03B79437D}" >
<![CDATA[
Script=
'
if this.Parent.IsOfExplicitType(Modules.Leviton.Classes.Associations.Path) then
	this.Parent.SendCmd_GetAssociations this.GroupID
elseif this.IsOfExplicitType(Modules.Leviton.Classes.Associations.Path) then
	this.SendCmd_GetAssociations this.GroupID
end if]]>
						</Object>
						<Object ID="{DE1D7040-B1BD-49BA-907B-B81F5F68390A}" Name="OnChangeSetAssociation" Class="sys://Schema/Scripting/ClassProperty" Property="{F34CBA89-A4FA-4A20-B3BD-11AF245DCC93}" >
<![CDATA[
Script=
if this.Parent.IsOfExplicitType(Modules.Leviton.Classes.Associations.Path) then
	this.Parent.SendCmd_SetAssociation this.AssociateWithNodeID, this.GroupID
	this.AssociateWithNodeID = 0
elseif this.IsOfExplicitType(Modules.Leviton.Classes.Associations.Path) then
	this.SendCmd_SetAssociation this.AssociateWithNodeID, this.GroupID
	this.AssociateWithNodeID = 0
end if]]>
						</Object>
						<Object ID="{793D2309-B066-46D6-85BC-30AC65DDD8D3}" Name="OnChangeRemoveAssociation" Class="sys://Schema/Scripting/ClassProperty" Property="{ED43EAE0-AAFD-41A3-AD49-FF1CFCF8BBA8}" >
<![CDATA[
Script=
if this.Parent.IsOfExplicitType(Modules.Leviton.Classes.Associations.Path) then
	this.Parent.SendCmd_RemoveAssociation this.AssociateWithNodeID, this.GroupID
	this.AssociateWithNodeID = 0
elseif this.IsOfExplicitType(Modules.Leviton.Classes.Associations.Path) then
	this.SendCmd_RemoveAssociation this.AssociateWithNodeID, this.GroupID
	this.AssociateWithNodeID = 0
end if]]>
						</Object>
						<Object ID="{4E75F3AA-51BD-4091-BDFD-933844E7A932}" Name="OnChangeRemoveAllAssociations" Class="sys://Schema/Scripting/ClassProperty" Property="{CD309DDB-7F72-4590-A684-C43CDDAAFBB5}" >
<![CDATA[
Script=
if this.Parent.IsOfExplicitType(Modules.Leviton.Classes.Associations.Path) then
	this.Parent.SendCmd_RemoveAssociations this.GroupID
elseif this.IsOfExplicitType(Modules.Leviton.Classes.Associations.Path) then
	this.SendCmd_RemoveAssociations this.GroupID
end if]]>
						</Object>
						<Object ID="{C5FE3C6D-CC88-4AB8-8F1D-D777CE560DF6}" Name="OnChangeGroupID" Class="sys://Schema/Scripting/ClassProperty" Property="{B0B1BF2A-E91D-441B-99E5-E69ED8826214}" >
<![CDATA[
Script=
'
if sysevent.newVal <> 0 then
	if this.Parent.IsOfExplicitType(Modules.Leviton.Classes.Associations.Path) then
		' we use a timer here to minimize traffic since for a zone controller two buttons will be created back to back that have the same GroupID
		system.addTimer 4, "on error resume next:this.Parent.SendCmd_GetAssociations this.GroupID", 1,"Get_Assoc_Node:" & this.Parent.NodeID & "_Group:" & this.GroupID
	elseif this.IsOfExplicitType(Modules.Leviton.Classes.Associations.Path) then
		' we use a timer here to minimize traffic since for a zone controller two buttons will be created back to back that have the same GroupID
		system.addTimer 4, "on error resume next:this.SendCmd_GetAssociations this.GroupID", 1,"Get_Assoc_Node:" & this.NodeID & "_Group:" & this.GroupID
	end if
end if]]>
						</Object>
					</Object>
					<Object ID="{ABC25450-9EB7-4626-8264-3782AE4E11E9}" Name="Lighting" Class="sys://Schema/System/Class" Virtual="-1" Description="Base class for Lighting devices." Icon="AgAAAH4FAAAAAAEAAQAQEAAAAAAAAGgFAAAWAAAAKAAAABAAAAAgAAAAAQAIAAAAAABAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAwNzAAPDKpgDU8P8AseL/AI7U/wBrxv8ASLj/ACWq/wAAqv8AAJLcAAB6uQAAYpYAAEpzAAAyUADU4/8Ascf/AI6r/wBrj/8ASHP/ACVX/wAAVf8AAEncAAA9uQAAMZYAACVzAAAZUADU1P8AsbH/AI6O/wBra/8ASEj/ACUl/wAAAP8AAADcAAAAuQAAAJYAAABzAAAAUADj1P8Ax7H/AKuO/wCPa/8Ac0j/AFcl/wBVAP8ASQDcAD0AuQAxAJYAJQBzABkAUADw1P8A4rH/ANSO/wDGa/8AuEj/AKol/wCqAP8AkgDcAHoAuQBiAJYASgBzADIAUAD/1P8A/7H/AP+O/wD/a/8A/0j/AP8l/wD/AP8A3ADcALkAuQCWAJYAcwBzAFAAUAD/1PAA/7HiAP+O1AD/a8YA/0i4AP8lqgD/AKoA3ACSALkAegCWAGIAcwBKAFAAMgD/1OMA/7HHAP+OqwD/a48A/0hzAP8lVwD/AFUA3ABJALkAPQCWADEAcwAlAFAAGQD/1NQA/7GxAP+OjgD/a2sA/0hIAP8lJQD/AAAA3AAAALkAAACWAAAAcwAAAFAAAAD/49QA/8exAP+rjgD/j2sA/3NIAP9XJQD/VQAA3EkAALk9AACWMQAAcyUAAFAZAAD/8NQA/+KxAP/UjgD/xmsA/7hIAP+qJQD/qgAA3JIAALl6AACWYgAAc0oAAFAyAAD//9QA//+xAP//jgD//2sA//9IAP//JQD//wAA3NwAALm5AACWlgAAc3MAAFBQAADw/9QA4v+xANT/jgDG/2sAuP9IAKr/JQCq/wAAktwAAHq5AABilgAASnMAADJQAADj/9QAx/+xAKv/jgCP/2sAc/9IAFf/JQBV/wAASdwAAD25AAAxlgAAJXMAABlQAADU/9QAsf+xAI7/jgBr/2sASP9IACX/JQAA/wAAANwAAAC5AAAAlgAAAHMAAABQAADU/+MAsf/HAI7/qwBr/48ASP9zACX/VwAA/1UAANxJAAC5PQAAljEAAHMlAABQGQDU//AAsf/iAI7/1ABr/8YASP+4ACX/qgAA/6oAANySAAC5egAAlmIAAHNKAABQMgDU//8Asf//AI7//wBr//8ASP//ACX//wAA//8AANzcAAC5uQAAlpYAAHNzAABQUADy8vIA5ubmANra2gDOzs4AwsLCALa2tgCqqqoAnp6eAJKSkgCGhoYAenp6AG5ubgBiYmIAVlZWAEpKSgA+Pj4AMjIyACYmJgAaGhoADg4OAPD7/wCkoKAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAA8O7xAAAAAAAAAAAAAAAA8vDu8fIAAAAAAAAAAAAAAO7s+O3uAAAAAAAAAAAAAADw7O3t8AAAAAAAAAAAAAAA6fb24/gAAAAAAAAAAAAA7QrZ2fbk7QAAAAAAAAAAAOzY2dn25O0AAAAAAAAAAO4W2dnZ2f/k7AAAAAAAAADo2NnZ2dn/4ugAAAAAAADuytnZ2dnZ2Pbi7AAAAAAA7/bZ2djY2dj/9uwAAAAAAPgL2dnY2P//4gr4AAAAAAD4B/bZ2NgK2OQH6wAAAAAAAPgH9tnZ2Bbi+AAAAAAAAAAA+Afj1uMH+AAAAAAAAAAAAAAA+O74AAAAAAAA/j8AAPwfAAD8HwAA/B8AAPwfAAD4DwAA+A8AAPAHAADwBwAA4AMAAOADAADgAwAA4AMAAPAHAAD4DwAA/j8AAA==" >
						<Object ID="{98D5E709-FC32-407A-B5BE-5D4DC25F711B}" Name="ClassConstructor" Class="sys://Schema/Scripting/ClassConstructor" >
<![CDATA[
Script=
'
dim oGroup, oItem

set oGroup = this.GetObject("sys://Devices/CustomDevices/" & this.Parent.Parent.Name & "/Groups/AllLights")

if not oGroup is nothing then
	set oItem = oGroup.CreateObject(Schema.Modules.Leviton.Classes.GroupMember.Path, this.Name)
	oItem.Device = this
	oItem.SetValue "Flags", 1179648
end if

set oGroup = nothing
set oItem = nothing
]]>
						</Object>
						<Object ID="{7DE0CD92-BDE6-43C1-BCB6-C995A2B8FB42}" Name="OnChangeName" Class="sys://Schema/Scripting/ClassProperty" Property="{FC348C5E-8E45-4454-86F3-C382FAEE7D40}" >
<![CDATA[
Script=
'
dim oGroup, oItem

' Get members of all the groups
set oGroup = this.Parent.Parent.GetObjectsByType(Schema.Modules.Leviton.Classes.GroupMember.Path)

' Locate the desired member and rename it
if not oGroup is nothing then
	for each oItem in oGroup
		if oItem.name = sysevent.oldVal then oItem.Name = sysevent.newVal
	next
end if

set oGroup = nothing
set oItem = nothing]]>
						</Object>
					</Object>
					<Object ID="{CECB4F80-5A0A-4E9E-AF9D-E1B07520B94D}" Name="Switch" Class="sys://Schema/System/Class" Description="Device with power-state control." >
						<Object ID="{B34CE7EA-D002-4AC4-A6D6-5D8F7F3F3616}" Name="Power" Class="sys://Schema/System/SuperClass" LinkObject="{9C3E5340-EAB7-402D-979A-93B5135264AA}" />
						<Object ID="{F7F6ECBE-6581-455F-A588-A16E6C80D43B}" Class="sys://Schema/System/SuperClass" LinkObject="{7FD4DC2D-07D4-43C5-8FCA-8706ADC665B8}" />
						<Object ID="{0145D2ED-5F27-4EEE-8FF8-10C1B983039D}" Class="sys://Schema/System/SuperClass" LinkObject="{ABC25450-9EB7-4626-8264-3782AE4E11E9}" />
						<Object ID="{0320173E-5486-435B-8579-40203FBA6E25}" Name="OnChangePowerState" Class="sys://Schema/Scripting/ClassProperty" Property="{B3E124C2-388D-4E18-A276-0410DE54803A}" >
<![CDATA[
Script=
'
dim sCmd, iLevel

if this.ReceivingUpdate = false then
	if gViziaIsDebugOn(2) then debugout "SourceElementName: " & sysevent.srcElement.Name & ", SourcePropertyName: " & sysevent.srcProperty.name

	' Handle dimmer type
	' Ignore requests from Brightness changes because OnChangeBrightness will handle 
	' the task of turning a dimmer on or off.
	if this.IsOfExplicitType("sys://Schema/Modules/Leviton/Classes/Dimmer") then
		this.PowerStateChanging = true
		' Use brightness changing flag to avoid using sysevent.srcproperty since "trigger" is src property for macros
		if this.BrightnessChanging = false then
			iLevel = round(this.Brightness * 100)
			sCmd = ">N" & this.NodeID
			
			' Handle special case of iLevel = 0 by defaulting brightness to 99%
			if sysevent.newVal then
				if iLevel = 0 then
					' Transfer control to brightness
					this.PowerStateChanging = false			
					this.Brightness = 1
				end if
			end if
			
			' Handle special case of iLevel = 100
			if iLevel = 100 then 
				this.Brightness = 1
			end if
			
			' If control wasn't transferred to brightness, send the powerstate command 
			if this.PowerStateChanging <> false  then
				if this.PowerState = true then
					this.Parent.Parent.SendCommand sCmd & "ON", true, this.NodeID ' High-priority
				else
					this.Parent.Parent.SendCommand sCmd & "OF", true, this.NodeID ' High-priority
				end if
			end if
		end if
		this.PowerStateChanging = false
	else
		' Handle switch type
		sCmd = ">N" & this.NodeID
		
		if this.PowerState = true then
			sCmd = sCmd & "ON"
		else
			sCmd = sCmd & "OF"
		end if
		this.Parent.Parent.SendCommand sCmd, true, this.NodeID ' High-priority
	end if
end if
]]>
						</Object>
						<Object ID="{AAD8F23E-2250-4C65-8533-8819F2F6F78D}" Name="LocallyManipulated" Flags="0xB00" Class="sys://Schema/System/Boolean" Description="Toggles as a switch or dimmer is locally manipulated.  Only applies to Vizia RF and RF+ switches and dimmers." Bindable="-1" ReadOnly="-1" />
						<Object ID="{D7A394C0-81A7-4E94-AE82-2768A5F4A48D}" Name="LocalManipulations" Flags="0xB00" Class="sys://Schema/System/Number" Bindable="-1" ReadOnly="-1" />
						<Object ID="{B3D3795A-10E7-4043-841B-405F2674DCBC}" Name="PowerStateChanging" Flags="0x900" Class="sys://Schema/System/Boolean" ReadOnly="-1" Browsable="0" />
						<Object ID="{8328FBDC-4A53-4046-84F8-564E2AB81D56}" Class="sys://Schema/System/SuperClass" LinkObject="{47A6B906-747D-4430-A142-924A7BF4169C}" />
						<Object ID="{042C418B-1C43-4C2E-AA0C-8EE493ECBBD5}" Class="sys://Schema/System/SuperClass" LinkObject="{657D6703-E52E-4BD1-BB78-FB2321AEA9FD}" />
					</Object>
					<Object ID="{AB7FA3E9-D2BA-4C94-A228-2376FA5793FB}" Name="Dimmer" Class="sys://Schema/System/Class" Description="Device with brightness control." >
						<Object ID="{3858CFAF-9EB3-423B-A705-FA89D6F942AC}" Class="sys://Schema/System/SuperClass" LinkObject="{DEB24C93-9143-4030-86FF-29C7626BC9E3}" />
						<Object ID="{7449A412-9E4E-4483-B675-02FF3DDCF94B}" Class="sys://Schema/System/SuperClass" LinkObject="{CECB4F80-5A0A-4E9E-AF9D-E1B07520B94D}" />
						<Object ID="{C61025AF-198D-4FD3-AC6E-B04857529D3C}" Name="BrightnessChanging" Flags="0x900" Class="sys://Schema/System/Boolean" ReadOnly="-1" Browsable="0" />
						<Object ID="{15963739-B24B-4DAA-BD7D-B7652F30CD84}" Name="OnChangeBrightness" Class="sys://Schema/Scripting/ClassProperty" Property="{18F4096C-D72B-40E1-89A9-892E619BAD01}" >
<![CDATA[
Script=
'
' Update Brightness Level

dim iLevel

if this.ReceivingUpdate = false and this.BrightnessChanging = false and this.PowerStateChanging = false then

	'use a brightnesschanging flag to avoid using sysevent.srcproperty since "trigger" is src property for macros
	this.BrightnessChanging = true
	
	iLevel = round(sysevent.newVal * 100)
	this.PowerState = cbool(iLevel)

	' Convert Brightness level from Premise range 1-100 to ViziaRF range 1-99
	if iLevel = 100 then 
		iLevel = 99
		this.Brightness = 1
	end if
	
	this.Parent.Parent.SendCommand ">N" & this.NodeID & "L" & iLevel, true, this.NodeID ' High-priority
	this.BrightnessChanging = false
end if]]>
						</Object>
						<Object ID="{9EA832FB-9F03-417C-8BBC-083F45381ACC}" Class="sys://Schema/System/SuperClass" LinkObject="{47A6B906-747D-4430-A142-924A7BF4169C}" />
						<Object ID="{AE1DF442-68B1-4554-87EB-E0BA1A4052C3}" Class="sys://Schema/System/SuperClass" LinkObject="{657D6703-E52E-4BD1-BB78-FB2321AEA9FD}" />
					</Object>
					<Object ID="{E48CCC31-1DC5-4E6F-BC8E-C1E79AF42558}" Name="Thermostat" Class="sys://Schema/System/Class" Description="Device with climate controls." Icon="Thermostat.ico" >
						<Object ID="{93E1D5F8-B159-4DAF-8ABB-37F15EDDB3DB}" Name="TemperatureController" Class="sys://Schema/System/SuperClass" LinkObject="{1C399D51-E702-40B2-A0D3-E6BC46F45758}" />
						<Object ID="{E85D474F-F079-488B-A40B-E1BC4D6B0572}" Name="TemperatureSensor" Class="sys://Schema/System/SuperClass" LinkObject="{65C7B5C2-153D-4711-BAD7-D334FDB12338}" />
						<Object ID="{263F1B04-CF25-4E07-8CAF-FA145A11C537}" Name="ClimateControl" Class="sys://Schema/System/SuperClass" LinkObject="{F6842836-CE5A-4067-8D6A-340FEF4FCDDE}" />
						<Object ID="{3B145D1B-BBD9-428F-8FDF-A3E028E546EC}" Class="sys://Schema/System/SuperClass" LinkObject="{7FD4DC2D-07D4-43C5-8FCA-8706ADC665B8}" />
						<Object ID="{F7CE0E18-484B-4AFC-9587-D98957A0945C}" Name="OnChangeCoolingSetPoint" Class="sys://Schema/Scripting/ClassProperty" Property="{34DB2DDB-9A1F-4E34-9F70-3877A3326E97}" >
<![CDATA[
Script=
'
if this.ReceivingUpdate = false then
	'no longer needed with new getnextjob method
	'don't poll while we modify the temp in automatoin browser as this may overwrite our value
	'(necessary b/c if you go from 100F to 20F in automation browser, you have to hit the down arrow 80 times...)
	'if this.OneWay = true then
	'	this.OneWay = false
	'	system.addTimer 5, "on error resume next: this.OneWay = true", 1, this.Name & "_set_onway_cooling_" & this.ObjectID
	'end if

	'this.Parent.Parent.SendCommand ">N" & this.NodeID & "SE67,1,2,9," & round(this.CoolingSetPoint.Fahrenheit), true, this.NodeID ' High-priority
	system.addTimer 3, "on error resume next: this.Parent.Parent.SendCommand '>N' & this.NodeID & 'SE67,1,2,9,' & round(this.CoolingSetPoint.Fahrenheit), true, this.NodeID", 1, this.Name & "_update_setpoint_" & this.ObjectID
	if this.TemperatureMode = "Cool" or this.TemperatureMode = "Auto" then
		this.CurrentSetPoint = this.CoolingSetPoint
	end if
end if
]]>
						</Object>
						<Object ID="{A956D5EE-0533-4794-9039-197D3763E9A9}" Name="OnChangeHeatingSetPoint" Class="sys://Schema/Scripting/ClassProperty" Property="{B5137F2B-ECE4-483E-864E-F05B615333E4}" >
<![CDATA[
Script=
'
if this.ReceivingUpdate = false then
	'no longer needed with new getnextjob method
	'don't poll while we modify the temp in automatoin browser as this may overwrite our value
	'(necessary b/c if you go from 100F to 20F in automation browser, you have to high the down arrow 80 times...)
	'if this.OneWay = true then
	'	this.OneWay = false
	'	system.addTimer 5, "on error resume next: this.OneWay = true", 1, this.Name & "_set_onway_heating_" & this.ObjectID
	'end if
		
	'this.Parent.Parent.SendCommand ">N" & this.NodeID & "SE67,1,1,9," & round(this.HeatingSetPoint.Fahrenheit), true, this.NodeID ' High-priority
	'this timer is necessary since the automation browser thermostat will send a command for
	'each button press. A press/hold button such as those on brightness controls is not available here.
	
	system.addTimer 3, "on error resume next: this.Parent.Parent.SendCommand '>N' & this.NodeID & 'SE67,1,1,9,' & round(this.HeatingSetPoint.Fahrenheit), true, this.NodeID", 1, this.Name & "_update_setpoint_" & this.ObjectID

	if this.TemperatureMode = "Heat" or this.TemperatureMode = "EmergencyHeat" or this.TemperatureMode = "Auto" then
		this.CurrentSetPoint = this.HeatingSetPoint
	end if
end if
]]>
						</Object>
						<Object ID="{6742C1D4-02B2-4859-BF58-BFBED6622898}" Name="OnChangeTemperatureMode" Class="sys://Schema/Scripting/ClassProperty" Property="{CF253D76-0FDD-4821-AF87-37BCD815BF58}" >
<![CDATA[
Script=
'
' Premise TemperatureMode codes:
' 	Auto = 0 
' 	Heat = 1
'	Cool = 2
'	EmergencyHeat = 3
'	Off = 4
' Z-Wave HVAC Mode codes:
' 	Off = 0 
' 	Heat = 1
'	Cool = 2
'	Auto = 3
'	Aux = 4

dim iMode: iMode = 3 ' Auto

if this.ReceivingUpdate = false then
	' Convert from Premise to Z-Wave
	select case this.TemperatureMode
		case 0: iMode = 3 ' Auto
		case 1: iMode = 1 ' Heat
		this.CurrentSetPoint = this.HeatingSetPoint
		case 2: iMode = 2 ' Cool
		this.CurrentSetPoint = this.CoolingSetPoint
		case 3: iMode = 4 ' Aux
		case 4: iMode = 0 ' Off
		this.CurrentSetPoint = ""
	end select
	this.Parent.Parent.SendCommand ">N" & this.NodeID & "SE64,1," & iMode, true, this.NodeID ' High-priority	
end if
]]>
						</Object>
						<Object ID="{994C9549-E149-4856-844F-89C9926D4590}" Name="OnChangeCurrentSetPoint" Class="sys://Schema/Scripting/ClassProperty" Property="{743E567A-6DFC-4D41-A6E9-7EFB819AA30B}" >
<![CDATA[
Script=
' Premise TemperatureMode codes:
' 	Auto = 0 
' 	Heat = 1
'	Cool = 2
'	EmergencyHeat = 3
'	Off = 4
if this.ReceivingUpdate = false then
	select case this.TemperatureMode
		case 0:  ' Auto
			if this.CurrentSetPoint < this.Temperature then
				'heat
				this.CurrentSetPoint = this.HeatingSetPoint
			else
				'cool
				this.CurrentSetPoint = this.CoolingSetPoint
			end if
		case 1: this.HeatingSetPoint = this.CurrentSetPoint ' Heat
		case 2: this.CoolingSetPoint = this.CurrentSetPoint ' Cool
		case 3: this.HeatingSetPoint = this.CurrentSetPoint ' Emergency Heat
		case 4: this.CurrentSetPoint = "" ' off
	end select
end if]]>
						</Object>
						<Object ID="{E4E977F5-8D89-4BDC-B8D6-32BD17FFA5A1}" Name="OnChangeFanControl" Class="sys://Schema/Scripting/ClassProperty" Property="{E460B8BC-B58D-4660-ADEA-2D2236081B57}" >
<![CDATA[
Script=
'
' Premise FanControl codes:
' 	Auto = 0 
' 	On = 1
' Z-Wave Fan Mode codes:
' 	Auto/Auto Low = 0 
' 	On/On Low = 1
' 	Auto High = 2
'	On High = 3
'

if this.ReceivingUpdate = false then
	this.Parent.Parent.SendCommand ">N" & this.NodeID & "SE68,1," & this.FanControl, true, this.NodeID ' High-priority
end if

' If thermostat does not support fan state and fan control is set to ON, set fanStatus to ON
if this.FanControl = 1 and this.SupportsFanState = false then
	this.FanStatus = 1
elseif this.SupportsFanState = false then
	if this.HeatingStatus = 4 then
		' Unit must be off, so fan must be off
		this.FanStatus = false
	else
		' Unit must be on, so fan must be on
		this.FanStatus = true
	end if
end if
]]>
						</Object>
						<Object ID="{7B9C8F9A-AB26-4C1E-9F02-4638B9EA2E3E}" Name="OnChangeHeatingStatus" Class="sys://Schema/Scripting/ClassProperty" Property="{0D2E651D-D9CE-4AFD-996F-BA462BF36286}" >
<![CDATA[
Script=
' If fan status is auto and thermostat does not support fanstate

if this.FanControl = 0 and this.SupportsFanState = false then
	if sysevent.newVal = 4 then
		' Unit must be off, so fan must be off
		this.FanStatus = false
	else
		' Unit must be on, so fan must be on
		this.FanStatus = true
	end if
end if
]]>
						</Object>
						<Object ID="{8BD6FFB0-E8A8-40D6-9463-6F87434971A4}" Name="SupportsFanState" Flags="0x900" Class="sys://Schema/System/Boolean" Description="Set to false if thermostat does not support fan state." DefaultValue="-1" />
						<Object ID="{30586F9B-707E-4A4C-996B-9FDE5712DADD}" Name="SendCmd_GetThermostatFanState" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Future use.  This can be use to ask the thermostat to report it's fan state
command = ">N" & this.NodeID & "SE69,2"
this.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_GetThermostatFanState(): THERMOSTAT_FAN_STATE GET command=" & command
]]>
						</Object>
					</Object>
					<Object ID="{BEF4EB6D-9160-4B2B-A968-69A3B8715AE3}" Name="Controller" Class="sys://Schema/System/Class" Icon="AgAAADYEAAAAAAEAAgAgIBAAAAAAAOgCAAAmAAAAEBAQAAAAAAAoAQAADgMAACgAAAAgAAAAQAAAAAEABAAAAAAAgAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB3d3d3d3d3d3d3AAAAAAAAd3d3d3d3d3d3dwAAAAAAAHeIiIiIiIiIiHcAAAAAAAB3iIiIiIiIiIh3AAAAAAAAd3d3d3d3d3d3dwAAAAAAAHd3d3d3d3d3d3cAAAAAAAB3d3d3d3d3d3d3AAAAAAAAd3d3d3d3d3d3dwAAAAAAAHeIiId3d3iIiHcAAAAAAAB3iIiHd3d4iIh3AAAAAAAAd3d3d3d3d3d3dwAAAAAAAHd3d3d3d3d3d3cAAAAAAAB3iIiHd3d4iIh3AAAAAAAAd4iIh3d3eIiIdwAAAAAAAHd3d3d3d3d3d3cAAAAAAAB3d3d3d3d3d3d3AAAAAAAAd4iIh3d3eIiIdwAAAAAAAHeIiId3d3iIiHcAAAAAAAB3d3d3d3d3d3d3AAAAAAAAd3d3d3d3d3d3dwAAAAAAAHeIiId3d3iIiHcAAAAAAAB3iIiHd3d4iIh3AAAAAAAAd3d3d3d3d3d3dwAAAAAAAHd3d3d3d3d3d3cAAAAAAAB3iIiHd3d4iIh3AAAAAAAAd4iIh3d3eIiIdwAAAAAAAHd3d3d3d3d3d3cAAAAAAAB3d3d3d3d3d3d3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADygAAAAQAAAAIAAAAAEABAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAB3d3d3dwAAAHiIiIiHAAAAd3d3d3cAAAB3d3d3dwAAAHiId4iHAAAAd3d3d3cAAAB4iHeIhwAAAHd3d3d3AAAAeIh3iIcAAAB3d3d3dwAAAHiId4iHAAAAd3d3d3cAAAB4iHeIhwAAAHd3d3d3AAAAAAAAAAAADAAwAAwAMAAMADAADAAwAAwAMAAMADAADAAwAAwAMAAMADAADAAwAAwAMAAMADAADAAwAAwAMAAMADAADAAwAA" Virtual="-1" >
						<Object ID="{91F15CC8-E525-4BF3-BDB5-8F58DAB1552E}" Class="sys://Schema/System/SuperClass" LinkObject="{7FD4DC2D-07D4-43C5-8FCA-8706ADC665B8}" />
						<Object ID="{5A8ED358-2B5F-46D0-AB8C-356BC5CC1D04}" Class="sys://Schema/System/SuperClass" LinkObject="{481B56A8-3D5E-49FA-B6E2-F7527B6D300B}" />
						<Object ID="{625BECBB-3624-4044-827E-2D4E3F207620}" Name="Buttons" Flags="0x900" Class="sys://Schema/System/Number" Description="Number of buttons on keypad." />
						<Object ID="{03A98E7A-B8F4-418F-B327-EA094D892977}" Name="UpDown" Flags="0x900" Class="sys://Schema/System/Boolean" Description="If true, controller is modeled with bright/dim buttons." />
						<Object ID="{B473325A-6E20-4A20-AFD7-58A408F013A1}" Name="BuildButtons" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Build buttons for a controller." >
<![CDATA[
Script=
dim oButton
dim sCommand
dim iCnt, iOffset, iButton, iNum

this.DeleteButtons

iButton = 1
iOffset = 0

if this.UpDown = true then
 iOffset = 1
end if

for iCnt = 1 to this.Buttons
	'set command string
	sCommand = "On"
	iNum = iButton
	'change command to off on even iCnt
	if iCnt mod 2 = 0 then
		sCommand = "Off"
		if iButton <> "" then 
			iNum = iButton + this.Buttons/2 - iOffset
		else
			iNum = ""
		end if
	end if
	
	if this.UpDown = true then
		'set the up and down buttons
		if iCnt = this.Buttons then
			sCommand = "Down"
			iButton = ""
			iNum = 0
		elseif iCnt = this.Buttons - 1 then
			sCommand = "Up"
			iButton = ""
			iNum = 0
		end if
	end if
	
	'build button for this iteration
	'if it doesn't exist, create it
	set oButton = this.GetObject(this.Path & "/Button" & iButton & sCommand)
	if oButton is nothing then
		set oButton = this.CreateObject(Schema.Modules.Leviton.Classes.Button.Path, "Button" & iButton & sCommand)
		'oButton.SetValue "Flags", 1179648 ' Object cannot be deleted and its name cannot be modified.
		oButton.SetValue "Flags", 1048576 ' Objects name cannot be modified.
		oButton.Address = iNum
		if iButton <> "" then oButton.GroupID = iButton
	end if
	'increment unit on even iCnt
	if iCnt mod 2 = 0 then
		if not iButton = "" then iButton = iButton + 1
	end if

	set oButton = nothing
next]]>
						</Object>
						<Object ID="{F128EB0D-9E2F-4EA8-AF11-8E54255DD42F}" Name="DeleteButtons" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
' Delete all buttons
for each oButton in this.GetObjectsByType(modules.Leviton.Classes.Button.Path,false)
	this.DeleteObject(oButton.Name)
next]]>
						</Object>
						<Object ID="{4EF5BE4E-946C-445C-9E44-62D571AB29C1}" Name="OnChangeUpDown" Class="sys://Schema/Scripting/ClassProperty" Property="{03A98E7A-B8F4-418F-B327-EA094D892977}" >
<![CDATA[
Script=
'
if sysevent.newVal then
	this.Buttons = this.Buttons + 2
	this.ForceLevelStateChange = true
	this.AssociateButtons
elseif sysevent.oldVal = true then
	this.Buttons = this.Buttons - 2
end if

this.BuildButtons]]>
						</Object>
						<Object ID="{A46F284F-886C-41B0-A4EE-E546CAF0E762}" Class="sys://Schema/System/SuperClass" LinkObject="{47A6B906-747D-4430-A142-924A7BF4169C}" />
						<Object ID="{C3FD305C-DA33-4341-8DB8-AD44274A179B}" Name="OnChangeGroups" Class="sys://Schema/Scripting/ClassProperty" Property="{AE73676F-5E90-4E3F-8D14-77C20D17231C}" >
<![CDATA[
Script=
'
if this.UpDown = true then
	this.Buttons = this.Groups*2 + 2
else
	this.Buttons = this.Groups*2
end if]]>
						</Object>
						<Object ID="{1CAD8C06-4BB4-4D1E-8373-AFCE7A42F20C}" Name="OnChangeButtons" Class="sys://Schema/Scripting/ClassProperty" Property="{625BECBB-3624-4044-827E-2D4E3F207620}" >
<![CDATA[
Script=
'
this.BuildButtons]]>
						</Object>
						<Object ID="{44173671-EF28-4DAB-B896-208DC7F5F34A}" Class="sys://Schema/System/SuperClass" LinkObject="{C8F24746-5BC4-4EED-9FAF-83D1DB6D640D}" />
						<Object ID="{D4EF193E-8634-4CDD-8731-F7929BC6301A}" Name="OnChangeLevel" Class="sys://Schema/Scripting/ClassProperty" Property="{6C25DA5D-3AA9-4C61-93DA-A28CD6305532}" >
<![CDATA[
Script=
' an UP button press on a VRCZ4 looks like this:
' <N064:038,004,064,000

' a DOWN button press on a VRCZ4 looks like this:
' <N064:038,004,000,000

' for the VRCZ4, up/down buttons repeat command as they are held down

bBlock = false

if this.BlockRepeat and this.Repeat = false then
	bBlock = true
end if

if bBlock = false then
	if sysevent.newVal = .64 then
		if this.UpDown then this.ButtonUp.ButtonState = 1
		this.BlockRepeat = true
	elseif sysevent.newVal = 0 then
		if this.UpDown then this.ButtonDown.ButtonState = 1
		this.BlockRepeat = true
	end if
end if]]>
						</Object>
						<Object ID="{31EEB6F1-836E-4CC5-9F0C-1660CC996A04}" Name="SendCmd_SetManufacturerProprietaryThridPartyControl" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'
sSendType = "SE"

if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if
' >N2,SE,145,0,29,7,0,8,1,4

if this.Parent.Parent.VRC0PNodeID <> 0 then
	command = ">N" & this.NodeID & sSendType & "145,0,29,7,0,8,1," & this.Parent.Parent.VRC0PNodeID
	this.Parent.Parent.SendCommand command, true, this.nodeID
	if gViziaIsDebugOn(1) then debugout "SendCmd_SetSwitchMultilevel() for node=" & this.NodeID & " to " & method.Level*100
else
	if gViziaIsDebugOn(0) then debugout "SendCmd_SetWakeupInterval(): ERROR ViziaRF.VRC0PNodeID is not set!!!"
	set oEvent = Events.CreateObject(Schema.System.Event.Path, "VRC0P NodeID not set")
	with oEvent
		.Description = this.Name & " VRC0P NodeID is not set." & VbCrLf &_
			"Using Premise Builder, set ViziaRF.VRC0PNodeID to the NodeID of the VRC0P."
		.Severity = 90
		.EventTime = Now
		.LinkObject = this
	end with
	set oEvent = nothing
end if
]]>
						</Object>
						<Object ID="{C79BF735-7B28-4FBD-AA3D-0DD70F8718E2}" Name="AssociateButtons" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
' for each button go ahead and associate it with the VRC0P
' this is necessary for the brightness and dim buttons to work
' this is NOT necessary if your zone controller does not have up and down buttons  
for each oButton in this.GetObjectsByType(modules.Leviton.Classes.Button.Path,true)
	'
	if oButton.Address <> 0 and oButton.Address <= this.Groups then
		this.SendCmd_SetAssociation this.Parent.Parent.VRC0PNodeID, oButton.Address
	end if
next]]>
						</Object>
					</Object>
					<Object ID="{788DBBAC-7C68-4708-9576-CADB85ABA2DF}" Name="Button" Class="sys://Schema/System/Class" >
						<Object ID="{FEE10BAE-79D4-4781-B4D3-F81A88AFA4B4}" Class="sys://Schema/System/SuperClass" LinkObject="{66B75811-F2F0-400F-9FC3-8EF42DA1C9EE}" />
						<Object ID="{C0740BA4-67A2-4F6D-9817-47F22446BA85}" Name="Address" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" Description="Button number associated with VRC0P proprietary button press response." />
						<Object ID="{138E68F7-0FF2-497D-9A02-8ED1C1EDFD03}" Class="sys://Schema/System/SuperClass" LinkObject="{65311CA4-A02B-41D5-B8C0-156A1325BA6A}" />
						<Object ID="{BE440415-FF01-47EA-A2DD-1480C1D20582}" Name="OnChangeButtonState" Class="sys://Schema/Scripting/ClassProperty" Property="{BD796105-0CA4-4E60-B63F-0E55B1C8322C}" >
<![CDATA[
Script=
'handle buttonstate change

if sysevent.newVal = 0 then
	'hold count: how long a button is held down 
	'(indicated by the number of commands received)
	'this.HoldCount = 0
elseif sysevent.newVal = 1 then
	' button has been pressed
	' toggle status
	this.Status = not this.Status
	
	' set button state back to release
	this.ButtonState = 0
	
	'set hold timer
	'system.addTimer this.HoldTime, "on error resume next: if this.ButtonState = 1 then this.ButtonState = 2",1,"HoldTimer_" & this.ObjectID
	
	'system.addTimer 2, "on error resume next: if this.ButtonState = 1 and this.HoldCount >9 then this.ButtonState = 2",1,"HoldTimer_" & this.ObjectID
end if]]>
						</Object>
						<Object ID="{06B09AB9-AD72-422D-971F-BAD8CDE65D34}" Class="sys://Schema/System/SuperClass" LinkObject="{657D6703-E52E-4BD1-BB78-FB2321AEA9FD}" />
					</Object>
					<Object ID="{6F54210E-57AB-40FB-BBCC-E543336E363A}" Name="BinarySensor" Class="sys://Schema/System/Class" Description="Supports sensors that provide on/off state changes (e.g. motion, door/window, etc.)" Icon="AgAAAD4BAAAAAAEAAQAQEBAAAAAAACgBAAAWAAAAKAAAABAAAAAgAAAAAQAEAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAACAAAAAAAAACqgAAAAAAACqqAAAAAAACqqAAAAAAACqqAAAAAAACqqAAAAAAACqqAAAAAAACqqAAAAAgACqqAAAAAKICqqAAAAAAqiqqAAAAAACqqqAAAAAAAKqqIAAAAAAAqqqiAAAAAACqqqoAAAAAAAAAAAAAAAAP/7AAC20QAAqqEAALbDAAD/hwAAtgsAAFQVAAC0GwAAuH8AAJD/AACB/wAAg/8AAIP/AACB/wAAgf8AAP//AAA=" >
						<Object ID="{C3D57922-F23E-4D80-8831-5FB8E133504F}" Class="sys://Schema/System/SuperClass" LinkObject="{FEA6B57D-0272-48AE-B247-89CC8EF012D1}" />
						<Object ID="{481F53D1-5C46-4DB0-AECC-3F1F03BAB02F}" Class="sys://Schema/System/SuperClass" LinkObject="{DD124036-E4EE-4354-9253-BE8E38337936}" />
						<Object ID="{D2C4FFA7-C477-47BD-B2CC-0CD6529F3275}" Class="sys://Schema/System/SuperClass" LinkObject="{A9DE68F7-3EAA-4ACB-9CBC-49C828D5F39F}" />
						<Object ID="{B197A2A0-F049-4F65-B7C7-0E48A92C0B63}" Class="sys://Schema/System/SuperClass" LinkObject="{3F8287FE-1104-4979-901F-ED72046073D7}" />
					</Object>
					<Object ID="{65A6809C-C1E7-410A-8A22-CE9A5BBE7ADF}" Name="AlarmSensor" Class="sys://Schema/System/Class" Icon="AgAAAD4BAAAAAAEAAQAQEBAAAAAAACgBAAAWAAAAKAAAABAAAAAgAAAAAQAEAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAACAAAAAAAAACqgAAAAAAACqqAAAAAAACqqAAAAAAACqqAAAAAAACqqAAAAAAACqqAAAAAAACqqAAAAAgACqqAAAAAKICqqAAAAAAqiqqAAAAAACqqqAAAAAAAKqqIAAAAAAAqqqiAAAAAACqqqoAAAAAAAAAAAAAAAAP/7AAC20QAAqqEAALbDAAD/hwAAtgsAAFQVAAC0GwAAuH8AAJD/AACB/wAAg/8AAIP/AACB/wAAgf8AAP//AAA=" >
						<Object ID="{E295BC8A-A365-440B-A4D6-95020DCFB6CF}" Class="sys://Schema/System/SuperClass" LinkObject="{FEA6B57D-0272-48AE-B247-89CC8EF012D1}" />
						<Object ID="{ED60C26F-2532-4666-9925-0DABAAF3542D}" Class="sys://Schema/System/SuperClass" LinkObject="{DD124036-E4EE-4354-9253-BE8E38337936}" />
						<Object ID="{11D76256-14DB-410F-B8AB-2F642A76DFD5}" Class="sys://Schema/System/SuperClass" LinkObject="{A9DE68F7-3EAA-4ACB-9CBC-49C828D5F39F}" />
						<Object ID="{9BFBA967-9910-4AE5-94EB-B74184437F80}" Class="sys://Schema/System/SuperClass" LinkObject="{3F8287FE-1104-4979-901F-ED72046073D7}" />
					</Object>
					<Object ID="{FEE43F78-1B42-4750-A05E-AEF500842E91}" Name="MultilevelSensor" Class="sys://Schema/System/Class" Delegatable="-1" BaseTemplate="{EB51B6D7-E556-4EA4-B057-7DE53B0BFC4A}" Icon="AgAAAD4BAAAAAAEAAQAQEBAAAAAAACgBAAAWAAAAKAAAABAAAAAgAAAAAQAEAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAACAAAAAAAAACqgAAAAAAACqqAAAAAAACqqAAAAAAACqqAAAAAAACqqAAAAAAACqqAAAAAAACqqAAAAAgACqqAAAAAKICqqAAAAAAqiqqAAAAAACqqqAAAAAAAKqqIAAAAAAAqqqiAAAAAACqqqoAAAAAAAAAAAAAAAAP/7AAC20QAAqqEAALbDAAD/hwAAtgsAAFQVAAC0GwAAuH8AAJD/AACB/wAAg/8AAIP/AACB/wAAgf8AAP//AAA=" Description="Supports sensors that generate Sensor_Multilevel command class" >
						<Object ID="{B772FF57-09D9-4774-9355-E12D285C69C4}" Name="Notes" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'SensorMultilevel 0x31 (49)

'enum SensorMultilevelCmd
'{
'        SensorMultilevelCmd_Get         = 0x04,
'        SensorMultilevelCmd_Report      = 0x05
'};
'
'enum SensorType
'{
'        SensorType_Temperature = 1,
'        SensorType_General = 2,
'        SensorType_Luminance = 3,
'        SensorType_Power,
'        SensorType_RelativeHumidity = 5,
'        SensorType_Velocity,
'        SensorType_Direction,
'        SensorType_AtmosphericPressure,
'        SensorType_BarometricPressure,
'        SensorType_SolarRadiation,
'        SensorType_DewPoint,
'        SensorType_RainRate,
'        SensorType_TideLevel,
'        SensorType_Weight,
'        SensorType_Voltage,
'        SensorType_Current,
'        SensorType_CO2,
'        SensorType_AirFlow,
'        SensorType_TankCapacity,
'        SensorType_Distance
'};
'
'static char const* c_sensorTypeNames[] = 
'{
'        "Undefined",
'        "Temperature",
'        "General",
'        "Luminance",
'        "Power",
'        "Relative Humidity",
'        "Velocity",
'        "Direction",
'        "Atmospheric Pressure",
'        "Barometric Pressure",
'        "Solar Radiation",
'        "Dew Point",
'        "Rain Rate",
'        "Tide Level",
'        "Weight",
'        "Voltage",
'        "Current",
'        "CO2 Level",
'        "Air Flow",
'        "Tank Capacity",
'        "Distance"
'};
'
'static char const* c_tankCapcityUnits[] = 
'{
'        "l",
'        "cbm",
'        "gal"
'};
'
'static char const* c_distanceUnits[] = 
'{
'        "m",
'        "cm",
'        "ft"
'};

'
'if (SensorMultilevelCmd_Report == (SensorMultilevelCmd)_data[0])
'{
'        uint8 scale;
'        string valueStr = ExtractValue( &_data[2], &scale );
'
'        if( ValueDecimal* value = static_cast<ValueDecimal*>( GetValue( _instance, 0 ) ) )
'        {
'                value->SetLabel( c_sensorTypeNames[_data[1]] );
'                switch( _data[1] )
'                {
'                        case SensorType_Temperature:           value->SetUnits( scale ? "F" : "C" );                   break;
'                        case SensorType_General:               value->SetUnits( scale ? "" : "%" );                    break;
'                        case SensorType_Luminance:             value->SetUnits( scale ? "lux" : "%" );                 break;
'                        case SensorType_Power:                 value->SetUnits( scale ? "BTU/h" : "W" );               break;
'                        case SensorType_RelativeHumidity:      value->SetUnits( "%" );                                                 break;
'                        case SensorType_Velocity:              value->SetUnits( scale ? "mph" : "m/s" );               break;
'                        case SensorType_Direction:             value->SetUnits( "" );                                                  break;
'                        case SensorType_AtmosphericPressure:   value->SetUnits( scale ? "inHg" : "kPa" );              break;
'                        case SensorType_BarometricPressure:    value->SetUnits( scale ? "inHg" : "kPa" );              break;
'                        case SensorType_SolarRadiation:        value->SetUnits( "W/m2" );                                              break;
'                        case SensorType_DewPoint:              value->SetUnits( scale ? "in/h" : "mm/h" );             break;
'                        case SensorType_RainRate:              value->SetUnits( scale ? "F" : "C" );                   break;
'                        case SensorType_TideLevel:             value->SetUnits( scale ? "ft" : "m" );                  break;
'                        case SensorType_Weight:                value->SetUnits( scale ? "lb" : "kg" );                 break;
'                        case SensorType_Voltage:               value->SetUnits( scale ? "mV" : "V" );                  break;
'                        case SensorType_Current:               value->SetUnits( scale ? "mA" : "A" );                  break;
'                        case SensorType_CO2:                   value->SetUnits( "ppm" );                                               break;
'                        case SensorType_AirFlow:               value->SetUnits( scale ? "cfm" : "m3/h" );              break;
'                        case SensorType_TankCapacity:          value->SetUnits( c_tankCapcityUnits[scale] );   break;
'                        case SensorType_Distance:              value->SetUnits( c_distanceUnits[scale] );              break;
'                        default:                                                                                                                                                                break;
'                }
'
'                Log::Write( "Received SensorMultiLevel report from node %d, instance %d: value=%s%s", GetNodeId(), _instance, valueStr.c_str(), value->GetUnits().c_str() );
'                value->OnValueChanged( valueStr );
'        }
'
'        return true;
'}

]]>
						</Object>
						<Object ID="{5720B97F-EBEF-460F-BDDC-51989EA30F80}" Class="sys://Schema/System/SuperClass" LinkObject="{FEA6B57D-0272-48AE-B247-89CC8EF012D1}" />
						<Object ID="{55094F76-04B0-47C5-AE90-9EA69B3586F0}" Class="sys://Schema/System/SuperClass" LinkObject="{DD124036-E4EE-4354-9253-BE8E38337936}" />
						<Object ID="{148BFC47-EC61-4DAD-886D-06D7B669CDA6}" Class="sys://Schema/System/SuperClass" LinkObject="{A9DE68F7-3EAA-4ACB-9CBC-49C828D5F39F}" />
						<Object ID="{498AFCF6-C1B5-4E99-A3DC-239A62732F7F}" Class="sys://Schema/System/SuperClass" LinkObject="{3F8287FE-1104-4979-901F-ED72046073D7}" />
					</Object>
					<Object ID="{C8F24746-5BC4-4EED-9FAF-83D1DB6D640D}" Name="SwitchMultilevel" Class="sys://Schema/System/Class" Description="Supports switches that generate Switch_Multilevel command class commands." Icon="AgAAAD4BAAAAAAEAAQAQEBAAAAAAACgBAAAWAAAAKAAAABAAAAAgAAAAAQAEAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAADswAACAAAADsDsACquAADsAA7CqqzAAOwADiqq7OwOwAACqq7ADswAACqqzAAAAAACqqAAAAAAACqqAAAAAgACqqAAAAAKICqqAAAAAAqiqqAAAAAACqqqAAAAAAAKqqIAAAAAAAqqqiAAAAAACqqqoAAAAAAAAAAAAAAAAPx7AAD5MAAA84AAAHOAAAAngQAAjwMAAP4fAAD8PwAAuH8AAJD/AACB/wAAg/8AAIP/AACB/wAAgf8AAP//AAA=" Virtual="-1" >
						<Object ID="{6C25DA5D-3AA9-4C61-93DA-A28CD6305532}" Name="Level" Flags="0x900" Class="sys://Schema/System/Percent" />
						<Object ID="{02900678-1D92-464C-83C1-FC1AF2757CD3}" Name="ForceLevelStateChange" Flags="0x900" Class="sys://Schema/System/Boolean" Description="If true, Level state change is forced when new value is received." />
						<Object ID="{A20B432A-B74D-411D-A61F-95D0E6DDC4F1}" Name="Repeat" Flags="0x900" Class="sys://Schema/System/Boolean" Description="Used for buttons that send repetitive commands as the button is held down.  Invoked by object inheriting from SwitchMultilevel." />
						<Object ID="{597BC99F-A298-4C8E-988E-3A922A1E4271}" Name="BlockRepeat" Flags="0x900" Class="sys://Schema/System/Boolean" ReadOnly="-1" />
						<Object ID="{912B24CA-AB2D-4E71-AA44-664B6258B637}" Name="SendCmd_SetSwitchMultilevel" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'
sSendType = "SE"

if this.IsOfExplicitType(Schema.Modules.Leviton.Classes.Secure.Path) and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

command = ">N" & this.NodeID & sSendType & "38,1," & method.Level*100
this.Parent.Parent.SendCommand command, true, this.nodeID

if gViziaIsDebugOn(1) then debugout "SendCmd_SetSwitchMultilevel() for node=" & this.NodeID & " to " & method.Level*100
]]>
							<Object ID="{55D66271-3B55-47D6-96F8-FB703D373CAA}" Name="Level" Class="sys://Schema/System/Percent" />
						</Object>
						<Object ID="{A83FA184-5FB9-426D-BEEE-4E6BF6C9828A}" Name="OnChangeBlockRepeat" Class="sys://Schema/Scripting/ClassProperty" Property="{597BC99F-A298-4C8E-988E-3A922A1E4271}" >
<![CDATA[
Script=
'
if sysevent.newVal then
	system.addTimer 1, "on error resume next:this.BlockRepeat = false",1,"Block_SwitchMultilevel_Repeat" & this.ObjectID
end if]]>
						</Object>
					</Object>
					<Object ID="{7DAE75E4-DD7A-4A0E-8D41-79A6505E33B3}" Name="Lock" Class="sys://Schema/System/Class" Icon="AgAAADYOAAAAAAEAAgAQEAAAAAAAAGgFAAAmAAAAICAAAAAAAACoCAAAjgUAACgAAAAQAAAAIAAAAAEACAAAAAAAQAEAAAAAAAAAAAAAAAAAAAAAAAD///8AAGWyAP3//wAAluQAAGuvABOg6QAApvYAAIbFAAAZNwAAEjcAeKS9ACm4/wAApfMAAIvNAAAAAACHo7UAKbf/AIeltwAAqPUAAI/RACmz+AAAhuEAAGKbAAAADgAAgt4AAJLUACmw9wAApvUAE6HrAACe6gAAickAAAADAHiWqAAAlx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8BHx8fHx8fHx8fHx8fHx8DBB8fHx8fHx8fHx8fHx8cHQ0fHyAfHx8fHx8fHx8fFAwNHx8PHx8fHx8fHx8fHwsMDR8fDx8fHx8fHx8fHx8LEg0fHw8fHx8fHx8fHx8fFBgZHx8PHx8fHx8fHx8fHxQVFhcfDx8fHx8fHx8fHx8LEhMfHw8fHx8fHx8fHx8fFAwNHx8PHx8fHx8fHx8fHwsMDR8fDx8fHx8fHx8fHx8cDAcICQofHx8fHx8fHx8fHwMEHx8fHx8fHx8fHx8fHx8fAR8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fH///AAD+/wAA/P8AAPgfAAD4HwAA+B8AAPgfAAD4HwAA+B8AAPgfAAD4HwAA+B8AAPgfAAD8/wAA/v8AAP//AAAoAAAAIAAAAEAAAAABAAgAAAAAAIAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAgACAAAAAgIAAAACAAAAAgIAAAACAAMDAwADA3MAA8MqmAICAgAD/AP8A/wAAAP//AAAA/wAAAP//AAAA/wD///8A8Pv/AKSgoADU8P8AseL/AI7U/wBrxv8ASLj/ACWq/wAAqv8AAJLcAAB6uQAAYpYAAEpzAAAyUADU4/8Ascf/AI6r/wBrj/8ASHP/ACVX/wAAVf8AAEncAAA9uQAAMZYAACVzAAAZUADU1P8AsbH/AI6O/wBra/8ASEj/ACUl/wAAAP8AAADcAAAAuQAAAJYAAABzAAAAUADj1P8Ax7H/AKuO/wCPa/8Ac0j/AFcl/wBVAP8ASQDcAD0AuQAxAJYAJQBzABkAUADw1P8A4rH/ANSO/wDGa/8AuEj/AKol/wCqAP8AkgDcAHoAuQBiAJYASgBzADIAUAD/1P8A/7H/AP+O/wD/a/8A/0j/AP8l/wD/AP8A3ADcALkAuQCWAJYAcwBzAFAAUAD/1PAA/7HiAP+O1AD/a8YA/0i4AP8lqgD/AKoA3ACSALkAegCWAGIAcwBKAFAAMgD/1OMA/7HHAP+OqwD/a48A/0hzAP8lVwD/AFUA3ABJALkAPQCWADEAcwAlAFAAGQD/1NQA/7GxAP+OjgD/a2sA/0hIAP8lJQD/AAAA3AAAALkAAACWAAAAcwAAAFAAAAD/49QA/8exAP+rjgD/j2sA/3NIAP9XJQD/VQAA3EkAALk9AACWMQAAcyUAAFAZAAD/8NQA/+KxAP/UjgD/xmsA/7hIAP+qJQD/qgAA3JIAALl6AACWYgAAc0oAAFAyAAD//9QA//+xAP//jgD//2sA//9IAP//JQD//wAA3NwAALm5AACWlgAAc3MAAFBQAADw/9QA4v+xANT/jgDG/2sAuP9IAKr/JQCq/wAAktwAAHq5AABilgAASnMAADJQAADj/9QAx/+xAKv/jgCP/2sAc/9IAFf/JQBV/wAASdwAAD25AAAxlgAAJXMAABlQAADU/9QAsf+xAI7/jgBr/2sASP9IACX/JQAA/wAAANwAAAC5AAAAlgAAAHMAAABQAADU/+MAsf/HAI7/qwBr/48ASP9zACX/VwAA/1UAANxJAAC5PQAAljEAAHMlAABQGQDU//AAsf/iAI7/1ABr/8YASP+4ACX/qgAA/6oAANySAAC5egAAlmIAAHNKAABQMgDU//8Asf//AI7//wBr//8ASP//ACX//wAA//8AANzcAAC5uQAAlpYAAHNzAABQUADy8vIA5ubmANra2gDOzs4AwsLCALa2tgCqqqoAnp6eAJKSkgCGhoYAenp6AG5ubgBiYmIAVlZWAEpKSgA+Pj4AMjIyACYmJgAaGhoADg4OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXGx0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxsbHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcbGxsdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXGxsbGx0fHx8fHwAAAAAAAAAAAAAAAAAAAAAAAAAAABcbGxobHQAAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxsbGhsdAAAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAXGhsaGx0AAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAABcaGxobHQAAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxobGhsdAAAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAXGhsaGx0AAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAABcaGxobHQAAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxobGhsdAAAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAXGxsoGx0AAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAABcbGygrHSsAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxobGhsdAAAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAXGhsaGx0AAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAABcaGxobHQAAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxobGhsdAAAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAXGhsaGx0AAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAABcaGxobHQAAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxobGhsdAAAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAXGxsaGx0AAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAABcbGxobHR0dHR0dAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcbGxsdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcbGx0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcbHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD////////////8////+P////D////g////wAf//8AH///AB///wAf//8AH///AB///wAf//8AH///AB///wAf//8AH///AB///wAf//8AH///AB///wAf//8AH///AB///wAf//8AH///g////8P////j////8/////////////w==" ValueProperty="{A8F41B3B-F64E-4B34-B730-4AAAE37E29DE}" >
						<Object ID="{096484D0-E3D2-42EF-818F-D4CF6C91B73F}" Class="sys://Schema/System/SuperClass" LinkObject="{FEA6B57D-0272-48AE-B247-89CC8EF012D1}" />
						<Object ID="{03837068-5F94-4854-998A-C578EC719870}" Name="LastUserNumber" Flags="0xB00" Class="sys://Schema/System/Number" ReadOnly="-1" Bindable="-1" />
						<Object ID="{DB0A0D39-1DB0-48D3-A963-1B4176F96274}" Name="LastUserName" Flags="0xB00" Class="sys://Schema/System/Text" ReadOnly="-1" Bindable="-1" />
						<Object ID="{4D4B8064-17B0-40A1-A206-B42FFECB23C7}" Name="LastActuated" Flags="0xB00" Class="sys://Schema/System/DateTime" DefaultValue="1/1/2011" ReadOnly="-1" Bindable="-1" />
						<Object ID="{D093CE60-6F8C-493D-BC10-4FC91DE1379C}" Name="LockState" Flags="0xB00" Class="sys://Schema/System/MultiValue" Filter="{3F852468-04F4-46F3-B1C7-B0F92201F3D2}" Description="Current state of the lock." ReadOnly="-1" Bindable="-1" />
						<Object ID="{0CF20689-581C-45EF-84FC-5E32BAFC8DA6}" Name="Failure" Flags="0xB00" Class="sys://Schema/System/Boolean" ReadOnly="-1" Description="Set to true when a failure occurs (probably due to door alignment)." Bindable="-1" />
						<Object ID="{AE68E51C-B383-4383-A6A6-146A5AC8DF96}" Name="LastFailure" Flags="0xB00" Class="sys://Schema/System/DateTime" DefaultValue="1/1/2011" ReadOnly="-1" Bindable="-1" />
						<Object ID="{B56C9E54-280C-444E-B5FE-2967A2D7137D}" Name="TooManyBadEntries" Flags="0xB00" Class="sys://Schema/System/Boolean" ReadOnly="-1" Description="Someone may be trying to guess the locks combination." Bindable="-1" />
						<Object ID="{012F162A-FE23-4BBB-ADA3-01E756729118}" Name="LastTooManyBadEntries" Flags="0xB00" Class="sys://Schema/System/DateTime" DefaultValue="1/1/2011" ReadOnly="-1" Bindable="-1" />
						<Object ID="{30F3511D-5C69-412A-A4EB-0ADDF4EA78FC}" Name="Initialize" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" />
						<Object ID="{240898D0-31CE-42C7-A430-92F730B8E31A}" Name="SetUnlock" Flags="0x500" Class="sys://Schema/System/Boolean" Description="Set to true to unlock the door." Persistent="0" Momentary="-1" />
						<Object ID="{E8973B09-13A8-4206-A839-235DC2A8C846}" Name="SetLock" Flags="0x500" Class="sys://Schema/System/Boolean" Description="Set to true to lock the door." Persistent="0" Momentary="-1" />
						<Object ID="{91DF2ABE-E1C5-447A-94DD-318D17241571}" Name="GetLockState" Flags="0x500" Class="sys://Schema/System/Boolean" Description="Set to true to get current lock state." Persistent="0" Momentary="-1" />
						<Object ID="{A8F41B3B-F64E-4B34-B730-4AAAE37E29DE}" Name="Unlocked" Flags="0xB00" Class="sys://Schema/System/Boolean" Description="Set following confirmation of lock state (e.g. receipt of a status packet)." Bindable="-1" />
						<Object ID="{B4D9F61D-D01B-4225-88FE-A9C8518DF42E}" Name="SendCmd_SetUnlocked" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
' pass the desired lock state.  unlock = true to unlock, false to lock.

sSendType = "SE"

if this.IsOfExplicitType("sys://Schema/Modules/Leviton/Classes/Secure") and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

iUnlock = 255

if method.Unlock = true then
	iUnlock = 0
end if

' unlock the door
command = ">N" & this.NodeID & sSendType & "98,1," & iUnlock

this.Parent.Parent.SendCommand command, true, this.NodeID ' High-priority

if gViziaIsDebugOn(2) then debugout "SendCmd_SetLockState(): LOCK SET command=" & command
]]>
							<Object ID="{CF2F61DF-580B-4F16-A661-61005FB3C0CE}" Name="Unlock" Flags="0x900" Class="sys://Schema/System/Boolean" ReadOnly="-1" />
						</Object>
						<Object ID="{DD28BFE2-F28C-4A2C-8A12-26D9EEB2B1E2}" Name="SendCmd_GetLockState" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'
sSendType = "SE"

if this.IsOfExplicitType("sys://Schema/Modules/Leviton/Classes/Secure") and this.Parent.Parent.VRC0Pv3 = true then
	sSendType = "SS"
end if

command = ">N" & this.NodeID & sSendType & "98,2"
this.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(1) then debugout "SendCmd_GetLockState(): LOCK GET from node=" & this.NodeID
]]>
						</Object>
						<Object ID="{72306C74-86F7-4409-A20F-5F9766DA78ED}" Name="OnChangeUnlocked" Class="sys://Schema/Scripting/ClassProperty" Property="{A8F41B3B-F64E-4B34-B730-4AAAE37E29DE}" >
<![CDATA[
Script=
 ' if already not receiving an update, let the user modify lockstate
if this.ReceivingUpdate = false then
	if sysevent.newVal then
		this.SendCmd_SetUnlocked true  ' unlock
		if this.OneWay = true then
			' in 10 seconds check to ensure door is locked
			system.addTimer 10, "on error resume next: this.SendCmd_GetLockState",1,"SendCmd_GetLockState_" & this.Name & this.ObjectID
		end if
	else
		this.SendCmd_SetUnlocked false  ' lock
		if this.OneWay = true then
			' in 10 seconds check to ensure door is locked even if it's not oneway
			system.addTimer 10, "on error resume next: this.SendCmd_GetLockState",1,"SendCmd_GetLockState_" & this.Name & this.ObjectID
		end if
	end if
end if]]>
						</Object>
						<Object ID="{CB1BCDA5-AF0D-4A68-A1AD-52C2FE883E6E}" Class="sys://Schema/System/SuperClass" LinkObject="{783E650E-B3FD-4CBD-BD40-398D731C65E9}" />
						<Object ID="{4DCDBDE2-F209-4D3C-93AE-D6F74922BFE1}" Class="sys://Schema/System/SuperClass" LinkObject="{A9DE68F7-3EAA-4ACB-9CBC-49C828D5F39F}" />
						<Object ID="{A20C1DF4-6B7A-430D-AF0D-F4DEA0645262}" Name="OnChangeSetLock" Class="sys://Schema/Scripting/ClassProperty" Property="{E8973B09-13A8-4206-A839-235DC2A8C846}" >
<![CDATA[
Script=
if this.OneWay = true then
	' if device is oneway, don't trust system state, force a state change
	this.SetValueForced "Unlocked", false
else
	this.Unlocked = false
end if]]>
						</Object>
						<Object ID="{738FD587-9656-4B81-8373-A4E61E90945B}" Name="OnChangeSetUnlock" Class="sys://Schema/Scripting/ClassProperty" Property="{240898D0-31CE-42C7-A430-92F730B8E31A}" >
<![CDATA[
Script=
if this.OneWay = true then
	' if device is oneway, don't trust system state, force a state change
	this.SetValueForced "Unlocked", true
else
	this.Unlocked = true
end if]]>
						</Object>
						<Object ID="{DBFE2995-611C-48D5-86BF-A793B9A59745}" Name="OnChangeGetLockState" Class="sys://Schema/Scripting/ClassProperty" Property="{91DF2ABE-E1C5-447A-94DD-318D17241571}" >
<![CDATA[
Script=
'
if this.ReceivingUpdate = false then
	this.SendCmd_GetLockState
end if]]>
						</Object>
						<Object ID="{C685AEBC-C5FC-498B-AB8D-D3B5D4B2BD56}" Class="sys://Schema/System/SuperClass" LinkObject="{4574D1AD-E239-4B28-B4F8-AC27C83AACB8}" />
						<Object ID="{64D07AF5-5257-4966-9821-5C6A1733994B}" Name="OnChangeInitialize" Class="sys://Schema/Scripting/ClassProperty" Property="{30F3511D-5C69-412A-A4EB-0ADDF4EA78FC}" >
<![CDATA[
Script=
'
this.SetInit]]>
						</Object>
						<Object ID="{69042EE1-E205-490B-968C-65F31B780A25}" Name="OnChangeLastAlarmTime" Class="sys://Schema/Scripting/ClassProperty" Property="{9A27B044-39EE-4502-9897-12B863DB1171}" >
<![CDATA[
Script=
' when a new alarm is set, set lock variables to match.

this.LockState = this.AlarmType

this.ReceivingUpdate = true
select case this.AlarmType
	case 17:	'failed to lock on from keypad
		this.SetValueForced "Failure", true
		this.LastUserNumber = 0
		this.LastUserName = "FAILURE"
	case 18:	'lock keypad
		this.Failure = false
		this.TooManyBadEntries = false
		set oUser = this.GetUserByNumber(this.AlarmLevel)
		this.Unlocked = false
		if not oUser is nothing then
			this.LastUserNumber = oUser.UserNumber
			this.LastUserName = oUser.Name
			oUser.AccessCount = oUser.AccessCount + 1
            oUser.LastAction = "LOCK"
            oUser.LastAccessDate = now
            set oUser = Nothing
		else
			this.LastUserNumber = 0
			this.LastUserName = "UNKNOWN"
		end if
	case 19:	'unlock keypad
		this.Failure = false
		this.TooManyBadEntries = false
		set oUser = this.GetUserByNumber(this.AlarmLevel)
		this.Unlocked = true
		if not oUser is nothing then
			this.LastUserNumber = oUser.UserNumber
			this.LastUserName = oUser.Name
			oUser.AccessCount = oUser.AccessCount + 1
            oUser.LastAction = "UNLOCK"
            oUser.LastAccessDate = now
            set oUser = Nothing
		else
			this.LastUserNumber = 0
			this.LastUserName = "UNKNOWN"
		end if
	case 20: '
	case 21:	'locked from lever or using key
		this.Failure = false
		this.TooManyBadEntries = false
		this.Unlocked = false
		this.LastUserNumber = 0
		this.LastUserName = "UNKNOWN"
	case 22:	'unlocked from lever or using key
		this.Failure = false
		this.TooManyBadEntries = false
		this.Unlocked = true
		this.LastUserNumber = 0
		this.LastUserName = "UNKNOWN"
	case 23:	'failed to lock on zwave
		this.SetValueForced "Failure", true
		this.LastUserNumber = 0
		this.LastUserName = "FAILURE"
	case 24:	'locked via z-wave
		this.Failure = false
		this.TooManyBadEntries = false
		this.Unlocked = false
		this.LastUserNumber = 0
		this.LastUserName = "SYSTEM"
	case 25:	'unlocked via z-wave
		this.Failure = false
		this.TooManyBadEntries = false
		this.Unlocked = true
		this.LastUserNumber = 0
		this.LastUserName = "SYSTEM"	
	case 33:	'user code deleted
	case 112:	'new user code
	case 161:	'too many bad entries
		this.SetValueForced "TooManyBadEntries", true
		this.LastUserNumber = 0
		this.LastUserName = "BAD_ENTRIES"
	case else:
		this.LastUserNumber = 0
		this.LastUserName = "UNKNOWN_CMD: " & this.AlarmType
end select

' since we don't know all possible values, don't do this
'if this.AlarmType MOD 2 = 0 then
'	'number is even and door is locked
'	this.Unlocked = false
'elseif not this.AlarmType=17 then
'	this.Unlocked = true
'end if

this.ReceivingUpdate = false	

' lastly, set DateTime for actuation
' it is very important that this is done last 
' since a home OnChangeScript will use LastActuated detect setting of the 
' lastuser and lockstate
this.LastActuated = now]]>
						</Object>
						<Object ID="{B782C9E0-8425-412F-A0FB-7CF65ED170E9}" Class="sys://Schema/System/SuperClass" LinkObject="{930F0A85-504F-4F42-828E-FA70E6462C60}" />
						<Object ID="{ECAD8B1C-39F2-481F-95B3-433931C10673}" Name="OnChangeFailure" Class="sys://Schema/Scripting/ClassProperty" Property="{0CF20689-581C-45EF-84FC-5E32BAFC8DA6}" >
<![CDATA[
Script=
'
if sysevent.newVal then 
	this.LastFailure = now
	' set an event of highest severity
	' see events handler example in help file to handle events
	this.Parent.SetEventNotification this.NodeID, 10, "", "has failed to lock."
end if]]>
						</Object>
						<Object ID="{346EE6CD-7B3E-4EAE-8E3C-BB8CDA2DF720}" Name="OnChangeTooManyBadEntries" Class="sys://Schema/Scripting/ClassProperty" Property="{B56C9E54-280C-444E-B5FE-2967A2D7137D}" >
<![CDATA[
Script=
'
if sysevent.newVal then
	this.LastTooManyBadEntries = now
	this.Parent.SetEventNotification this.NodeID, 10, "", "has had too many incorrect code entries."
end if]]>
						</Object>
						<Object ID="{DDF96288-24C0-45B1-9666-EFB996807E45}" Class="sys://Schema/System/SuperClass" LinkObject="{47A6B906-747D-4430-A142-924A7BF4169C}" />
						<Object ID="{CBFCD5F5-8B83-46F9-A3BD-973CBD36A80D}" Class="sys://Schema/System/SuperClass" LinkObject="{657D6703-E52E-4BD1-BB78-FB2321AEA9FD}" />
					</Object>
					<Object ID="{EE68A964-B94E-44AB-9C90-EA4BAA695FC8}" Name="JobQueue" Class="sys://Schema/System/Class" Description="Generic FIFO Queue" >
						<Object ID="{E9544933-22AF-4F55-AFB5-4142D3FDCE09}" Name="Container" Class="sys://Schema/System/SuperClass" LinkObject="{DD124036-E4EE-4354-9253-BE8E38337936}" />
						<Object ID="{E973A437-0D2A-410E-8406-F3E76D244E6B}" Class="sys://Schema/System/ChildClass" LinkObject="{62D0FEEF-A057-45D7-9CE0-F905590B3B3F}" />
						<Object ID="{87C8EBA6-1459-4C10-AA3D-2201FA7024BB}" Name="ClearJobQueue" Flags="0x500" Class="sys://Schema/System/Boolean" Description="Clears all jobs in the job queue." Momentary="-1" Persistent="0" />
						<Object ID="{05DA9348-5EA6-41BA-BB77-36916A0D29B8}" Name="ResetJobCounts" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" Description="Resets job counts." />
						<Object ID="{0687BE79-7D9C-4A21-B28A-C92748168DEE}" Name="AddDelayForNextJob" Flags="0x900" Class="sys://Schema/System/Boolean" Description="If true, a delay is added beffore processing the next job in queue." />
						<Object ID="{6F6D7D34-C5D7-437C-B8F9-2F14E882D670}" Name="InitializationWait" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" Description="Time in seconds to wait for device response N&quot; or N: during initialization." DefaultValue="15" />
						<Object ID="{638223A5-9761-4A0C-906A-D8F99A1901CE}" Name="JobTimeout" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="20" Description="Maximum allowable runtime for a Job. Default is 90 (seconds)." />
						<Object ID="{9D04A878-F36E-4BD3-B5CB-CDB38413D215}" Name="TotalJobs" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" Description="Total number of Jobs executed." />
						<Object ID="{2FB25C18-0058-41B6-9B0E-68FFA5A6CBFF}" Name="TotalFailedJobs" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" Description="Total number of Jobs that failed to be acknowledged." />
						<Object ID="{60F8F498-949E-47DE-986E-89B957AEB53D}" Name="MaxConsecutiveFailedJobs" Flags="0x900" Class="sys://Schema/System/Number" Description="Maximum number of consecutive Job failures before InterfaceFailure is set." DefaultValue="3" ReadOnly="-1" />
						<Object ID="{84D9B5E4-8B5E-490C-AAB2-02BE40023493}" Name="ConsecutiveFailedJobs" Flags="0x900" Class="sys://Schema/System/Number" Description="The number of consecutive Jobs that failed to complete." ReadOnly="-1" />
						<Object ID="{DA1EAFC4-31A9-4FAD-B92D-BC2FEA42CDC2}" Name="OnChangeConsecutiveFailedJobs" Class="sys://Schema/Scripting/ClassProperty" Property="{84D9B5E4-8B5E-490C-AAB2-02BE40023493}" >
<![CDATA[
Script=
'
'debugout "<OnChangeConsecutiveFailedJobs>"

if sysevent.newVal = 0 then
	'debugout "Comms OK"
	this.Parent.InterfaceFailure = false
end if

if sysevent.newVal >= this.MaxConsecutiveFailedJobs then
	'debugout "Comms NOK"
	this.Parent.InterfaceFailure = true
end if

]]>
						</Object>
						<Object ID="{B98DF0DE-3C80-4F22-B505-24FF73EF6EE6}" Name="JobIndex" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" Description="Job Number for the next job." />
						<Object ID="{0B7F2154-D431-463D-96B0-AD1DB07FDBCC}" Name="MaxRuns" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="3" Description="Maximum number of runs per Job." />
						<Object ID="{15C59803-CB4B-47DF-BA68-20656E23B763}" Name="CurrentJob" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" Description="ObjectID of the current Job." />
						<Object ID="{45F003DA-A887-448C-9829-74F2E76A6E3A}" Name="LastSentJob" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
						<Object ID="{6266F808-4605-47B1-B13F-35E87B8D5432}" Name="AddJob" Class="sys://Schema/Scripting/ClassFunction" Description="Add a Job to the queue." >
<![CDATA[
Script=
'
' This method is called when the JobQueue is not empty.
' The new Job is added to the JobQueue where
' it awaits its turn.

dim oJob

'debugout "<AddJob>"

set oJob = this.CreateObject(Schema.Modules.Leviton.Classes.Job.Path, "Job")
oJob.Description = method.Data
oJob.Priority = method.Priority
oJob.NodeID = method.NodeID

method.AddJob = oJob.ObjectID

set oJob = nothing


]]>
							<Object ID="{84502AEC-74EC-486E-91F9-FBF7D965860C}" Name="Data" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{8F363829-3ECD-48F4-89A5-76E2D5E0F23D}" Name="Priority" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{DEAD82BA-60B7-4E8E-89F8-43AB5B2D5AD8}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{37982569-93DC-429D-BC74-65CFCD9697ED}" Name="RunJob" Class="sys://Schema/Scripting/ClassFunction" Description="Add a Job to the queue and process it." >
<![CDATA[
Script=
'
' This method is called when the JobQueue is empty.
' The new Job is added to the JobQueue and executed immediately.

dim oJob

'debugout "<RunJob>"

this.CurrentJob = this.AddJob(method.Data, method.Priority, method.NodeID)
this.ProcessCurrentJob

set oJob = nothing
]]>
							<Object ID="{52752C12-E27E-4120-81FB-AF6DF80387DD}" Name="Data" Flags="0x900" Class="sys://Schema/System/Text" />
							<Object ID="{C570ECAE-6912-4363-9AA3-5B9E2C1E9D7A}" Name="Priority" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{F7597771-ABA0-4682-B968-2B566EB7C108}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{5D73F59E-5547-489D-9E3B-BA0E50027614}" Name="ProcessCurrentJob" Class="sys://Schema/Scripting/ClassFunction" Description="Process the current job." >
<![CDATA[
Script=
'
' Extract the Job payload and transmit it.

dim oJob

'debugout "<ProcessCurrentJob>"

set oJob = this.GetObject(this.CurrentJob)

oJob.Runs = oJob.Runs + 1

this.Parent.OutCmd.TxTextData = oJob.Description
this.Parent.OutCmd.Send = true
this.LastSentJob = this.Parent.OutCmd.TxTextData
'debugout oJob.Description
this.TotalJobs = this.TotalJobs + 1

this.CreateJobTimer

set oJob = nothing
]]>
						</Object>
						<Object ID="{C12284E3-E465-4A22-81A1-387DBDCA570F}" Name="RetryJob" Class="sys://Schema/Scripting/ClassFunction" Description="Run the current job again." >
<![CDATA[
Script=
'
' Either no response was received and the JobTimer expired or
' the received response indicated a failure, so retry the Job
' provided that it has not been executed more times than MaxRuns.

dim oJob
'debugout "<RetryJob>"

this.DeleteJobTimer

if this.CurrentJob <> "" then
	set oJob = this.GetObject(this.CurrentJob)
	if not oJob is nothing then
			
		' if running burn in test, stop on first job failure
		if this.Parent.StopOnFirstJobTimeout = true and this.Parent.TestingInProgress = true then
			this.Parent.Stop = true
		end if
			

		if oJob.Runs < this.MaxRuns then ' Run the same Job again
			
			if gViziaIsDebugOn(1) then debugout "RetryJob(): <" & now & "> RETRY JOB, command=" & oJob.Description
			this.ProcessCurrentJob
		else ' Job failed to execute even after repeated attempts
			
			' Get the node ID for object that had the failed job
			iNodeID = oJob.NodeID
			
			' Record the failed job to the specific device
			this.Parent.Devices.SetFailedJob iNodeID
			
			this.TotalFailedJobs = this.TotalFailedJobs + 1
			if this.ConsecutiveFailedJobs < this.MaxConsecutiveFailedJobs then
				this.ConsecutiveFailedJobs = this.ConsecutiveFailedJobs + 1
			end if
			this.GetNextJob
		end if
	else
		' CurrentJob not found.
		' Something has gone terribly wrong.
		' Flush the Job Queue.
		this.PurgeAllJobs
	end if
end if

set oJob = nothing

]]>
						</Object>
						<Object ID="{FEE9C42C-455D-447B-A404-5E8515F115AF}" Name="GetNextJob" Class="sys://Schema/Scripting/ClassFunction" Description="Get the next job from the queue." >
<![CDATA[
Script=
'
' Delete the current job and move on
' to process the next Job in the JobQueue (if any).

dim oJob
'debugout "<GetNextJob>"

this.DeleteJobTimer

set oJob = this.GetObject(this.CurrentJob)
if not oJob is nothing then
	' Purge current job
	this.DeleteObject oJob.Name

	' Get High-Priority Jobs
	set oJobs = this.GetObjectsByTypeAndPropertyValue(Schema.Modules.Leviton.Classes.Job.Path, "Priority", true)
		
	if oJobs.Count > 0 then
		this.CurrentJob = oJobs(0).ObjectID
		
		set oJob = this.GetObject(this.CurrentJob)
		if oJob.NodeID<>"" and oJob.NodeID < 233 then
			this.PurgeLowPriorityJobsByNodeID oJob.NodeID
		end if
		
		iDelayTime = 0
		
		if this.Parent.Devices.Initializing = true then
			iDelayTime = iDelayTime + this.InitializationWait
		end if
		
		if this.AddDelayForNextJob = true then
			iDelayTime = iDelayTime + .75
		end if
		
		if this.Parent.Devices.Initializing = true or this.AddDelayForNextJob = true then 
			system.addTimer iDelayTime, "on error resume next:this.ProcessCurrentJob",1,"DELAY_" & this.Parent.Name
		else
			this.ProcessCurrentJob
		end if

	else
		' No high-priority jobs so check for low-priority jobs generated by Polling
		set oJobs = this.GetObjectsByTypeAndPropertyValue(Schema.Modules.Leviton.Classes.Job.Path, "Priority", false)

		if oJobs.Count > 0 then
			this.CurrentJob = oJobs(0).ObjectID
			
			iDelayTime = 0
			
			if this.Parent.Devices.Initializing = true then
				iDelayTime = iDelayTime + this.InitializationWait
			end if
		
			if this.AddDelayForNextJob = true then
				iDelayTime = iDelayTime + .75
			end if
			
			if this.Parent.Devices.Initializing = true or this.AddDelayForNextJob = true then 
				system.addTimer iDelayTime, "on error resume next:this.ProcessCurrentJob",1,"DELAY_" & this.Parent.Name
			else
				this.ProcessCurrentJob
			end if
		else
			this.CurrentJob = ""
			this.JobIndex = 0
			this.Parent.Devices.Initializing = false
			
			'debugout "No more jobs to process."
		end if
	end if
else
	' CurrentJob not found.
	' Something has gone terribly wrong.
	' Flush the Job Queue.
	this.PurgeAllJobs
end if

set oJob = nothing
]]>
						</Object>
						<Object ID="{F75CB28D-5758-4F14-8DE1-60A97E790C22}" Name="ShortenJobDelayTimer" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Modifies the current job delay timer to a very short interval (.75 seconds)" >
<![CDATA[
Script=
'
for each oTimer in modules.Default.Timers.GetObjectsByPropertyValue("Name","DELAY_" & this.Parent.Name, false) 
	oTimer.Interval = .75
next]]>
						</Object>
						<Object ID="{E4153782-EC00-49C0-9AD1-2D2172EFD3A3}" Name="PurgeAllJobs" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Delete all Jobs in the JobQueue." >
<![CDATA[
Script=
'
dim oJob

'debugout "Error: Job not found. Purging all jobs."
for each oJob in this.GetObjectsByType(Schema.Modules.Leviton.Classes.Job.Path)
	this.DeleteObject oJob.Name
next

this.CurrentJob = ""
this.JobIndex = 0

set oJob = nothing
]]>
						</Object>
						<Object ID="{0A1F4F42-A239-4CF0-B37A-687E842F3B45}" Name="PurgeLowPriorityJobs" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'
dim oJob
' Purge all low-priority Jobs except the Current Job.

for each oJob in this.GetObjectsByTypeAndPropertyValue(Schema.Modules.Leviton.Classes.Job.Path, "Priority", false)
	if oJob.ObjectID <> this.CurrentJob then this.DeleteObject oJob.Name
next

set oJob = nothing
]]>
						</Object>
						<Object ID="{0988D8A9-7AA3-4B5E-B285-E12ACC42D3F3}" Name="PurgeLowPriorityJobsByNodeID" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'
dim oJob
' Purge all low-priority Jobs except the Current Job.

for each oJob in this.GetObjectsByTypeAndPropertyValue(Schema.Modules.Leviton.Classes.Job.Path, "Priority", false)
	if method.NodeID = oJob.NodeID then
		if oJob.ObjectID <> this.CurrentJob then this.DeleteObject oJob.Name
	end if
next

set oJob = nothing
]]>
							<Object ID="{41558028-9B59-4666-B5A3-D6D5BF495CB6}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{39BE8C7D-0404-461A-B0D3-0B78EB7B65D5}" Name="CreateJobTimer" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Create a timer to monitor Job runtime." >
<![CDATA[
Script=
'
' If no response is received within the JobTimeout period, retry the Job.
' The RetryJob method checks how many times the Job ran.
 
system.addTimer this.JobTimeout, "on error resume next: this.RetryJob", 1, this.GetJobTimerName

]]>
						</Object>
						<Object ID="{477697AB-5DA2-4B88-AF7E-56E2E65087D4}" Name="DeleteJobTimer" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Remove the Job-monitoring timer." >
<![CDATA[
Script=
'
system.removeTimer this.GetJobTimerName

]]>
						</Object>
						<Object ID="{2B229D43-BFC7-41BA-90E0-54E7F7AEE49E}" Name="GetJobTimerName" Class="sys://Schema/Scripting/ClassFunction" Description="Get a unique name for the Job timer." >
<![CDATA[
Script=
'
method.GetJobTimerName = this.Name & "_JobTimer_" & this.ObjectID
]]>
						</Object>
						<Object ID="{5DF76148-D09D-4C1A-93B8-A839803BFD33}" Name="ResetJobTotals" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'
' Reset job counts

this.TotalFailedJobs = 0
this.TotalJobs = 0
this.ConsecutiveFailedJobs = 0]]>
						</Object>
						<Object ID="{566EBFBB-41B1-4F7B-8EAD-03BFBB220FF7}" Name="OnChangeClearJobQueue" Class="sys://Schema/Scripting/ClassProperty" Property="{87C8EBA6-1459-4C10-AA3D-2201FA7024BB}" >
<![CDATA[
Script=
'
if sysevent.newVal then this.PurgeAllJobs]]>
						</Object>
						<Object ID="{6079D58A-6175-4F34-8146-4D3E3C7CD3F1}" Name="OnChangeResetJobCounts" Class="sys://Schema/Scripting/ClassProperty" Property="{05DA9348-5EA6-41BA-BB77-36916A0D29B8}" >
<![CDATA[
Script=
'
this.ResetJobTotals]]>
						</Object>
					</Object>
					<Object ID="{62D0FEEF-A057-45D7-9CE0-F905590B3B3F}" Name="Job" Class="sys://Schema/System/Class" >
						<Object ID="{9027DCEC-050D-452F-9E70-25E842B4DB5A}" Name="ClassConstructor" Class="sys://Schema/Scripting/ClassConstructor" >
<![CDATA[
Script=
'
this.Name = this.Name & this.Parent.JobIndex
this.Parent.JobIndex = this.Parent.JobIndex + 1]]>
						</Object>
						<Object ID="{EFC4BD9A-9AA5-460C-8C5F-3005E87AA930}" Name="Runs" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" Description="Number of times this Job has been executed." />
						<Object ID="{2E46AE88-BB55-4E66-98CC-647F8ED01E2D}" Name="Priority" Flags="0x900" Class="sys://Schema/System/Boolean" Description="Enabled = High Priority.  Polling requests are Low Priority." />
						<Object ID="{11E66641-6A72-4E4C-A1EE-12F5CDD12A40}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
					</Object>
					<Object ID="{3FB8B506-8200-4484-89BF-08C2C73D8F98}" Name="Groups" Class="sys://Schema/System/Class" Description="Container for all Groups." >
						<Object ID="{AB349596-94FA-4F7E-90E9-3E7A98821C1C}" Name="Container" Class="sys://Schema/System/SuperClass" LinkObject="{DD124036-E4EE-4354-9253-BE8E38337936}" />
						<Object ID="{DA399A19-99BB-4176-B414-699D65EBFA41}" Class="sys://Schema/System/ChildClass" LinkObject="{5F668323-3AE1-4684-8B2A-71FD10B87260}" />
					</Object>
					<Object ID="{5F668323-3AE1-4684-8B2A-71FD10B87260}" Name="Group" Class="sys://Schema/System/Class" Description="Device Groups." Icon="AgAAAPYJAAAAAAEAAgAQEBAAAAAAACgBAAAmAAAAICAAAAAAAACoCAAATgEAACgAAAAQAAAAIAAAAAEABAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAJmZmQAAAAAJmZmZAAAAAJkJmZkAAAAAkACZmQAAAACZCZmZAAAAAAmZmZkLu7AAAJmZmQu7sAAKAAAAC7uwAKqqCwALu7AKoKoLsLu7sAoACqC7u7uwCqCqqgu7u7AAqqqqoAAAAAAKqqqgAAAAAAAAAAAAAADwHwAA4B8AAMAfAACAHwAAgB8AAIAAAADAAAAA4AAAAMAAAACAAAAAAAAAAAAAAAAAAAAAgAAAAMA/AADgPwAAKAAAACAAAABAAAAAAQAIAAAAAACABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAwNzAAPDKpgAEBAQACAgIAAwMDAAREREAFhYWABwcHAAiIiIAKSkpAFVVVQBNTU0AQkJCADk5OQCAfP8AUFD/AJMA1gD/7MwAxtbvANbn5wCQqa0AAAAzAAAAZgAAAJkAAADMAAAzAAAAMzMAADNmAAAzmQAAM8wAADP/AABmAAAAZjMAAGZmAABmmQAAZswAAGb/AACZAAAAmTMAAJlmAACZmQAAmcwAAJn/AADMAAAAzDMAAMxmAADMmQAAzMwAAMz/AAD/ZgAA/5kAAP/MADMAAAAzADMAMwBmADMAmQAzAMwAMwD/ADMzAAAzMzMAMzNmADMzmQAzM8wAMzP/ADNmAAAzZjMAM2ZmADNmmQAzZswAM2b/ADOZAAAzmTMAM5lmADOZmQAzmcwAM5n/ADPMAAAzzDMAM8xmADPMmQAzzMwAM8z/ADP/MwAz/2YAM/+ZADP/zAAz//8AZgAAAGYAMwBmAGYAZgCZAGYAzABmAP8AZjMAAGYzMwBmM2YAZjOZAGYzzABmM/8AZmYAAGZmMwBmZmYAZmaZAGZmzABmmQAAZpkzAGaZZgBmmZkAZpnMAGaZ/wBmzAAAZswzAGbMmQBmzMwAZsz/AGb/AABm/zMAZv+ZAGb/zADMAP8A/wDMAJmZAACZM5kAmQCZAJkAzACZAAAAmTMzAJkAZgCZM8wAmQD/AJlmAACZZjMAmTNmAJlmmQCZZswAmTP/AJmZMwCZmWYAmZmZAJmZzACZmf8AmcwAAJnMMwBmzGYAmcyZAJnMzACZzP8Amf8AAJn/MwCZzGYAmf+ZAJn/zACZ//8AzAAAAJkAMwDMAGYAzACZAMwAzACZMwAAzDMzAMwzZgDMM5kAzDPMAMwz/wDMZgAAzGYzAJlmZgDMZpkAzGbMAJlm/wDMmQAAzJkzAMyZZgDMmZkAzJnMAMyZ/wDMzAAAzMwzAMzMZgDMzJkAzMzMAMzM/wDM/wAAzP8zAJn/ZgDM/5kAzP/MAMz//wDMADMA/wBmAP8AmQDMMwAA/zMzAP8zZgD/M5kA/zPMAP8z/wD/ZgAA/2YzAMxmZgD/ZpkA/2bMAMxm/wD/mQAA/5kzAP+ZZgD/mZkA/5nMAP+Z/wD/zAAA/8wzAP/MZgD/zJkA/8zMAP/M/wD//zMAzP9mAP//mQD//8wAZmb/AGb/ZgBm//8A/2ZmAP9m/wD//2YAIQClAF9fXwB3d3cAhoaGAJaWlgDLy8sAsrKyANfX1wDd3d0A4+PjAOrq6gDx8fEA+Pj4APD7/wCkoKAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKAQEBAQEBAQEBAQEBAQoKCgoKCgoKCgoKCgoKCgoKCuz5+fn5+fn5+fn5+fkBCgoKCgoKCgoKCgoKCgoKCgrs+fn5+fn5+fn5+fn5+QEKCgoKCgoKCgoKCgoKCgoK7Pn5+fn5+fn5+fn5+fn5AQoKCgoKCgoKCgoKCgoKCuz5+fn5+fn5+fn5+fn5+fkBCgoKCgoKCgoKCgoKCgr/+fn5+QoK+fn5+fn5+fn5+QEKCgoKCgoKCgoKCgoKCv/5+fkK//8K+fn5+fn5+fn5AQoKCgoKCgoKCgoKCgoK//n5CuwKCv8K+fn5+fn5+fkBCgoKCgoKCgoKCgoKCgr/+fkK7AoK/wr5+fn5+fn5+QEKCgoKCgoKCgoKCgoKCv/5+fkK7OwK+fn5+fn5+fn5AQoKCgoKCgoKCgoKCgoK//n5+fkKCvn5+fn5+fn5+fkBCgMDAwMDAwMDAwoKCgoK//n5+fn5+fn5+fn5+fn5+QEK+/v7+/v7+/sDCgoKCgoK//n5+fn5+fn5+fn5+fn5AQr7+/v7+/v7+wMKCgoKCgoK//n5+fn5+fn5+fn5+fkBCvv7+/v7+/v7AwoKCgoKCgoK//n5+fn5+fn5+fn5+QEK+/v7+/v7+/sDCgoKCgoKAvoK/////////////////wr7+/v7+/v7+wMKCgoKCgL6+voKCgoKCgoKCgoKCgoKCvv7+/v7+/v7AwoKCgoC+vr6+vr6+voK//v7CuwCCv8K+/v7+/v7+/sDCgoKAvr6+vr6+vr6+gr/+/sK7AIK/wr7+/v7+/v7+wMKCgL6+vr6Cgr6+vr6Cv/7+/sK7OwK+/v7+/v7+/v7AwoK//r6+gr//wr6+voK//v7+/sKCvv7+/v7+/v7+/sDCgr/+voK7AoK/wr6+voK//v7+/v7+/v7+/v7+/v7+wMKCv/6+grsCgr/Cvr6+voK//v7+/v7+/v7+/v7+/v7AwoK//r6+grs7Ar6+vr6+voK//v7+/v7+/v7+/v7+/sDCgr/+vr6+goK+vr6+vr6+voK//v7+/v7+/v7+/v7+wMKCgr/+vr6+vr6+vr6+vr6+voK/////////////////woKCgr/+vr6+vr6+vr6+vr6+voKCgoKCgoKCgoKCgoKCgoKCgr/+vr6+vr6+vr6+vr6+gIKCgoKCgoKCgoKCgoKCgoKCgr/+vr6+vr6+vr6+vr6AgoKCgoKCgoKCgoKCgoKCgoKCgr/////////////////CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK/wAD//4AA//8AAP/+AAD//AAA//gAAP/wAAD/8AAA//AwAP/wMAD/8AAAADAAAAA4AAAAPAAAAD4AAAA+AAAAPAAAADgAAAAwAAAAIAAAAAAAAAAAAAAAAMAAAADAAAAAAAAAAAAAACAAAAAwAAAAOAAD//wAA//+AAP//wAD/8=" >
						<Object ID="{84213188-31C5-479F-A69F-103A605FEC11}" Name="Container" Class="sys://Schema/System/SuperClass" LinkObject="{DD124036-E4EE-4354-9253-BE8E38337936}" />
						<Object ID="{80739841-672F-400A-BB70-D7BD934471E2}" Class="sys://Schema/System/ChildClass" LinkObject="{A4531371-5550-4B80-A124-FF11240CEF55}" />
						<Object ID="{4AA9C7D5-DFE0-4260-B4D1-1C8A53BC37FC}" Class="sys://Schema/System/SuperClass" LinkObject="{DEB24C93-9143-4030-86FF-29C7626BC9E3}" />
						<Object ID="{95C8DB5C-3215-4334-AE61-9DCB998476AB}" Name="Power" Class="sys://Schema/System/SuperClass" LinkObject="{9C3E5340-EAB7-402D-979A-93B5135264AA}" />
						<Object ID="{F8BF9C60-9D29-4EFB-8CEB-3951E48754EA}" Name="OnChangePowerState" Class="sys://Schema/Scripting/ClassProperty" Property="{B3E124C2-388D-4E18-A276-0410DE54803A}" >
<![CDATA[
Script=
'
'debugout "<Group OnChangePowerState>"
dim sCmd: sCmd = ""
dim sState: sState = "ON"
dim sDevices: sDevices = ""

if this.PowerState = false then sState = "OF"

' Ignore requests from Brightness changes because OnChangeBrightness will handle 
' the task of turning a dimmer on or off.
' Also ignore requests from objects with a Trigger property (used in SmartPalmPad)
if sysevent.srcProperty.name <> "Brightness" and sysevent.srcProperty.name <> "Trigger" then

	this.Brightness = abs(this.PowerState)

	if this.GroupID > 0 then
		' Control all members as a group via the GroupID
		sCmd = ">GR" & this.GroupID & sState & ",UP"
		
		'997 is ficticious node for groups
		if len(sCmd) > 0 then this.Parent.Parent.SendCommand sCmd, true, 997 & this.GroupID
	else
		' Control all members individually
		this.SendCommandToAllMembers sState & ",UP", "Switch"
	end if
end if
]]>
						</Object>
						<Object ID="{303ABDEE-AED3-4DFD-90F2-FAFA90113C01}" Name="OnChangeBrightness" Class="sys://Schema/Scripting/ClassProperty" Property="{18F4096C-D72B-40E1-89A9-892E619BAD01}" >
<![CDATA[
Script=
'
'debugout "<Group OnChangeBrightness>"

dim sCmd: sCmd = ""
dim sDevices: sDevices = ""
dim iLevel: iLevel = round(sysevent.newVal * 100)

' Ignore requests from PowerState.
' Also ignore requests from objects with a Trigger property (used in SmartPalmPad)
if sysevent.srcProperty.name <> "PowerState" and sysevent.srcProperty.name <> "Trigger" then
	this.PowerState = cbool(iLevel)
	
	' Convert Brightness level from Premise range 1-100 to ViziaRF range 1-99
	if iLevel = 100 then iLevel = 99
	
	if this.GroupID > 0 then
		' Control all members as a group via the GroupID
		sCmd = ">GR" & this.GroupID & "L" & iLevel  & ",UP"
		if len(sCmd) > 0 then this.Parent.Parent.SendCommand sCmd, true, 997 & this.GroupID
	else
		' Control all members individually
		this.SendCommandToAllMembers "L" & iLevel & ",UP", "Dimmer"
	end if
end if]]>
						</Object>
						<Object ID="{FB1034CC-A2EE-4DCA-B21A-AB99185EB5E0}" Name="GroupID" Flags="0x900" Class="sys://Schema/System/Number" Description="Group Identifier.  GroupID is stored in the RZC0P. Range is 0-999. Zero indicates the GroupID will not be used to represent this Group." />
						<Object ID="{BC012F70-E824-4083-BE89-D984A2721F5D}" Name="OnChangeGroupID" Class="sys://Schema/Scripting/ClassProperty" Property="{FB1034CC-A2EE-4DCA-B21A-AB99185EB5E0}" >
<![CDATA[
Script=
'
if sysevent.newVal < 0 or sysevent.newVal > 999 then
	this.GroupID = 0
end if]]>
						</Object>
						<Object ID="{7D8B822B-4098-4369-AD39-E164C4668D47}" Name="SetGroupID" Flags="0xD00" Class="sys://Schema/System/Boolean" Description="Program the RZC0P with the GroupID." CaptionTrue="" CaptionFalse="" Momentary="-1" />
						<Object ID="{C4CED8A3-858C-4E21-8028-C265E685B6AF}" Name="OnChangeSetGroupID" Class="sys://Schema/Scripting/ClassProperty" Property="{7D8B822B-4098-4369-AD39-E164C4668D47}" >
<![CDATA[
Script=
'
' It turns out if you try to set GroupID for 40 nodes at once, it will cause a buffer overflow (e.g. E002) 
dim sDevices: sDevices = ""

dim oMember, oDevice
dim sMembers: sMembers = ""

if sysevent.newVal and this.GroupID > 0 then
	sDevices = this.GetGroupMembers("Lighting")
	if len(sDevices) > 0 then
		this.Programmed = now
		this.Parent.Parent.SendCommand ">N" & sDevices & "GS" & this.GroupID, true, 997 & this.GroupID
	end if

' Get all group members
'for each oMember in this.GetObjectsByType(Schema.Modules.Leviton.Classes.GroupMember.Path, false)
'	set oDevice = oMember.Device
'	this.Programmed = now
'	this.Parent.Parent.SendCommand ">N" & oDevice.NodeID & "GS" & this.GroupID, true, 997 & this.GroupID
'next

'set oMember = nothing
'set oDevice = nothing
end if
]]>
						</Object>
						<Object ID="{DDFBEF49-3360-4C92-8AF8-C59FC1A89A89}" Name="Programmed" Flags="0x900" Class="sys://Schema/System/DateTime" DefaultValue="1/1/2000" ReadOnly="-1" AutoSet="0" Description="Time when GroupID was programmed." />
						<Object ID="{EE387E67-624A-42A4-98DD-94643A1CB2A0}" Name="GetGroupMembers" Class="sys://Schema/Scripting/ClassFunction" Description="Get desired Group Members as an association list." >
<![CDATA[
Script=
dim oMember, oDevice, oClass
dim sMembers: sMembers = ""
dim bFirst: bFirst = true
dim sDelimiter: sDelimiter = ""

set oClass = sys.GetObject( "sys://Schema/Modules/Leviton/Classes/" & method.ClassName)

' Get all group members
for each oMember in this.GetObjectsByType(Schema.Modules.Leviton.Classes.GroupMember.Path, false)
	set oDevice = oMember.Device
	if oDevice.IsOfExplicitType(oClass.ObjectID) then
		if not bFirst then sDelimiter = ","
		sMembers = sMembers & sDelimiter & oDevice.NodeID
		bFirst = false
	end if
next

method.GetGroupMembers = sMembers

set oMember = nothing
set oDevice = nothing
set oClass = nothing




]]>
							<Object ID="{EE31496C-7A8C-45DA-BBAF-C1998B202C1B}" Name="ClassName" Flags="0x900" Class="sys://Schema/System/Text" />
						</Object>
						<Object ID="{89CDD004-22B0-4E0A-AAD2-8BAB18F31003}" Name="SendCommandToAllMembers" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
' Send command to all group members

if method.DeviceClassType = "" then
	for each oMember in this.GetObjectsByType(Schema.Modules.Leviton.Classes.GroupMember.Path, false)
		set oDevice = oMember.Device
		sCmd = ">N" & oDevice.NodeID & method.Cmd
		if len(sCmd) > 0 then this.Parent.Parent.SendCommand sCmd, true, 997 & this.GroupID
	next
else
	for each oMember in this.GetObjectsByType(Schema.Modules.Leviton.Classes.GroupMember.Path, false)
		set oDevice = oMember.Device
		sPath = "sys://Schema/Modules/Leviton/Classes/" & method.DeviceClassType
		if oDevice.IsOfExplicitType(sPath) then
			sCmd = ">N" & oDevice.NodeID & method.Cmd
			if len(sCmd) > 0 then this.Parent.Parent.SendCommand sCmd, true, 997 & this.GroupID
		end if
	next
end if

set oMember = nothing
set oDevice = nothing]]>
							<Object ID="{A1F9ED64-689B-423D-A2EA-46D6EFDE3F60}" Name="Cmd" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
							<Object ID="{65DD5E12-7FC0-4994-BC38-E19652CCE6B3}" Name="DeviceClassType" Flags="0x900" Class="sys://Schema/System/Text" />
						</Object>
					</Object>
					<Object ID="{A4531371-5550-4B80-A124-FF11240CEF55}" Name="GroupMember" Class="sys://Schema/System/Class" Icon="AgAAADYEAAAAAAEAAgAgIBAAAAAAAOgCAAAmAAAAEBAQAAAAAAAoAQAADgMAACgAAAAgAAAAQAAAAAEABAAAAAAAgAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIiIiIiIiIiIiIiIAAAAAAiIiIiIiIiIiIiIiAAAAACIiIiIiIiIiIiIiIgAAAAIiIiIiIiIiIiIiIiIAAAAiIiIiIiIiIiIiIiIiAAACIiIiIiIiIiIiIiIiIgAAIiIAAiIiIiIiIiIiIiIAACIgAAAiIiIiIiIiIiIiAAAiAAAAAiIiIiIiIiIiIgAAIgAAAAIiIiIiIiIiIiIAACIAAAACIiIiIiIiIiIiAAAiIAAAIiIiIiIiIiIiIgAAIiIAAiIiIiIiIiIiIiIAAAIiIiIiIiIiIiIiIiIiAAAAIiIiIiIiIiIiIiIiIgAAAAIiIiIiIiIiIiIiIiIAAAAAIiIiIiIiIiIiIiIiAAAAAAIiIiIiIiIiIiIiIgAAAAAAIiIiIiIiIiIiIiIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////////////////////////8AAAH+AAAB/AAAAfgAAAHwAAAB4AAAAcAAAAGAAAABg4AAAYfAAAGHwAABh8AAAYOAAAGAAAABwAAAAeAAAAHwAAAB+AAAAfwAAAH+AAAB/wAAAf///////////////////////////////ygAAAAQAAAAIAAAAAEABAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIiIiIiAAACIiIiIiIAACIiIAAgAgACIAIiIiIiAAIAACACAAIAAgAAIiIiIgACIAIgAAICAAAiIiIiIiIAAAIiICAAAgAAACIiIiIiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAA//8AAPABAADgAQAAwAEAAIABAAAAAQAAGAEAABgBAAAAAQAAgAEAAMABAADgAQAA8AEAAP//AAD//wAA" >
						<Object ID="{AD2C07F7-0378-4F67-85ED-3F707F8C8C31}" Name="ClassConstructor" Class="sys://Schema/Scripting/ClassConstructor" >
<![CDATA[
Script=
'
this.SetValue "Flags", 1048576 ' Prevent the user from changing the GroupMember's name]]>
						</Object>
						<Object ID="{7DD876CB-2C56-4BF8-B69C-EF6BFE1CF9C8}" Name="Device" Flags="0x900" Class="sys://Schema/System/ObjectRef" Location="{CC378CE2-018A-49F3-BAF5-1D737BF501AC}" Filter="{ABC25450-9EB7-4626-8264-3782AE4E11E9}" />
						<Object ID="{E739D405-74C7-41F1-A1A1-286953DB16BC}" Name="OnChangeDevice" Class="sys://Schema/Scripting/ClassProperty" Property="{7DD876CB-2C56-4BF8-B69C-EF6BFE1CF9C8}" >
<![CDATA[
Script=
'
set oItem = this.Device
if not oItem is nothing then
	this.Name = oItem.Name
else
	this.Name = "None"
end if

set oItem = Nothing
]]>
						</Object>
					</Object>
					<Object ID="{AB37F7A4-4173-41E1-8276-3AF0F08D59E9}" Name="Discovery" Class="sys://Schema/System/Class" Icon="AgAAAH4DAAAAAAEAAQAQEAAAAAAAAGgDAAAWAAAAKAAAABAAAAAgAAAAAQAYAAAAAABAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAISivXOC3oyGcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHL/0Ku/1p1/5SOcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAELb/1K6/1p1/5SKcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEq6/0q6/2N11pSKc5yqvZyqvZyqvZyqvQAAAAAAAAAAAAAAAAAAAAAAANZlUrVtSt6KWoSqzq22zqWKhP/rxv//7///5///94SCe96KWt6KWnMsIQAAAAAAAOfXjOf//+f//+/7/7W2tf/Tpf/rvefv1u/r5+/v9////5yqve///zlFWgAAAAAAAOfHhN7b587Pzs7Pzr2upeffxt7Xtefnzu/n3u/r7/f377W2rZymtZxJQgAAAAAAAO/LhN7b587Pzr3H1s7DtbW2vb26xs7L1r3TxsbPzr3bxtbLrZyqva1VQgAAAAAAAN7DhO/v9+/r7+/r79a6pefv1ufPre/fvf/rve/nzv//1q2We8bf761ROQAAAAAAAO/LhOfn99bf597j573Dzu/f1u/3///frffTpf/rtf/vtXt9hP///6VNOQAAAAAAAPfPhNbb58bHxsbHxs7PzqWipb22vffrzv/bpe/PpaWKjNbX1vf//6VNOQAAAAAAAO/LhOfn797b3t7b3t7b3u/r59bT1pyepa2utcbHzu/v7+fn5////6VNOQAAAAAAAPfXlO///+fz/+f3/+fz/+fz/+/7//f///f7/+/3//f//+/3/////61NQgAAAAAAANZZCK08AK1xAK04AK1tAK1pAK1VAK1VAK1pAL1xAK1lAKVhAJxdQns4AAAAAAAAANaKAOeaAN6WAO+iCN6WAOeWAOeWAOeWAN6SAO+eEPeiEPeiCLWaUoxBAAAAAP//AACP/wAAh/8AAMP/AADgHwAAgAEAAIABAACAAQAAgAEAAIABAACAAQAAgAEAAIABAACAAQAAgAEAAIABAAA=" Description="Discover all physical Devices on the network." Virtual="-1" >
						<Object ID="{05238F50-606A-414A-A2C6-B50A8287919B}" Name="EnableAutoDiscovery" Flags="0x900" Class="sys://Schema/System/Boolean" Description="If true and an update for the VRC0P is initiated from the primary controller, the Devices folder will be modified automatically." DisplayName="Enable Auto Discovery" />
						<Object ID="{48795B1D-D60D-43D9-8F91-612ACEC36A1F}" Name="DiscoverDevices" Flags="0x900" Class="sys://Schema/System/Boolean" Description="Discover all Z-Wave devices." DisplayName="Discover Devices" />
						<Object ID="{2B844C47-2059-4B6E-87CF-4411B34E95DC}" Name="InDiscoveryMode" Flags="0x900" Class="sys://Schema/System/Boolean" ReadOnly="-1" Description="Indicates Discovery is underway." DisplayName="In Discovery Mode" />
						<Object ID="{ED7FEE2A-B541-4AA0-AE47-BA6822FA87D4}" Name="OnChangeDiscoverDevices" Class="sys://Schema/Scripting/ClassProperty" Property="{48795B1D-D60D-43D9-8F91-612ACEC36A1F}" >
<![CDATA[
Script=
'
if this.InDiscoveryMode = true and sysevent.newVal = true then
	this.DiscoverDevices = false
end if

if this.InDiscoveryMode = true and sysevent.newVal = false then
	this.ResetDiscovery
end if

if this.InDiscoveryMode = false and sysevent.newVal = true then
	' Purge all low-priority Jobs.
	' They may be part of a Polling operation.
	this.Parent.Jobs.PurgeLowPriorityJobs
	
	' Start by discovering Switches
	this.InDiscoveryMode = true
	this.DiscoveryStatus = "Discovering Switches ..."
		
	'Find the first Switch
	this.Parent.SendCommand ">?FI0,16,0,1", true, 996
end if]]>
						</Object>
						<Object ID="{061D9826-9D83-4468-96F3-9277150720F7}" Name="DiscoveryStatus" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" Description="Status of the Discovery process." />
						<Object ID="{CC38EA81-263A-441F-9D4E-FD04335A99CF}" Name="DiscoveryBasicClass" Flags="0x900" Class="sys://Schema/System/Number" Browsable="0" ReadOnly="-1" Description="Current Device Type being discovered." />
						<Object ID="{4B0E49BB-6F72-4806-9FAF-833DCA02F5A4}" Name="DiscoveryType" Flags="0x900" Class="sys://Schema/System/Number" Browsable="0" DefaultValue="16" ReadOnly="-1" Description="Current Device Type being discovered." />
						<Object ID="{A865BD0B-0E79-40CB-BFE4-2CA9A69BE761}" Name="CurrentDiscoveryNodeID" Flags="0x900" Class="sys://Schema/System/Number" Browsable="0" ReadOnly="-1" Description="Current NodeID." />
						<Object ID="{B1CFA594-F87B-4A4E-868E-7B65A2E422AB}" Name="DiscoveredDevices" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" Description="NodeIDs of all discovered Devices." Browsable="0" />
						<Object ID="{1BD63426-59FF-415D-8CC7-8DF146828F32}" Name="ResetDiscovery" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Reset all Discovery-related parameters." >
<![CDATA[
Script=
'
'debugout "<ResetDiscovery>"

this.InDiscoveryMode = false
this.CurrentDiscoveryNodeID = 1
this.DiscoveryType = 16
this.DiscoveryBasicClass = 0
this.DiscoveryStatus = "Ready"
this.DiscoveredDevices = ""
this.DiscoverDevices = false

]]>
						</Object>
					</Object>
					<Object ID="{C6C98D36-F389-49DD-94E9-3B122D3E3135}" Name="Polling" Class="sys://Schema/System/Class" Icon="AgAAADYEAAAAAAEAAgAgIBAAAAAAAOgCAAAmAAAAEBAQAAAAAAAoAQAADgMAACgAAAAgAAAAQAAAAAEABAAAAAAAgAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAd3d3AAAAAAAAAAAAAAB4iIiIiHcAAAAAAAAAAAd4iIAAAIiIcAAAAAAAAAeIiAAIiIgAAHdwAAAAAAd4AAAP8AAA//8AAAAAAAAIgAAP8A/AQP///wAAAAAAAAAP/w/8RERP///wAAAAAAAAD/D/xEREQP///wAAAAAAAA8A/EREREQP//8AAAAAAAAPD/xERERET//wAAAAAAAADw/ERERP9E//AAAAAAAAAAAPxEREQPQP8AB3AAAAAAAAAMRERET/AAAHcAAAAAAAAAAERERE8AAAdwAAAAAAAAAAAERERAAAB3AAAAAAAAAAAAAAAAAACIcAAAAAAAAAAAAAAAAACIhwAAAAAAAAAAAIiIiIiIh3AAAAAAAAAAAAAAh3d3d3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/8P///8A///+AP///AA///gAD//gAAP/gAAA/wAAAHwAAAA+AAAAHwAAAA+AAAAEgAAAAAAAAAIAAAAPAAAAFwAAAA+AAAAfwAAAP+AAAH+wAAD+2AAB/2QAA/+aAA/85IA//Dc//+YY//8fBx/8P4D/4H/gAAH/+AAH//4AP/ygAAAAQAAAAIAAAAAEABAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHiIhwAAAACIAAgAdwAACAD/xP/wAAAAD/xET/8AAAD/xERE/wAAAA/ERPTwcAAAAARE8AcAAAAIAAAAgAAAAACIiIcAAAAAAAAAAAAAAABwAAAAAAAAAAAAcAcAAAAAAAAAAAcAD4/wAA8D8AAMAPAACABwAAAAMAAIABAABAAAAAgAEAAIABAADAAwAAoAcAANAPAABoPwAAj/kAAMDDAADwBwAA" Description="Acquire the status of one-way Devices by periodically polling them." Virtual="-1" >
						<Object ID="{17B621ED-CCA7-471A-9792-162699118EED}" Name="MinPollingInterval" Flags="0x900" Class="sys://Schema/System/Number" Description="Minimum acceptable Polling Interval (seconds)." DefaultValue="20" ReadOnly="-1" Browsable="0" />
						<Object ID="{C129A4FA-BDD1-42A7-B05F-B4D466137B7A}" Name="PollingInterval" Flags="0x900" Class="sys://Schema/System/Number" Description="Time interval between polls (in seconds). Default is 0 (disabled). Set to 20 seconds or greater. Ensure all One-Way devices are properly identified." DisplayName="Polling Interval" />
						<Object ID="{7E1DC63D-9995-464C-81D7-01C88E0D2861}" Name="OnChangePollingInterval" Class="sys://Schema/Scripting/ClassProperty" Property="{C129A4FA-BDD1-42A7-B05F-B4D466137B7A}" >
<![CDATA[
Script=
'
'debugout "<OnChangePollingInterval>"

if sysevent.newVal < this.MinPollingInterval then 
	' Invalid entry. Disable polling.
	'debugout "Disable Polling"
	this.DeletePollingTimer
	
	' Do not purge Jobs if Discovery is underway.
	if this.DiscoverDevices = false then
		this.Parent.Jobs.PurgeLowPriorityJobs
	end if
	
	this.PollingInterval = 0
else
	' PollingInterval has changed.
	' If polling was disabled and is now enabled
	' proceed to start polling.
	' Do nothing if polling is already enabled.
	' Next polling cycle will use the new PollingInterval value.
	if sysevent.oldVal = 0 then this.CheckPolling
end if
]]>
						</Object>
						<Object ID="{F8A81F8F-8650-4511-BB32-F4E2EC76837B}" Name="CheckPolling" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Check if last polling operation has completed." >
<![CDATA[
Script=
'
' Start a Polling cycle only if the Job Queue contains no low-priority jobs.
'
' Polling creates low-priority jobs.  If there are low-priority jobs in the Job Queue
' it means the previous Polling cycle is still underway.
' Do not start a new polling cycle until the previous one has completed.

'debugout "<CheckPolling>"

dim oJobs
set oJobs = this.Parent.Jobs.GetObjectsByTypeAndPropertyValue(Schema.Modules.Leviton.Classes.Job.Path, "Priority", false)

if this.DiscoverDevices = false then
	'debugout "Discovery is disabled."
	if oJobs.Count = 0 then ' Last polling cycle has finished
		'debugout "Previous polling cycle has completed. Starting new polling cycle."
		this.PollDevices
	else
		'debugout "Previous polling cycle is still underway. Skipping this polling cycle."
		this.PollingInterval = this.PollingInterval + 5 ' Extend the Polling Interval by 5 seconds
		
		' Restart the Polling timer if Polling is enabled
		if this.PollingInterval >= this.MinPollingInterval then this.CreatePollingTimer	
	end if
else
	'debugout "Discovery is enabled."
	' Do not poll during a Discovery operation.
	' Restart the Polling timer if Polling is enabled
	if this.PollingInterval >= this.MinPollingInterval then this.CreatePollingTimer			
end if

set oJobs = nothing
]]>
						</Object>
						<Object ID="{4ED48B85-5452-47A9-ACFB-1344F97E5C1F}" Name="PollDevices" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Acquire the current state of all Devices." >
<![CDATA[
Script=
'
' Poll all Devices whose OneWay property is enabled.
' Acquire the current state of each polled Device.
'
' Some notes:  it appears polling is more reliable if done one device at a time.

dim oDevice
dim iCount: iCount = 0

'debugout "<PollDevices>"

for each oDevice in this.GetObjectsByTypeAndPropertyValue(Schema.Modules.Leviton.Classes.Device.Path, "OneWay", true)
	iCount = iCount + 1
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Lighting.Path) then 
		this.QueryLighting oDevice.NodeID
	elseif oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Thermostat.Path) then
		this.QueryThermostat oDevice.NodeID
	elseif oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Lock.Path) then
		this.QueryLock oDevice.NodeID
		this.QueryBatteryLevel oDevice.NodeID
	end if
next

'debugout "Polled " & iCount & " devices."

set oDevice = nothing

' Restart the Polling timer if Polling is enabled
if this.PollingInterval >= this.MinPollingInterval then this.CreatePollingTimer
]]>
						</Object>
						<Object ID="{56913373-8F07-40B7-BFDB-703E4740B74F}" Name="CreatePollingTimer" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Create a timer to periodically poll all Devices for their status." >
<![CDATA[
Script=
'
system.addTimer this.PollingInterval, "on error resume next: this.CheckPolling", 1, this.GetPollingTimerName


]]>
						</Object>
						<Object ID="{7EE4ABF7-17BB-41D5-9365-23D73ECD4CFE}" Name="DeletePollingTimer" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Remove the Polling timer." >
<![CDATA[
Script=
'
system.removeTimer this.GetPollingTimerName

]]>
						</Object>
						<Object ID="{3C220214-CDA9-4118-BC46-846FB0AD43E7}" Name="GetPollingTimerName" Class="sys://Schema/Scripting/ClassFunction" Description="Get a unique name for the Polling timer." >
<![CDATA[
Script=
'
method.GetPollingTimerName = this.Name & "_PollingTimer_" & this.ObjectID
]]>
						</Object>
						<Object ID="{F0385287-AD6A-479A-A24C-D679FB4182E3}" Name="QueryLighting" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'
'debugout "<QueryLighting>"
'debugout this.Name
this.Parent.SendCommand ">?N" & method.NodeID, false, method.NodeID ' Low-priority]]>
							<Object ID="{F047682A-3A34-4A70-A689-F606D3093A88}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{472891CF-92B9-4681-8FE3-02C0051DBA9B}" Name="QueryThermostat" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'
'debugout "<QueryThermostat>"

this.Parent.SendCommand ">N" & method.NodeID & "SE49,4", false, method.NodeID 		' Get Temperature
this.Parent.SendCommand ">N" & method.NodeID & "SE64,2", false, method.NodeID 		' Get Operating Mode
this.Parent.SendCommand ">N" & method.NodeID & "SE66,2", false, method.NodeID 		' Get Operating State
this.Parent.SendCommand ">N" & method.NodeID & "SE67,2,1", false, method.NodeID 	' Get Heating Set Point
this.Parent.SendCommand ">N" & method.NodeID & "SE67,2,2", false, method.NodeID 	' Get Cooling Set Point
this.Parent.SendCommand ">N" & method.NodeID & "SE68,2", false, method.NodeID 		' Get Fan Mode
this.Parent.SendCommand ">N" & method.NodeID & "SE69,2", false, method.NodeID 		' Get Fan State
]]>
							<Object ID="{38A6D1AF-1CFC-4876-87AA-AF13070EA6DC}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{54DF7F5D-59F3-4A63-BD7B-6C8E39B31C05}" Name="QueryLock" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'
'debugout "<QueryLock>"

this.Parent.SendCommand ">N" & method.NodeID & "SS98,2", false, method.NodeID ' get lock state]]>
							<Object ID="{292F44D0-B398-41C0-934E-4D0235AA7081}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
						<Object ID="{0354AA07-4EF9-42C8-B520-CE7551A68760}" Name="QueryBatteryLevel" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'debugout "<BatteryLevel>"
set oTmp = this.GetDeviceByNodeID(method.NodeID)

if oTmp.IsOfExplicitType(Schema.Modules.Leviton.Classes.BatteryDevice.Path) then
	' get the battery level
	if oTmp.RefreshBatteryLevel() then 
		oTmp.SendCmd_GetBatteryLevel
	end if
end if

set oTmp = nothing]]>
							<Object ID="{510DD8DB-876B-40B1-B9EF-57655D37C0C1}" Name="NodeID" Flags="0x900" Class="sys://Schema/System/Number" />
						</Object>
					</Object>
					<Object ID="{049882CB-AB77-4B07-B420-FF07087AB6B3}" Name="Identity" Class="sys://Schema/System/Class" Description="Manage the identity of physical and virtual Devices." Icon="" Virtual="-1" >
						<Object ID="{6B4917DC-40D7-4D86-BBF2-AC21ECA15A9B}" Name="EnableModelDiscovery" Flags="0x900" Class="sys://Schema/System/Boolean" Description="If true, model information is discovered automatically." DefaultValue="-1" />
						<Object ID="{2A0D0007-3277-4D58-BB2A-A80AE421B276}" Name="SetDeviceNames" Flags="0x500" Class="sys://Schema/System/Boolean" Momentary="-1" Persistent="0" Description="Sets the name of the physical Z-Wave object to match that of the SYS Device object." CaptionTrue="" CaptionFalse="" />
						<Object ID="{F85CE051-1D2E-4295-BD10-E9FDA31616F0}" Name="OnChangeSetDeviceNames" Class="sys://Schema/Scripting/ClassProperty" Property="{2A0D0007-3277-4D58-BB2A-A80AE421B276}" >
<![CDATA[
Script=
'
this.ExportDeviceNames
]]>
						</Object>
						<Object ID="{BAB46840-0CC4-4B49-B59A-CB1F71024F28}" Name="ExportDeviceNames" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Set the name of each physical Device." >
<![CDATA[
Script=
'
' The physical Z-Wave Device name will inherit the SYS Device object name.
' Z-Wave Device name <--- SYS Device Name

dim oDevice
'nodeID 995 is reserved for device name jobs
for each oDevice in this.GetObjectsByType(Schema.Modules.Leviton.Classes.Device.Path)
	oDevice.SendCmd_SetName
next

set oDevice = nothing
]]>
						</Object>
						<Object ID="{7AA674E0-AD6A-4F8F-930C-76B13F99DE91}" Name="GetDeviceNames" Flags="0x500" Class="sys://Schema/System/Boolean" Momentary="-1" Persistent="0" Description="Sets the name of the SYS Device object to match that of the physical Z-Wave device." CaptionTrue="" CaptionFalse="" />
						<Object ID="{A87295F7-ACC9-4EB5-A14A-D8BD90E6C2A9}" Name="OnChangeGetDeviceNames" Class="sys://Schema/Scripting/ClassProperty" Property="{7AA674E0-AD6A-4F8F-930C-76B13F99DE91}" >
<![CDATA[
Script=
'
this.ImportDeviceNames
]]>
						</Object>
						<Object ID="{4DFD3693-06F2-4251-942C-89AE9C90CC15}" Name="ImportDeviceNames" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Get the name of each Device." >
<![CDATA[
Script=
'
' The SYS Device object name will inherit the physical Z-Wave Device name.
' SYS Device Name <--- Z-Wave Device name 

dim oDevice
dim iInterval
this.Initializing = true	' jobqueue will set this to false on last job...

for each oDevice in this.GetObjectsByType(Schema.Modules.Leviton.Classes.Device.Path)
	'Skip devices of type Wakeup, as those devices are asleep and/or often don't support device naming
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Wakeup.Path) = false then
		oDevice.SendCmd_GetName
	end if
next]]>
						</Object>
						<Object ID="{E96FFB50-D68C-4160-AC22-3EEB907C9059}" Name="GetDeviceLocations" Flags="0x500" Class="sys://Schema/System/Boolean" Description="Sets the location of the SYS Device object to match that of the physical Z-Wave device." Momentary="-1" CaptionTrue="" CaptionFalse="" Persistent="0" />
						<Object ID="{C1425462-606B-42D4-AC5E-B300A35649B6}" Name="OnChangeGetDeviceLocations" Class="sys://Schema/Scripting/ClassProperty" Property="{E96FFB50-D68C-4160-AC22-3EEB907C9059}" >
<![CDATA[
Script=
'
this.ImportDeviceLocations

]]>
						</Object>
						<Object ID="{8950DA54-6736-4A73-91F8-BDCE313CA3BE}" Name="ImportDeviceLocations" Class="sys://Schema/Scripting/SimpleClassMethod" Description="Get the location of each Device." >
<![CDATA[
Script=
'
' The SYS Device Description will inherit the physical Z-Wave Device location.

dim oDevice
this.Initializing = true	' jobqueue will set this to false on last job...

'NodeID 994 is reserved for location jobs
for each oDevice in this.GetObjectsByType(Schema.Modules.Leviton.Classes.Device.Path)
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Wakeup.Path) = false then
		oDevice.SendCmd_GetLocation
	end if
next]]>
						</Object>
						<Object ID="{B31B2DC9-BB8B-420D-9767-6A17908107F5}" Name="GetDeviceModel" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" Description="Asks all devices for their model information." />
						<Object ID="{F0760CA0-9978-4025-9E50-CB2112CBB415}" Name="ImportModel" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'Send MANUFACTURER_SPECIFIC command class to the device.  The device will respond with
'a MANUFACTURE_SPECIFIC report, which will contain codes for the device's manufacturer,
'product type, and product ID.  ProcessCmd_ManufacturerSpecific will handle the report,
'then call ConfigureDevice to determine the device's model.

this.Initializing = true	' jobqueue will set this to false on last job...

for each oDevice in this.GetObjectsByType(Schema.Modules.Leviton.Classes.Device.Path)
	'Skip devices of type Wakeup, as those devices are asleep and/or often don't support device naming
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Wakeup.Path) = false then
		'Send MANUFACTURER_SPECIFIC command to get manufacturer, product type, and product ID
		oDevice.SendCmd_GetManufacturerSpecific
	end if
next]]>
						</Object>
						<Object ID="{5C1EBF17-A920-457B-9F44-C136EEF9EE2E}" Name="OnChangeGetDeviceModel" Class="sys://Schema/Scripting/ClassProperty" Property="{B31B2DC9-BB8B-420D-9767-6A17908107F5}" >
<![CDATA[
Script=
'
this.ImportModel]]>
						</Object>
						<Object ID="{E538FF20-4A40-452E-90DB-D3456C611F63}" Name="GetDeviceVersion" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" Description="Asks all devices for their version information." />
						<Object ID="{BAD9F019-FCC3-4FB1-9D6D-C7E5F84E7640}" Name="ImportVersion" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
this.Initializing = true	' jobqueue will set this to false on last job...

for each oDevice in this.GetObjectsByType(Schema.Modules.Leviton.Classes.Device.Path)
	'Skip devices of type Wakeup, as those devices are asleep and/or often don't support device naming
	if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Wakeup.Path) = false then
		oDevice.SendCmd_GetVersion
	end if
next]]>
						</Object>
						<Object ID="{2EFF7537-659E-44D8-9206-3CF99CAA9539}" Name="OnChangeGetDeviceVersion" Class="sys://Schema/Scripting/ClassProperty" Property="{E538FF20-4A40-452E-90DB-D3456C611F63}" >
<![CDATA[
Script=
'
this.ImportVersion]]>
						</Object>
					</Object>
					<Object ID="{FD07A77F-F9C8-4917-9A57-99804075D751}" Name="Initialization" Class="sys://Schema/System/Class" Description="Device level properties and methods to initialize each device." Virtual="-1" Icon="AgAAAD4BAAAAAAEAAQAQEBAAAAAAACgBAAAWAAAAKAAAABAAAAAgAAAAAQAEAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAAAAAAsAAAAAAAAAC7AAAAAAAAAAuwAAAAAAAIALsAAAAAAAC7sAAAAAAAAAuwAAAAAAAAC7sAAAAAAAAAu7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAPP/AADx/wAA+P8AAPh/AAD8PwAA+B8AAPgfAAD8PwAA/B8AAP4PAAD+DwAA//8AAP//AAA=" >
						<Object ID="{21D1E3F2-7647-47AD-9CC3-E246249D0552}" Name="GetLocation" Flags="0x500" Class="sys://Schema/System/Boolean" Momentary="-1" Persistent="0" Description="Gets the location of the device." />
						<Object ID="{909908E3-4533-4163-9463-5BC600D69CE3}" Name="GetName" Flags="0x500" Class="sys://Schema/System/Boolean" Momentary="-1" Persistent="0" Description="Gets the z-wave name for the device that is stored in the device&apos;s memory." />
						<Object ID="{A7E487B5-CCE5-438B-B98C-0D29DB7025EF}" Name="GetModel" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" Description="Gets the z-wave model information for the device." />
						<Object ID="{1765CBE1-1E47-4873-9BA9-354BD85DF72D}" Name="GetVersion" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" Description="Gets the z-wave version information for the device." />
						<Object ID="{16131B3E-D404-4114-82C7-9B5C18B86F62}" Name="SetName" Flags="0x500" Class="sys://Schema/System/Boolean" Momentary="-1" Persistent="0" />
						<Object ID="{49AD67EE-9E5B-494B-B97F-2C3506CD01E0}" Name="SetRoute" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" />
						<Object ID="{ACDDD5A8-0C04-4B5E-995D-848034C6D353}" Name="AssociateWithVRC0P" Flags="0x500" Class="sys://Schema/System/Boolean" Description="Associates device with VRC0P.  Note: you MUST first input a node id for the VRC0P." Persistent="0" Momentary="-1" />
						<Object ID="{38AEC7CA-5EA1-4682-BA29-27D424E72A0D}" Name="SendCmd_ClearRoutes" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
' if device does not have a direct RF connection with VRC0P, we must set a route.
' this is usually done within the primary controller's software.
' however, for locks, this is not implemented yet in the RF Installer Tool
' it is recommended to clear routes before setting them

' EXAMPLE:
' >RO2,0; delete all routes for the routing slave node 2.
' >RO2,10; setup up to 4 valid routes for node 2 to node 10.

command = ">RO" & this.NodeID & ",0"

' clear routes
this.Parent.Parent.SendCommand command, true, this.NodeID ' High-priority

if gViziaIsDebugOn(2) then debugout "SendCmd_SetLockState(): SET ROUTES command=" & command]]>
						</Object>
						<Object ID="{2F4866AA-D176-4075-AC47-54D649D7B1F0}" Name="SendCmd_GetName" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Set the name for the device

'command = ">N" & this.NodeID & "?NN"
command = ">N" & this.NodeID & "SE119,2"
this.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_SetName(): NAME GET from node=" & this.NodeID


]]>
						</Object>
						<Object ID="{40FF4258-686A-48CD-9CB3-4902F6BD2295}" Name="SendCmd_SetName" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Set the name for the device

command = ">N" & this.NodeID & "NN1" & this.Name
this.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_SetName(): NAME SET for node=" & this.NodeID
]]>
						</Object>
						<Object ID="{20B53978-83BC-4330-8808-22840F170DEB}" Name="SendCmd_SetRoutes" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'
' if device does not have a direct RF connection with VRC0P, we must set a route.
' this is usually done within the primary controller's software.
' however, for locks, this is not implemented yet in the RF Installer Tool

' EXAMPLE:
' >RO2,0; delete all routes for the routing slave node 2.
' >RO2,10; setup up to 4 valid routes for node 2 to node 10.

command = ">RO" & this.NodeID & "," & this.Parent.Parent.VRC0PNodeID

' clear routes
this.Parent.Parent.SendCommand command, true, this.NodeID ' High-priority

if gViziaIsDebugOn(2) then debugout "SendCmd_SetLockState(): SET ROUTES command=" & command]]>
						</Object>
						<Object ID="{867715BD-39CA-404F-BA89-F6D09CFB8764}" Name="SendCmd_GetLocation" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Set the name for the device

command = ">N" & this.NodeID & "?NL"
this.Parent.Parent.SendCommand command, true, 994

if gViziaIsDebugOn(2) then debugout "SendCmd_SetName(): NAME GET from node=" & this.NodeID


]]>
						</Object>
						<Object ID="{E9C451A0-ED1E-4EBA-BFD2-68C5DA405FF9}" Name="OnChangeAssociateWithVRC0P" Class="sys://Schema/Scripting/ClassProperty" Property="{ACDDD5A8-0C04-4B5E-995D-848034C6D353}" >
<![CDATA[
Script=
'
if this.Parent.Parent.VRC0PNodeID <> 0 then
	if this.IsOfExplicitType(Modules.Leviton.Classes.Associations.Path) then
		this.SendCmd_SetAssociation this.Parent.Parent.VRC0PNodeID, 1
		this.SendCmd_GetAssociations 1
	end if
else
	' no nodeID set for VRC0P alert user... 
	if gViziaIsDebugOn(0) then debugout "SendCmd_SetWakeupInterval(): ERROR ViziaRF.VRC0PNodeID is not set!!!"
	set oEvent = Events.CreateObject(Schema.System.Event.Path, "VRC0P NodeID not set")
	with oEvent
		.Description = this.Name & " VRC0P NodeID is not set." & VbCrLf &_
			"Using Premise Builder, set ViziaRF.VRC0PNodeID to the NodeID of the VRC0P."
		.Severity = 90
		.EventTime = Now
		.LinkObject = this
	end with
	set oEvent = nothing
end if]]>
						</Object>
						<Object ID="{79E8E192-64D5-405A-9544-13836EFF7A60}" Name="OnChangeSetName" Class="sys://Schema/Scripting/ClassProperty" Property="{16131B3E-D404-4114-82C7-9B5C18B86F62}" >
<![CDATA[
Script=
this.SendCmd_SetName]]>
						</Object>
						<Object ID="{228C04AA-2129-48EB-9A41-66EC65338511}" Name="OnChangeGetName" Class="sys://Schema/Scripting/ClassProperty" Property="{909908E3-4533-4163-9463-5BC600D69CE3}" >
<![CDATA[
Script=
this.SendCmd_GetName]]>
						</Object>
						<Object ID="{1F0CADCB-56AF-493B-9C3D-C44604B9C343}" Name="OnChangeSetRoute" Class="sys://Schema/Scripting/ClassProperty" Property="{49AD67EE-9E5B-494B-B97F-2C3506CD01E0}" >
<![CDATA[
Script=
'
this.SendCmd_ClearRoutes
system.addTimer 5,"this.SendCmd_SetRoutes",1,"SetRoutes_1" & this.ObjectID]]>
						</Object>
						<Object ID="{DED62570-D740-40CF-8063-F04D295C7293}" Name="OnChangeGetLocation" Class="sys://Schema/Scripting/ClassProperty" Property="{21D1E3F2-7647-47AD-9CC3-E246249D0552}" >
<![CDATA[
Script=
'
this.SendCmd_GetLocation]]>
						</Object>
						<Object ID="{5453B227-C771-44DC-A0EF-1944DCF6E27B}" Name="OnChangeGetModel" Class="sys://Schema/Scripting/ClassProperty" Property="{A7E487B5-CCE5-438B-B98C-0D29DB7025EF}" >
<![CDATA[
Script=
'
if this.IsOfExplicitType(Modules.Leviton.Classes.Device.Path) then
	this.SendCmd_GetManufacturerSpecific
end if]]>
						</Object>
						<Object ID="{C377642F-9CA1-408E-B8D7-BCFCFC6B111F}" Name="OnChangeGetVersion" Class="sys://Schema/Scripting/ClassProperty" Property="{1765CBE1-1E47-4873-9BA9-354BD85DF72D}" >
<![CDATA[
Script=
if this.IsOfExplicitType(Modules.Leviton.Classes.Device.Path) then
	this.SendCmd_GetVersion
end if]]>
						</Object>
					</Object>
					<Object ID="{ACC92AEA-EF8D-44E4-9262-3273555C7B57}" Name="Scenes" Class="sys://Schema/System/Class" Icon="" >
						<Object ID="{A30EE402-AF4A-45EF-A3CD-291F93522C92}" Name="Container" Class="sys://Schema/System/SuperClass" LinkObject="{DD124036-E4EE-4354-9253-BE8E38337936}" />
						<Object ID="{BC81B7EF-40FE-4415-9AC1-6A6FA915D05A}" Class="sys://Schema/System/ChildClass" LinkObject="{F5C8206A-AE0A-419D-9ACC-A93CAF5EF784}" />
					</Object>
					<Object ID="{F5C8206A-AE0A-419D-9ACC-A93CAF5EF784}" Name="Scene" Class="sys://Schema/System/Class" Icon="AgAAAPYJAAAAAAEAAgAgIAAAAAAAAKgIAAAmAAAAEBAQAAAAAAAoAQAAzggAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAMDcwADwyqYA1PD/ALHi/wCO1P8Aa8b/AEi4/wAlqv8AAKr/AACS3AAAerkAAGKWAABKcwAAMlAA1OP/ALHH/wCOq/8Aa4//AEhz/wAlV/8AAFX/AABJ3AAAPbkAADGWAAAlcwAAGVAA1NT/ALGx/wCOjv8Aa2v/AEhI/wAlJf8AAAD/AAAA3AAAALkAAACWAAAAcwAAAFAA49T/AMex/wCrjv8Aj2v/AHNI/wBXJf8AVQD/AEkA3AA9ALkAMQCWACUAcwAZAFAA8NT/AOKx/wDUjv8Axmv/ALhI/wCqJf8AqgD/AJIA3AB6ALkAYgCWAEoAcwAyAFAA/9T/AP+x/wD/jv8A/2v/AP9I/wD/Jf8A/wD/ANwA3AC5ALkAlgCWAHMAcwBQAFAA/9TwAP+x4gD/jtQA/2vGAP9IuAD/JaoA/wCqANwAkgC5AHoAlgBiAHMASgBQADIA/9TjAP+xxwD/jqsA/2uPAP9IcwD/JVcA/wBVANwASQC5AD0AlgAxAHMAJQBQABkA/9TUAP+xsQD/jo4A/2trAP9ISAD/JSUA/wAAANwAAAC5AAAAlgAAAHMAAABQAAAA/+PUAP/HsQD/q44A/49rAP9zSAD/VyUA/1UAANxJAAC5PQAAljEAAHMlAABQGQAA//DUAP/isQD/1I4A/8ZrAP+4SAD/qiUA/6oAANySAAC5egAAlmIAAHNKAABQMgAA///UAP//sQD//44A//9rAP//SAD//yUA//8AANzcAAC5uQAAlpYAAHNzAABQUAAA8P/UAOL/sQDU/44Axv9rALj/SACq/yUAqv8AAJLcAAB6uQAAYpYAAEpzAAAyUAAA4//UAMf/sQCr/44Aj/9rAHP/SABX/yUAVf8AAEncAAA9uQAAMZYAACVzAAAZUAAA1P/UALH/sQCO/44Aa/9rAEj/SAAl/yUAAP8AAADcAAAAuQAAAJYAAABzAAAAUAAA1P/jALH/xwCO/6sAa/+PAEj/cwAl/1cAAP9VAADcSQAAuT0AAJYxAABzJQAAUBkA1P/wALH/4gCO/9QAa//GAEj/uAAl/6oAAP+qAADckgAAuXoAAJZiAABzSgAAUDIA1P//ALH//wCO//8Aa///AEj//wAl//8AAP//AADc3AAAubkAAJaWAABzcwAAUFAA8vLyAObm5gDa2toAzs7OAMLCwgC2trYAqqqqAJ6engCSkpIAhoaGAHp6egBubm4AYmJiAFZWVgBKSkoAPj4+ADIyMgAmJiYAGhoaAA4ODgDw+/8ApKCgAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOvr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vrAAAAAAAA6////////////////////////////////+sAAAAAAADr///r////////////////////////5f//6wAAAAAAAOv//+sA6+vr6+vr6+vr6+vr6+vr6+vr///rAAAAAAAA6///6wDrcHBwcHBwcOQAcHBwcHBwcOv//+sAAAAAAADr///rAOtwcHBwcHBw5ABwcHBwcHBw6///6wAAAAAAAOv//+sA6/9wcHBwcHDkAHBwcHBwcHDr///rAAAAAAAA6///6wDr/+jo6P9wcOQAcHBwcHBwcOv//+sAAAAAAADr///rAOv//+X/////5AD/cHBwcHBw6///6wAAAAAAAOv//+sA6//l/////3DkAHBwcHBwcHDr///rAAAAAAAA6///6wDr/+T//3BwcOQAcHBwcHBwcOv//+sAAAAAAADr///rAOv//3BwcHBw5ABwcHBwcHBw6///6wAAAAAAAOv//+sA63BwcHBwcHDkAHBwcHBwcHDr///rAAAAAAAA6///6wAAAAAAAAAAAOQAAAAAAAAAAOv//+sAAAAAAADr///rAOTk5OTk5OTk5OTk5OTk5OTk6///6wAAAAAAAOv//+sA63BwcHBwcHDkAHBwcHBwcHDr///rAAAAAAAA6///6wDrcHBwcHBwcOQAcHBwcHBwcOv//+sAAAAAAADr///rAOtwcHBwcHBw5ABwcHBw6P//6///6wAAAAAAAOv//+sA63BwcHBwcP/kAHD/6Ojo///r///rAAAAAAAA6///6wDrcHBw/////+QA////5f///+v//+sAAAAAAADr///rAOtwcHBwcP//5AD/////5f//6///6wAAAAAAAOv//+sA63BwcHBwcHDkAHD////k///r///rAAAAAAAA6///6wDrcHBwcHBwcOQAcHD/cHD//+v//+sAAAAAAADr///rAOtwcHBwcHBw5ABwcHBwcHBw6///6wAAAAAAAOv//+sA6+vr6+vr6+vkAOvr6+vr6+vr///rAAAAAAAA6///6wAAAAAAAAAAAAAAAAAAAAAAAAD//+sAAAAAAADr///r6+vr6+vr6+vr6+vr6+vr6+vr6///6wAAAAAAAOv////////////////////////////////rAAAAAAAA6////////////////////////////////+sAAAAAAADr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAf/////KAAAABAAAAAgAAAAAQAEAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAADAwMAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAA////////gAD4iIiIiI+AAPiMzHzMz4AA+Id8fMzPgAD4h/98zM+AAPiPzHzMz4AA+AAAcAAPgAD4jMx8zM+AAPiMzHzH/4AA+Iz/f///gAD4jMx89/+AAPiMzHzMz4AA+AAAAAAPgAD///////+AAIiIiIiIiIAIADAACAAwAAgAMAAIADAACAAwAAgAMAAIADAACAAwAAgAMAAIADAACAAwAAgAMAAIADAACAAwAAgAMAAIADAAA=" >
						<Object ID="{6B5DADA8-36FC-418C-8F6B-B3597D368EA4}" Name="Container" Class="sys://Schema/System/SuperClass" LinkObject="{DD124036-E4EE-4354-9253-BE8E38337936}" />
						<Object ID="{2F823179-40DF-45C2-9DED-E62C7980636B}" Name="SceneID" Flags="0x900" Class="sys://Schema/System/Number" Description="Select a SceneID from 1 to 255. The SceneID will revert to zero if it is already used in another Scene." />
						<Object ID="{B2E9F964-0393-4DC4-A2CB-88B0CD5299A4}" Name="FadeRate" Flags="0x900" Class="sys://Schema/System/Number" Description="Select a FadeRate from 0 to 255.  0-254 are approx values in seconds. 255 is reserved for Leviton&apos;s defualt fade rate (1.5s from full off and 3s  from full on)." DefaultValue="255" />
						<Object ID="{78B9E873-D3A4-42A4-805D-473227211045}" Name="OnChangeSceneID" Class="sys://Schema/Scripting/ClassProperty" Property="{2F823179-40DF-45C2-9DED-E62C7980636B}" >
<![CDATA[
Script=
'
' Validate SceneID. Ensure it is 1-255 and not a duplication.

if sysevent.newVal <> 0 then ' Ignore if zero.
	if sysevent.newVal > 0 and sysevent.newVal < 256 then ' Valid entry
		set oScenes = this.Parent.GetObjectsByTypeAndPropertyValue(Schema.Modules.Leviton.Classes.Scene.Path, "SceneID", sysevent.newVal)
		if oScenes.Count > 1 then this.SceneID = 0 ' Duplicated SceneID
		set oScenes = nothing
	else ' Invalid entry. Set to zero.
		this.SceneID = 0
	end if
end if
]]>
						</Object>
						<Object ID="{84D95CDD-C207-49F5-ADC7-775E2624F74F}" Name="SetSceneID" Flags="0xD00" Class="sys://Schema/System/Boolean" CaptionTrue="" CaptionFalse="" Momentary="-1" Description="Each Scene Member will be programmed with its specific PowerState and Brightness settings assigned in this Scene." />
						<Object ID="{6071F4BC-6F29-46A5-8865-85AF294DF641}" Name="OnChangeSetSceneID" Class="sys://Schema/Scripting/ClassProperty" Property="{84D95CDD-C207-49F5-ADC7-775E2624F74F}" >
<![CDATA[
Script=
'

dim oMember, oDevice
dim sCmd: sCmd = "ON"

if sysevent.newVal and this.SceneID > 0 then
	' Set light level for each member
	for each oMember in this.GetObjectsByType(Schema.Modules.Leviton.Classes.SceneMember.Path, false)
	    set oDevice = oMember.Device
	    if oDevice.IsOfExplicitType(Schema.Modules.Leviton.Classes.Dimmer.Path) then ' Dimmer
	        this.Parent.Parent.SendCommand ">N" & oDevice.NodeID & "L" & this.ConvertBrightness(oMember.Brightness), true, 998 & this.SceneID
	    else ' Switch
	        if oMember.PowerState = false then sCmd = "OF"
	        this.Parent.Parent.SendCommand ">N" & oDevice.NodeID & sCmd, true, 998 & this.SceneID
	    end if
		this.Parent.Parent.SendCommand ">N" & oDevice.NodeID & "PS" & this.SceneID & "," & this.FadeRate, true, 998 & this.SceneID
		this.Programmed = now
	next
end if

set oMember = nothing
set oDevice = nothing
]]>
						</Object>
						<Object ID="{E7730768-7718-424C-B329-C733DBE81267}" Name="Play" Flags="0xD00" Class="sys://Schema/System/Boolean" Momentary="-1" CaptionTrue="" CaptionFalse="" Description="Play the Scene. Each Scene Member will respond as per its settings." />
						<Object ID="{AC3E3ECB-2523-4096-A294-CCA802579B9A}" Class="sys://Schema/System/ChildClass" LinkObject="{F8135CA8-61C2-46E8-86B3-1F847F8ABB73}" />
						<Object ID="{EC7411BD-C139-4EFD-8CB4-2A709DD1B602}" Name="OnChangePlay" Class="sys://Schema/Scripting/ClassProperty" Property="{E7730768-7718-424C-B329-C733DBE81267}" >
<![CDATA[
Script=
'

if sysevent.newVal and this.SceneID > 0 then ' Play scene with default FadeRate
	'this.Parent.Parent.SendCommand ">S" & this.SceneID & ",255", true, 0
    this.Parent.Parent.SendCommand ">N" & this.GetAllSceneMembers & "S" & this.SceneID & "," & this.FadeRate & ",UP", true, 998 & this.SceneID
end if

]]>
						</Object>
						<Object ID="{78653463-F30E-45FB-BEB7-7665192937D7}" Name="Programmed" Flags="0x900" Class="sys://Schema/System/DateTime" DefaultValue="1/1/2000" Description="Time when Scene Members were programmed." AutoSet="0" />
						<Object ID="{BCF14B4A-9202-4D3A-81EB-8FDF5A372691}" Name="ConvertBrightness" Class="sys://Schema/Scripting/ClassFunction" ReturnType="{00000004-5000-0026-1999-23865E9A5812}" >
<![CDATA[
Script=
'
dim iLevel

' Convert brightness
iLevel = round(method.Brightness * 100)
' Convert Brightness level from Premise range 1-100 to ViziaRF range 1-99
if iLevel = 100 then iLevel = 99

method.ConvertBrightness = iLevel]]>
							<Object ID="{47872B31-0EA7-4D41-85AE-CA7604A8401F}" Name="Brightness" Flags="0x900" Class="sys://Schema/System/Percent" />
						</Object>
						<Object ID="{45A7EF02-D24A-4483-86A5-F201E45DA9AE}" Name="GetAllSceneMembers" Class="sys://Schema/Scripting/ClassFunction" Description="get all Scene Members as an association list." >
<![CDATA[
Script=
dim oMember, oDevice
dim sMembers: sMembers = ""
dim bFirst: bFirst = true
dim sDelimiter: sDelimiter = ""

' Get all scene members
for each oMember in this.GetObjectsByType(Schema.Modules.Leviton.Classes.SceneMember.Path, false)
	set oDevice = oMember.Device
	if not bFirst then sDelimiter = ","
	sMembers = sMembers & sDelimiter & oDevice.NodeID
	bFirst = false
next

method.GetAllSceneMembers = sMembers

set oMember = nothing
set oDevice = nothing]]>
						</Object>
						<Object ID="{7EDBC33E-1629-4831-A174-BDE867F09586}" Name="OnChangeFadeRate" Class="sys://Schema/Scripting/ClassProperty" Property="{B2E9F964-0393-4DC4-A2CB-88B0CD5299A4}" >
<![CDATA[
Script=
'
if sysevent.newVal > 255 or sysevent.newVal < 0 then
	this.FadeRate = 255 'set Leviton's default fade rate if outside 0-255
end if]]>
						</Object>
					</Object>
					<Object ID="{F8135CA8-61C2-46E8-86B3-1F847F8ABB73}" Name="SceneMember" Class="sys://Schema/System/Class" Icon="AgAAADYEAAAAAAEAAgAgIBAAAAAAAOgCAAAmAAAAEBAQAAAAAAAoAQAADgMAACgAAAAgAAAAQAAAAAEABAAAAAAAgAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIiIiIiIiIiIiIiIAAAAAAiIiIiIiIiIiIiIiAAAAACIiIiIiIiIiIiIiIgAAAAIiIiIiIiIiIiIiIiIAAAAiIiIiIiIiIiIiIiIiAAACIiIiIiIiIiIiIiIiIgAAIiIAAiIiIiIiIiIiIiIAACIgAAAiIiIiIiIiIiIiAAAiAAAAAiIiIiIiIiIiIgAAIgAAAAIiIiIiIiIiIiIAACIAAAACIiIiIiIiIiIiAAAiIAAAIiIiIiIiIiIiIgAAIiIAAiIiIiIiIiIiIiIAAAIiIiIiIiIiIiIiIiIiAAAAIiIiIiIiIiIiIiIiIgAAAAIiIiIiIiIiIiIiIiIAAAAAIiIiIiIiIiIiIiIiAAAAAAIiIiIiIiIiIiIiIgAAAAAAIiIiIiIiIiIiIiIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////////////////////////8AAAH+AAAB/AAAAfgAAAHwAAAB4AAAAcAAAAGAAAABg4AAAYfAAAGHwAABh8AAAYOAAAGAAAABwAAAAeAAAAHwAAAB+AAAAfwAAAH+AAAB/wAAAf///////////////////////////////ygAAAAQAAAAIAAAAAEABAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIiIiIiAAACIiIiIiIAACIiIAAgAgACIAIiIiIiAAIAACACAAIAAgAAIiIiIgACIAIgAAICAAAiIiIiIiIAAAIiICAAAgAAACIiIiIiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAA//8AAPABAADgAQAAwAEAAIABAAAAAQAAGAEAABgBAAAAAQAAgAEAAMABAADgAQAA8AEAAP//AAD//wAA" >
						<Object ID="{1B997953-BACD-4F81-B24F-A93A0F529CBB}" Name="ClassConstructor" Class="sys://Schema/Scripting/ClassConstructor" >
<![CDATA[
Script=
'
this.SetValue "Flags", 1048576 ' Prevent the user from changing the SceneMember name]]>
						</Object>
						<Object ID="{C12BA36C-48A9-4F71-8407-38D53E7E5DAB}" Name="Device" Flags="0x900" Class="sys://Schema/System/ObjectRef" Filter="{ABC25450-9EB7-4626-8264-3782AE4E11E9}" Location="{CC378CE2-018A-49F3-BAF5-1D737BF501AC}" />
						<Object ID="{9B478BC8-FF44-465A-B7B5-7097AE671AA6}" Name="OnChangeDevice" Class="sys://Schema/Scripting/ClassProperty" Property="{C12BA36C-48A9-4F71-8407-38D53E7E5DAB}" >
<![CDATA[
Script=
'
set oItem = this.Device
if not oItem is nothing then
	this.Name = oItem.Name
else
	this.Name = "None"
end if

'if not oItem.IsOfExplicitType(Schema.Modules.Leviton.Classes.Dimmer.Path) then
'	debugout "Not a Dimmer."
'	for each oTmp in this.GetProperties()
'		if oTmp.name = "Brightness" then
'			'debugout oTmp.Name & " -> " & oTmp.ReadOnly
'			oTmp.ReadOnly = true
'		end if
'	next
'else
'	debugout "Is a Dimmer."
'end if



set oItem = Nothing
]]>
						</Object>
						<Object ID="{64F56066-9718-431F-9950-FA2F0C2328F0}" Name="PowerState" Flags="0x900" Class="sys://Schema/System/Boolean" Description="Whether or not power is on." Aggregation="2" CaptionTrue="On" CaptionFalse="Off" />
						<Object ID="{4B2B386A-01C5-476F-85B7-9266418C9B76}" Name="OnChangePowerState" Class="sys://Schema/Scripting/ClassProperty" Property="{64F56066-9718-431F-9950-FA2F0C2328F0}" >
<![CDATA[
Script=
'
'debugout "SceneMember_OnChangePowerState>"
if sysevent.newVal then
	if not this.Brightness > 0 then this.Brightness = 1
else
	if this.Brightness > 0 then this.Brightness = 0
end if]]>
						</Object>
						<Object ID="{FFE733B4-E2C9-45F1-84C2-256B87B7F1F5}" Name="Brightness" Flags="0x900" Class="sys://Schema/System/Percent" Aggregation="4" Description="Level of power sent to device." />
						<Object ID="{DD11AA44-D72E-471A-B718-40ACBE28579F}" Name="OnChangeBrightness" Class="sys://Schema/Scripting/ClassProperty" Property="{FFE733B4-E2C9-45F1-84C2-256B87B7F1F5}" >
<![CDATA[
Script=
'
'debugout "SceneMember_OnChangeBrightness>"
if sysevent.newVal > 0 then 
	this.PowerState = true
else
	this.PowerState = false
end if]]>
						</Object>
					</Object>
					<Object ID="{64D14522-5816-4C26-BF92-130F6C1AB84A}" Name="BurnInTest" Class="sys://Schema/System/Class" Description="Run a test for all lighting node on your Z-Wave network." Virtual="-1" Icon="AgAAADYOAAAAAAEAAgAQEAAAAAAAAGgFAAAmAAAAICAAAAAAAACoCAAAjgUAACgAAAAQAAAAIAAAAAEACAAAAAAAQAEAAAAAAAAAAAAAAAAAAAAAAAD///8A093/AKim/wD39v8Awcv/AFxi9wAAAtEA0t3/AMLL/wDw9f8A3Ob/AL/P/wB/pf8AvLfqAMHa/wDEveoAudT/AFhx3gC60PYA0dr/AMDU9gDJ1P8A6excXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFhcWFxcXFxcXFxcXFxQBFAEUFRcXFxcXFxcXFxcRABEAERcXFxcXFxcXFxcXDQ4PDg8QFxcXFxcXFxcXFxcMFwwXDBcXFxcXFxcXFxcXCxcLFwsXFxcXFxcXFxcXFwoXChcKFxcXFxcXFxcDFwMXAxcDFxcXFxcXFxcXCBcXFxcXFxcXFxcXFxcXFwUXFxcXFxcXFxcXFxcDCAUGAgEXFxcXFxcXFxcXFxcXAhcXFxcXFxcXFxcXFxcXFwEXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF///AAD//wAA/1cAAP4HAAD+DwAA/gcAAP9XAAD/VwAA/1cAAPqvAAD7/wAA+/8AAMD/AAD7/wAA+/8AAP//AAAoAAAAIAAAAEAAAAABAAgAAAAAAIAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAgACAAAAAgIAAAACAAAAAgIAAAACAAMDAwADA3MAA8MqmAICAgAD/AP8A/wAAAP//AAAA/wAAAP//AAAA/wD///8A8Pv/AKSgoADU8P8AseL/AI7U/wBrxv8ASLj/ACWq/wAAqv8AAJLcAAB6uQAAYpYAAEpzAAAyUADU4/8Ascf/AI6r/wBrj/8ASHP/ACVX/wAAVf8AAEncAAA9uQAAMZYAACVzAAAZUADU1P8AsbH/AI6O/wBra/8ASEj/ACUl/wAAAP8AAADcAAAAuQAAAJYAAABzAAAAUADj1P8Ax7H/AKuO/wCPa/8Ac0j/AFcl/wBVAP8ASQDcAD0AuQAxAJYAJQBzABkAUADw1P8A4rH/ANSO/wDGa/8AuEj/AKol/wCqAP8AkgDcAHoAuQBiAJYASgBzADIAUAD/1P8A/7H/AP+O/wD/a/8A/0j/AP8l/wD/AP8A3ADcALkAuQCWAJYAcwBzAFAAUAD/1PAA/7HiAP+O1AD/a8YA/0i4AP8lqgD/AKoA3ACSALkAegCWAGIAcwBKAFAAMgD/1OMA/7HHAP+OqwD/a48A/0hzAP8lVwD/AFUA3ABJALkAPQCWADEAcwAlAFAAGQD/1NQA/7GxAP+OjgD/a2sA/0hIAP8lJQD/AAAA3AAAALkAAACWAAAAcwAAAFAAAAD/49QA/8exAP+rjgD/j2sA/3NIAP9XJQD/VQAA3EkAALk9AACWMQAAcyUAAFAZAAD/8NQA/+KxAP/UjgD/xmsA/7hIAP+qJQD/qgAA3JIAALl6AACWYgAAc0oAAFAyAAD//9QA//+xAP//jgD//2sA//9IAP//JQD//wAA3NwAALm5AACWlgAAc3MAAFBQAADw/9QA4v+xANT/jgDG/2sAuP9IAKr/JQCq/wAAktwAAHq5AABilgAASnMAADJQAADj/9QAx/+xAKv/jgCP/2sAc/9IAFf/JQBV/wAASdwAAD25AAAxlgAAJXMAABlQAADU/9QAsf+xAI7/jgBr/2sASP9IACX/JQAA/wAAANwAAAC5AAAAlgAAAHMAAABQAADU/+MAsf/HAI7/qwBr/48ASP9zACX/VwAA/1UAANxJAAC5PQAAljEAAHMlAABQGQDU//AAsf/iAI7/1ABr/8YASP+4ACX/qgAA/6oAANySAAC5egAAlmIAAHNKAABQMgDU//8Asf//AI7//wBr//8ASP//ACX//wAA//8AANzcAAC5uQAAlpYAAHNzAABQUADy8vIA5ubmANra2gDOzs4AwsLCALa2tgCqqqoAnp6eAJKSkgCGhoYAenp6AG5ubgBiYmIAVlZWAEpKSgA+Pj4AMjIyACYmJgAaGhoADg4OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAAACEAAAAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAJAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJwAAACcAAAAnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnAAAAJwAAACcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQAAAA0AAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAADQAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgAAACYAAAAmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmAAAAJgAAACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjAAAAIwAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMAAAAjAAAAIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAAACEAAAAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhAAAAIQAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhMyEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCIuMTM0MzEuIiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAITMhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////////////////////////////d3///3d///7u///+7v///u7///7u////d3///3d///+7v///u7///7u///+7v///d3///u7//9/////f////3////9////+P///4AP///4/////f////3////9/////f/////////////w==" >
						<Object ID="{A57C5C7A-1389-452B-8D20-3C6B2FFE3EFD}" Name="RunTest" Flags="0x500" Class="sys://Schema/System/Boolean" Persistent="0" Momentary="-1" Description="Starts test of Z-Wave network." />
						<Object ID="{D8A624CC-E955-4CBB-9CA8-2D87B84F64B4}" Name="Stop" Flags="0x500" Class="sys://Schema/System/Boolean" Description="Stops test of Z-Wave network.  Following a stop, an event report summarizing the results will be generated." Momentary="-1" Persistent="0" />
						<Object ID="{038D657A-4919-4004-8C7F-7C7CD9084648}" Name="TestingInProgress" Flags="0x900" Class="sys://Schema/System/Boolean" ReadOnly="-1" />
						<Object ID="{27B1BB42-298D-476C-AAD1-FCC0BF3A4A04}" Name="StopOnFirstJobTimeout" Flags="0x900" Class="sys://Schema/System/Boolean" Description="If true, test stops after first job timeout.  It doesn&apos;t wait for n timeouts to become a job failure.  If false, test stops after first interface failure." DefaultValue="-1" />
						<Object ID="{ECF566E6-99B4-41E3-866C-93CF5FF82AC5}" Name="Periodicity" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="45" Description="Time in seconds to re-toggle lighting objects." />
						<Object ID="{17A1817A-D7CB-4486-A0F8-8B28B9D58775}" Name="TestRun" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" />
						<Object ID="{A664EE65-DEFF-4BD3-ABD0-96A876B09C30}" Name="TestStatus" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
						<Object ID="{F7C5005E-AA1B-45A4-ADB0-87BA0688A76D}" Name="OnChangeRunTest" Class="sys://Schema/Scripting/ClassProperty" Property="{A57C5C7A-1389-452B-8D20-3C6B2FFE3EFD}" >
<![CDATA[
Script=
' prevent port from resetting automatically
this.TestingInProgress = true
this.TestStatus = ""
this.TestRun = this.TestRun + 1
this.TestStatus = "Disabling automatic port reset."
this.PreviousMaxInterfaceFailures = this.MaxInterfaceFailures
this.MaxInterfaceFailures = 0
this.TestStatus = "Automatic Port Reset Disabled"
this.JobQueue.PurgeAllJobs
this.JobQueue.ResetJobTotals
this.Test
this.TestStatus = "Performing Test..."]]>
						</Object>
						<Object ID="{1A56372A-2DC0-4F23-85BF-67E0D9F32586}" Name="PreviousMaxInterfaceFailures" Flags="0x900" Class="sys://Schema/System/Number" ReadOnly="-1" Browsable="0" />
						<Object ID="{18532C71-4A0B-41C1-B0B5-543411F0196F}" Name="LightsOn" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'
for each oLight In this.Devices.GetObjectsByType(Schema.Modules.Leviton.Classes.Dimmer.Path)
	oLight.Brightness = 1
	oLight.PowerState = true
next
set oLight = nothing

for each oLight In this.Devices.GetObjectsByType(Schema.Modules.Leviton.Classes.Switch.Path)
	oLight.PowerState = true
next
set oLight = nothing]]>
						</Object>
						<Object ID="{6FB387AA-4008-448C-9D86-7CF34C11B712}" Name="LightsOff" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'
for each oLight In this.Devices.GetObjectsByType(Schema.Modules.Leviton.Classes.Dimmer.Path)
	oLight.PowerState = false
next
set oLight = nothing

for each oLight In this.Devices.GetObjectsByType(Schema.Modules.Leviton.Classes.Switch.Path)
	oLight.PowerState = false
next
set oLight = nothing]]>
						</Object>
						<Object ID="{1E011079-2FD4-402F-818A-E0390EC96112}" Name="Test" Class="sys://Schema/Scripting/SimpleClassMethod" >
<![CDATA[
Script=
'toggle lights on/off for a given periodicity
system.addTimer this.Periodicity, "on error resume next: this.Test",1,"Test_" & this.ObjectID

' get the first switch and use to track state
if this.PowerStates = true then
	this.LightsOff
	this.TestStatus = "Lights turning off..."
	this.PowerStates = false
else
	this.LightsOn
	this.TestStatus = "Lights turning on..."
	this.PowerStates = true
end if]]>
						</Object>
						<Object ID="{C119090C-F0B5-4F7C-B86E-564FDB307BB3}" Name="PowerStates" Flags="0x900" Class="sys://Schema/System/Boolean" ReadOnly="-1" Description="Used to track current power states for lighting objects." />
						<Object ID="{1A5FC37F-84E2-4C8D-B857-DA9EE21CE8B5}" Name="OnChangeStop" Class="sys://Schema/Scripting/ClassProperty" Property="{D8A624CC-E955-4CBB-9CA8-2D87B84F64B4}" >
<![CDATA[
Script=
'
this.TestStatus = "Setting event..."

dim oDevice
dim oEvent
CRLF = Chr(13) & Chr(10)
set oDevice = this

if not oDevice is nothing then	
	set oEvent = Events.CreateObject(Schema.System.Event.Path, "Test result_" & this.TestRun)
	with oEvent
		.Description = "Click ignore when done reading..."
		.Description = .Description & CRLF & "Total jobs: " & this.JobQueue.TotalJobs
		.Description = .Description & CRLF & "Job Failures: " & this.JobQueue.TotalFailedJobs
		.Description = .Description & CRLF & "Total Transmission Errors: " & this.TotalTransmissionErrors
		.Severity = 1
		.EventTime = Now
		.LinkObject = oDevice
	end with
	set oDevice = nothing
end if

this.TestStatus = "Removing test timer..."
system.removeTimer "Test_" & this.ObjectID
this.TestStatus = "Purging jobs..."
this.JobQueue.PurgeAllJobs
this.TestStatus = "Test stopped"
this.MaxInterfaceFailures = this.PreviousMaxInterfaceFailures
this.TestingInProgress = false]]>
						</Object>
					</Object>
					<Object ID="{3F852468-04F4-46F3-B1C7-B0F92201F3D2}" Name="LockStates" Class="sys://Schema/System/Enumeration" >
						<Object ID="{07AE5C90-B6BF-4A68-BF9C-2ACAA61FCD58}" Name="FailedToLock" Class="sys://Schema/System/Enum" Value="17" Description="Locking was unsuccessful." />
						<Object ID="{8041897F-6E5E-4EAA-BB7B-19894DDFE115}" Name="LockedByKeypad" Class="sys://Schema/System/Enum" Value="18" />
						<Object ID="{B522FFEB-BE6D-41AF-9330-39812D57466E}" Name="UnlockedByKeypad" Class="sys://Schema/System/Enum" Value="19" />
						<Object ID="{AD07A708-D197-4A3D-A931-DA2432826C6D}" Name="LockedWithKeyOrLever" Class="sys://Schema/System/Enum" Description="Locked using the lever or key." Value="21" />
						<Object ID="{FFBAF92A-A2B0-47E9-A687-4963DA6CA6F3}" Name="UnlockedWithKeyOrLever" Class="sys://Schema/System/Enum" Description="Unlocked using the lever or key." Value="22" />
						<Object ID="{7AFC7F05-F2D4-4734-BED6-3765BE45EF96}" Name="FailedToLock" Class="sys://Schema/System/Enum" Value="23" Description="Locking was unsuccessful." />
						<Object ID="{0C23B293-E438-44F6-B563-96F2906127FE}" Name="LockedByZWave" Class="sys://Schema/System/Enum" Description="Locked by Z-Wave." Value="24" />
						<Object ID="{5AB9C895-2EB3-49E8-91AF-462D4E592B22}" Name="UnlockedByZWave" Class="sys://Schema/System/Enum" Description="Unlocked by Z-Wave." Value="25" />
					</Object>
					<Object ID="{1F346843-8A36-4970-AEBA-E11A32FE8495}" Name="TamperProofStates" Class="sys://Schema/System/Enumeration" >
						<Object ID="{93D070E4-1334-41DD-A030-44F490D22F99}" Name="Off" Class="sys://Schema/System/Enum" />
						<Object ID="{8266EE35-0A24-485B-AC48-D1E73E012741}" Name="BumpGuard" Class="sys://Schema/System/Enum" Value="1" Description="Device is protected against accidental bumping by requiring multiple presses." />
						<Object ID="{1855CF89-19D2-4FC3-85C1-6A45272A148D}" Name="LocalControlDisabled" Class="sys://Schema/System/Enum" Value="2" Description="Disables local controls for a device." />
					</Object>
				</Object>
				<Object ID="{84799CFA-D92A-483A-957B-89B9358C9589}" Name="Templates" Flags="0x120000" Class="sys://Schema/System/TemplateFolder" />
				<Object ID="{E55F7839-4466-4B16-BCF4-6B56FC28AAF9}" Name="GlobalScripts" Flags="0x120000" Class="sys://Schema/Scripting/GlobalScriptFolder" >
					<Object ID="{0170ECD4-AC66-4441-B153-4686FCE15254}" Name="Vizia" Class="sys://Schema/Scripting/Global" >
<![CDATA[
Script=
'
' gViziaPacketParser
' Extracts the parameters out of a Vizia packet (RZC0P interface).
' Returns a positive integer value indicating the packet type.
' 0 = Bad Packet
' 1 = Error Status (<E)
' 2 = Transmission Status (<X)
' 3 = Found Node (<F)
' 4 = Group Status (<M)
' 5 = Network Configuration (<!)
' 10 = Node Scene (<N S)
' 11 = Node Light Level (<N L)
' 12 = Node General (<N :)
' 13 = Node Name (<N ")
' 14 = Node Location Name (<N ')
' aParms will contain the packet's parameters.
' Returns a negative integer value indicating a bad packet type.
'
' NOTE 
' Calling function must pass an array called aParms
' in order to achieve 'pass-by-reference'.

function gViziaPacketParser(sPkt, aParms)
	dim oRegEx, oMatches, oMatch
	dim iResult: iResult = 0
	dim Tmp
	
	iCmdLength = len(sPkt)
	
	if iCmdLength = 5 then
		select case left(sPkt, 2)
			case "<E":
				if gViziaEXFParser(sPkt, aParms) then 
					iResult = 1
				else
					iResult = -1
				end if
			case "<X":
				if gViziaEXFParser(sPkt, aParms) then 
					iResult = 2
				else
					iResult = -2
				end if			
			case "<F":
				if gViziaEXFParser(sPkt, aParms) then 
					iResult = 3
				else
					iResult = -3
				end if				
			case "<M":
				if gViziaEXFParser(sPkt, aParms) then 
					iResult = 4
				else
					iResult = -4
				end if	
			case "<!":
				if gViziaEXFParser(sPkt, aParms) then 
					iResult = 5
				else
					iResult = -5
				end if	
			case else:
				iResult = 0
		end select
	else if iCmdlength > 6 then
			select case left(sPkt, 2)
				case "<N":
					select case mid(sPkt, 6, 1)
						case "S":
							if gViziaNParser(sPkt, "^<N([0-9]{3})S([0-9]{3}),([0-9]{3}),([0-9]{3})$", 4, aParms) then
								iResult = 10
							else
								iResult = -10
							end if
						case "L":
							if gViziaNParser(sPkt, "^<N([0-9]{3})L([0-9]{3})$" , 2, aParms) then
								iResult = 11
							else
								iResult = -11
							end if
						case ":":
							iResult = -12
							set oRegEx = New RegExp
							with oRegEx
								.ignoreCase = true
								.global = true
								' Test for general response
								.pattern = "^<N(?:([0-9]{3})):([0-9]{3})(?:,([0-9]{3}))+$"
								set oMatches = .Execute(sPkt)
								if oMatches.Count = 1  then
									' Confirmed it is a valid General response
									' Proceed to extract its payload
									.pattern = "([0-9]{3})"
									set oMatches = .Execute(sPkt)
									if oMatches.Count >= 3 then
										iResult = 12
										redim aParms(oMatches.Count)
										for i = 0 to oMatches.Count - 1
											aParms(i) = cint(oMatches(i))
										next
									end if
								end if
							end with
							set oRegEx = nothing
							set oMatches = nothing
							set oMatch = nothing
						
						case chr(34):
							if gViziaNParser(sPkt, "^<N([0-9]{3})\x22(.*)$", 2, aParms) then
								iResult = 13
							else
								iResult = -13
							end if
						case chr(39):
							if gViziaNParser(sPkt, "^<N([0-9]{3})\x27(.*)$", 2, aParms) then
								iResult = 14
							else
								iResult = -14
							end if
						case else:
							iResult = 0
					end select
				
				' handle new VRC0Pv3 security commands 				
				case "<n":
					select case mid(sPkt, 6, 1)
						case ":":
							iResult = -12
							set oRegEx = New RegExp
							with oRegEx
								.ignoreCase = true
								.global = true
								' Test for general response
								.pattern = "^<n(?:([0-9]{3})):([0-9]{3})(?:,([0-9]{3}))+$"
								set oMatches = .Execute(sPkt)
								if oMatches.Count = 1  then
									' Confirmed it is a valid General response
									' Proceed to extract its payload
									.pattern = "([0-9]{3})"
									set oMatches = .Execute(sPkt)
									if oMatches.Count >= 3 then
										iResult = 12
										redim aParms(oMatches.Count)
										for i = 0 to oMatches.Count - 1
											aParms(i) = cint(oMatches(i))
										next
									end if
								end if
							end with
							set oRegEx = nothing
							set oMatches = nothing
							set oMatch = nothing
						case else:
							iResult = 0
					end select				
				case else:
			end select
		end if
	end if
	
	gViziaPacketParser = iResult
end function


' gViziaEXFParser
' Extracts the parameters out of the following
' packet types:
' Error Status (<E)
' Transmission Status (<X)
' Found Node (<F)
' Returns true if packet is valid.
' Returns false if packet is invalid.
' aParms will contain the packet's parameters.
'
' NOTE 
' Calling function must pass an array called aParms
' in order to achieve 'pass-by-reference'.

function gViziaEXFParser(sPkt, aParms)
	dim Tmp
	dim bResult: bResult = false
	
	redim aParms(1)
	Tmp = mid(sPkt, 3)
	if IsNumeric(Tmp) then 
		aParms(0) = cint(Tmp)
		bResult = true
	end if
	
	gViziaEXFParser = bResult
end function


' gViziaNParser
' Extracts the parameters out of the following
' packet types:
' Node Scene (<N S)
' Node Light Level (<N L)
' Node Name (<N ")
' Node Location Name (<N ')
' Returns true if packet is valid.
' Returns false if packet is invalid.
' aParms will contain the packet's parameters.
'
' NOTE 
' Calling function must pass an array called aParms
' in order to achieve 'pass-by-reference'.

function gViziaNParser(sPkt, sRegex, iParmCount, aParms)
	dim oRegEx, oMatches, oMatch
	dim bResult: iResult = false
	
	set oRegEx = New RegExp
	with oRegEx
		.ignoreCase = true
		.global = true
		.pattern = sRegex
		set oMatches = .Execute(sPkt)
		if oMatches.Count = 1  then
			set oMatch = oMatches(0)
			if oMatch.SubMatches.Count = iParmCount then 
				bResult = true
				redim aParms(iParmCount)
				for i = 0 to iParmCount - 1
					if IsNumeric(oMatch.SubMatches(i)) then
						aParms(i) = cint(oMatch.SubMatches(i))
					else
						aParms(i) = cstr(oMatch.SubMatches(i))
					end if
				next
			end if
		end if
	end with
	
	set oMatch = nothing
	set oMatches = nothing
	set oRegEx = nothing
	
	gViziaNParser = bResult
end function


'Pack up the args contains in the array aParms[] into a single text string 
'so it can be passed to the Devices.ProcessCmd_{CommandClass} method
function gViziaArgsPack( aParms, iParms )
	'if iParms > 0 and iParms = ubound(aParms) then
	'Sometimes aParms come in with more than iParms elements
	if iParms > 0 and iParms-1 <= ubound(aParms) then
		parms = aParms(0)
		for i = 1 to iParms - 1
			parms = parms & "|" & aParms(i)
		'debugout "gViziaArgsPack():  parms=" & parms
		next
	end if
	gViziaArgsPack = parms
end function


'Unpack the args back into an array
function gViziaArgsUnpack( parms, numparms )
	aParms = Split( parms, "|", numparms )
	gViziaArgsUnpack = aParms
end function


'Pack up the args contains in the array aParms[] into a single text string 
'so it can be passed to the Devices.ProcessCmd_{CommandClass} method
'this packages a secure packet so that it will work with ProcessCmd methods.
function gViziaSecureArgsPack( aParms, iParms )
	'if iParms > 0 and iParms = ubound(aParms) then
	'Sometimes aParms come in with more than iParms elements
	if iParms > 0 and iParms-1 <= ubound(aParms) then
		parms = aParms(0)
		if ubound(aParms)>= 1 then
			if aParms(1) = 0 then
				' omit aparms(1) if aparms(1) = 0
				for i = 2 to iParms - 1
					parms = parms & "|" & aParms(i)
					'debugout "gViziaArgsPack():  parms=" & parms
				next
			else
				for i = 1 to iParms - 1
					parms = parms & "|" & aParms(i)
					'debugout "gViziaArgsPack():  parms=" & parms
				next
			end if
		end if
	end if
	gViziaSecureArgsPack = parms
end function

]]>
					</Object>
					<Object ID="{4A133E01-FD07-4FA6-9B40-C2F13DA50FF6}" Name="Sensor" Class="sys://Schema/Scripting/Global" >
<![CDATA[
Script=
function gViziaProcessSensorMultilevel( oDevice, aParms, iParms )
	if Not oDevice is Nothing then
		sParms = gViziaArgsPack( aParms, iParms )
		found = false
		if iParms >= 9 and aParms(1) = 96 and aParms(2) = 6 then
			offset = 4
			found = true
		elseif iParms >= 6 and aParms(1) = 49 and aParms(2) = 5 then
			offset = 1
			found = true
		else
			if gViziaIsDebugOn(0) then debugout "gViziaProcessSensorMultilevel(): Malformed zwave command, parms=" & sParms
		end if

		'Check that it is a SensorMultilevel (49) Report (5)
		if found and aParms(offset) = 49 and aParms(offset+1) = 5 then
			Dim obj
			select case aParms(offset+2)
				case 1: 'Temperature
					'TEMPERATURE report
					if (iParms - offset) = 6 then
						for each oSensorType in oDevice.GetObjectsByType(Schema.Modules.Leviton.SensorTypes.Classes.SensorType_Temperature.Path,false)
							if oSensorType.IsOfExplicitType(Schema.Modules.Leviton.SensorTypes.Classes.SensorType_Temperature.Path) then
								select case aParms(offset+3)
									case 42: 'Fahrenheit
										oSensorType.Temperature.Fahrenheit = (((aParms(offset+4) * 256) + aParms(offset+5)) / 10)
									case 34: 'Celsius 
										oSensorType.Temperature.Celsius = ((aParms(offset+4) * 256) + aParms(offset+5)) / 10
								end select
								if gViziaIsDebugOn(1) then debugout "gViziaProcessSensorMultilevel(): TEMPERATURE F=" & oSensorType.Temperature.Fahrenheit
							end if
						next
					else
						if gViziaIsDebugOn(0) then debugout "gViziaProcessSensorMultilevel(): Malformed zwave TEMPERATURE command, parms=" & sParms
					end if

				case 2: 'General
					'GENERAL report
					if gViziaIsDebugOn(0) then debugout "gViziaProcessSensorMultilevel(): Unhandled GENERAL report: " & sParms
		
				case 3: 'Luminance
					'LUMINANCE report
					for each oSensorType in oDevice.GetObjectsByType(Schema.Modules.Leviton.SensorTypes.Classes.SensorType_Light.Path,false)
						if oSensorType.IsOfExplicitType(Schema.Modules.Leviton.SensorTypes.Classes.SensorType_Light.Path) then
							oSensorType.Light = aParms(offset+4)
							if gViziaIsDebugOn(1) then debugout "gViziaProcessSensorMultilevel(): LUMINANCE=" & oSensorType.Light
						end if
					next
					
				case 5: 'Humidity
					'HUMIDITY report
					for each oSensorType in oDevice.GetObjectsByType(Schema.Modules.Leviton.SensorTypes.Classes.SensorType_Humidity.Path,false)
						if oSensorType.IsOfExplicitType(Schema.Modules.Leviton.SensorTypes.Classes.SensorType_Humidity.Path) then
							oSensorType.Humidity = aParms(offset+4) / 100
							if gViziaIsDebugOn(1) then debugout "gViziaProcessSensorMultilevel(): HUMIDITY=" & oSensorType.Humidity
						end if
					next
		
				case else: 'Unknown
					if gViziaIsDebugOn(0) then debugout "gViziaProcessSensorMultilevel(): Unknown type of sensor report: " & sParms
			end select
		end if
	end if
	gViziaProcessSensorMultilevel = true
end function
]]>
					</Object>
					<Object ID="{B32611D6-4E2E-4339-BE1E-ACBA9FF79A4B}" Name="Debug" Class="sys://Schema/Scripting/Global" >
<![CDATA[
Script=
function gViziaIsDebugOn( dLevel )
	'Set this to -1, 0, 1, or 2 to control the volume of debug information
	DebugLevel = -1

	gViziaIsDebugOn = false
	if dLevel <= DebugLevel then
		gViziaIsDebugOn = true
	end if
end function
]]>
					</Object>
					<Object ID="{CF9A3920-349D-4066-AA4D-B9894AA8C88A}" Name="Tools" Class="sys://Schema/Scripting/Global" >
<![CDATA[
Script=
' Converts a URL type SYS path to a dotted notation path
function gDotPath(strTemp)
	strDotTemp = right(strTemp,len(strTemp) - 6)
	strDotTemp = replace(strDotTemp, "/", ".")
	strDotTemp = replace(strDotTemp, " ", "_")
	gDotPath = strDotTemp
end function
]]>
					</Object>
				</Object>
				<Object ID="{1279FE5C-2F6F-4371-A4A4-4949C04A5CD8}" Name="Logic" Flags="0x120000" Class="sys://Schema/Logic/RuleFolder" />
				<Object ID="{18762BE6-107D-4F71-91B8-EC9317481C37}" Name="Variables" Flags="0x120000" Class="sys://Schema/System/VariableFolder" />
				<Object ID="{AB22CFC6-960B-471A-8A5F-856E209B111C}" Name="Timers" Flags="0x120000" Class="sys://Schema/Timers/TimerFolder" />
				<Object ID="{956F9D7B-43DD-4900-8F62-5617209D497A}" Name="Macros" Flags="0x120000" Class="sys://Schema/System/MacroHolder" >
					<Object ID="{FB0D705C-A6CF-48FB-809C-A486C289139F}" Name="Delays" Class="sys://Schema/System/MacroFolder" >
						<Object ID="{3030096F-4E14-4EFB-9D07-02640FF4B6E6}" Name="JobDelay" Class="sys://Schema/System/DelayMacro" DelayTime="5000" Description="Used for VRC0Pv3 to prevent serial buffer overflow." />
					</Object>
				</Object>
				<Object ID="{BE2910F1-2782-482E-9B15-D482678EECA3}" Name="Models" Class="sys://Schema/System/Module" >
					<Object ID="{F55D3197-6B59-4D76-B5BB-3A60E10081CC}" Name="Classes" Flags="0x120000" Class="sys://Schema/System/ClassFolder" >
						<Object ID="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" Name="Manufacturers" Class="sys://Schema/System/Enumeration" >
							<Object ID="{2A273144-306E-4969-9367-398E9C6FA5F0}" Name="Unknown" Class="sys://Schema/System/Enum" />
							<Object ID="{9A78AF60-1E2A-4CD2-B9C7-1C587F08337F}" Name="ACT" Class="sys://Schema/System/Enum" Value="1" />
							<Object ID="{75A5C48A-5B37-4B62-8887-C199F0E8E867}" Name="Intermatic" Class="sys://Schema/System/Enum" Value="5" />
							<Object ID="{B59CCDC7-8589-49C3-8CFB-1EA21EFBE720}" Name="Leviton" Class="sys://Schema/System/Enum" Value="29" />
							<Object ID="{8DEC4F3B-2D32-48C0-A619-06AA8D224787}" Name="ExpressControls" Class="sys://Schema/System/Enum" Value="30" Description="aka Homeseer" />
							<Object ID="{025EAD0C-F0FF-44BC-8857-EA388396090B}" Name="Everspring" Class="sys://Schema/System/Enum" Value="96" Description="aka HomeManageabes or Hawking" />
							<Object ID="{F0544286-44DC-4F8B-A904-69393F0A8B2C}" Name="GE" Class="sys://Schema/System/Enum" Value="99" />
							<Object ID="{A2ED9622-4526-4A96-87AE-58ABCBC0FDEA}" Name="EverSpringOEM" Class="sys://Schema/System/Enum" Value="111" Description="aka HomeManageables???" />
							<Object ID="{C4D83C78-873F-40CF-98F6-9EA42AA39419}" Name="RCS" Class="sys://Schema/System/Enum" Value="139" Description="aka Trane" />
							<Object ID="{7279DE21-0AC6-4C36-88D2-D731F0F6265F}" Name="Kwikset" Class="sys://Schema/System/Enum" Value="144" Description="aka Black and Decker" />
						</Object>
						<Object ID="{C1F97010-2B21-4C76-9545-516622ABB571}" Name="DeviceModels" Class="sys://Schema/System/Enumeration" Description="Enumeration of specific sensor models" >
							<Object ID="{A38E599D-9142-4A03-B3E0-D16A6840A042}" Name="HM-TS001" Class="sys://Schema/System/Enum" Value="1" />
							<Object ID="{69C788DD-D3C1-41B7-8797-3321F6335D3D}" Name="HM-DW001" Class="sys://Schema/System/Enum" Value="2" />
							<Object ID="{F74E5269-3AD8-4A80-B3DB-F99FCCC241B9}" Name="ZIR000" Class="sys://Schema/System/Enum" Value="3" />
							<Object ID="{B11DF699-A567-46EB-AF1F-5B48196FDB81}" Name="HM-FS001" Class="sys://Schema/System/Enum" Value="4" />
							<Object ID="{D27A054B-6ED6-49D1-9CFB-865398F3EF27}" Name="HSM100" Class="sys://Schema/System/Enum" Value="5" />
							<Object ID="{FB9D1DB1-491D-4AE6-AD6A-E7FAB9364200}" Name="HRDS1" Class="sys://Schema/System/Enum" Value="6" />
							<Object ID="{0ECEF554-4F87-4DA2-8577-74008B98C48A}" Name="SM103" Class="sys://Schema/System/Enum" Value="7" />
							<Object ID="{1ED6A3F8-6634-4F06-9BBB-14E2A946558A}" Name="VRP03-1LW" Class="sys://Schema/System/Enum" Value="8" />
							<Object ID="{5F8C7F4C-E57F-4D21-AE5D-46317CB7E09C}" Name="HA03" Class="sys://Schema/System/Enum" Value="9" />
							<Object ID="{C5C58591-E253-45E2-82A1-75340DB413C6}" Name="TZMT400" Class="sys://Schema/System/Enum" Value="10" />
							<Object ID="{1F3B5138-386F-455F-B434-40105285B8E4}" Name="VRS05-1LX" Class="sys://Schema/System/Enum" Value="11" />
							<Object ID="{1CD4F772-6972-46EF-9741-C6C19316C503}" Name="VRI06-1LX" Class="sys://Schema/System/Enum" Value="12" />
							<Object ID="{D681D01E-69EB-4667-9036-56D6E933D988}" Name="99100" Class="sys://Schema/System/Enum" Value="13" />
							<Object ID="{AAC52FC9-77A7-4E01-BC7A-1F42A82997BD}" Name="VRS15-1LX" Class="sys://Schema/System/Enum" Value="14" />
							<Object ID="{0B5E8CC0-CC08-46DA-ACF7-6FFA6BF3CF0A}" Name="VRF01-1LX" Class="sys://Schema/System/Enum" Value="15" />
							<Object ID="{DE0CFAF7-85D6-456A-97BA-FF9D8E3B1F09}" Name="45605" Class="sys://Schema/System/Enum" Value="16" />
							<Object ID="{5A7AE8A7-1FAA-4F5E-A78A-501D0D93C750}" Name="TZEMT400" Class="sys://Schema/System/Enum" Value="17" />
							<Object ID="{0DC92C33-03ED-4463-9D7B-9560C1C1841A}" Name="VRCZ4-M0" Class="sys://Schema/System/Enum" Value="18" />
							<Object ID="{9510EFDA-A5FA-4451-9F64-BA7C204B4408}" Name="VRCZ4-MR" Class="sys://Schema/System/Enum" Value="19" />
						</Object>
						<Object ID="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" Name="Model" Class="sys://Schema/System/Class" Virtual="-1" Description="Base class for supporting manufacturer/model specific configuration parameters" >
							<Object ID="{F4D5BA9C-3D64-43EC-A577-FBFABAE78273}" Name="SendModelSpecificCommands" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'The Model_NNNNNN class that inherits from this base class should override this function
'in order to send commands specific to this device manufacturer and model (e.g. configuration parameters)
]]>
							</Object>
							<Object ID="{68BEDDBC-1D55-4C8B-97E1-116843DFFA99}" Name="ProcessConfigurationCommand" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'The Model_NNNNNN class that inherits from this base class should override this function
'in order to process commands specific to this device manufacturer and model (e.g. configuration parameters)

if gViziaIsDebugOn(1) then debugout "Generic.ProcessonfigurationCommand(): parameter" & method.parameter & "=" & method.value

'If we reach this part of the script, we've already validated that we have a valid CONFIGURATION REPORT command
'All device specific processing should be performed here

'Example of how this shoud be implemented
'select case method.parameter
'	case 1: 'Sensitivity
'		oldValue = this.ConfigSet_Sensitivity
'		this.Sensitivity = method.value
'		this.ConfigSet_Sensitivity = oldValue
'	case 2: 'OnTime
'		oldValue = this.ConfigSet_OnTime
'		this.OnTime = method.value
'		this.ConfigSet_OnTime = oldValue
'end select
]]>
								<Object ID="{851ED89A-F8E0-447F-B688-F3D082A992A9}" Name="parameter" Class="sys://Schema/System/Number" />
								<Object ID="{7B3ADC4A-08A9-4EEC-A713-71D12A910447}" Name="value" Class="sys://Schema/System/Number" />
							</Object>
							<Object ID="{11BE57B3-436D-4E4F-9176-7AE02FE1A617}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" Browsable="0" />
							<Object ID="{49B882EE-1508-4E6F-9822-F8589620BE25}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" ReadOnly="-1" />
							<Object ID="{B37823FC-AE9F-4D17-A1F9-3BB46B3C19D5}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" Browsable="0" ReadOnly="-1" />
							<Object ID="{624031A8-95E4-4AB0-B4BC-0477EE011591}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" Browsable="0" ReadOnly="-1" />
						</Object>
						<Object ID="{3B013548-F94C-45EE-9316-A023B6D6F1D7}" Name="Model_HM-TS001" Class="sys://Schema/System/Class" DisplayName="HM-TS001" Description="HomeManageables Temperature/Humidity Sensor" >
							<Object ID="{686D591A-B215-425E-9507-4C4424F827C9}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" DefaultValue="3,4" ReadOnly="-1" />
							<Object ID="{4392FD1B-278F-4EC2-AF95-49E2E91DF698}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="99" ReadOnly="-1" />
							<Object ID="{E4DF5EE4-5459-4AE7-8762-2B05A2270BC6}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="6" ReadOnly="-1" />
							<Object ID="{E720CD9E-1D36-4C7D-BEA6-6BF4EE22FFB8}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{4E91B2A1-A6E7-46ED-ADA8-A9F3CFE2086E}" Name="SendModelSpecificCommands" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
if gViziaIsDebugOn(2) then debugout "HM-TS001.SendModelSpecificCommands(): sending pending model-specific commands at " & now

'AutoreportInterval
if this.ConfigSet_AutoreportInterval = true then
	this.ConfigSet_AutoreportInterval = false
	this.SendCmd_ConfigSet_AutoreportInterval
end if

if this.ConfigGet_AutoreportInterval = true then
	this.ConfigGet_AutoreportInterval = false
	this.SendCmd_ConfigGet_AutoreportInterval
end if

'AutoreportTempChange
if this.ConfigSet_AutoreportTempChange = true then
	this.ConfigSet_AutoreportTempChange = false
	this.SendCmd_ConfigSet_AutoreportTempChange
end if

if this.ConfigGet_AutoreportTempChange = true then
	this.ConfigGet_AutoreportTempChange = false
	this.SendCmd_ConfigGet_AutoreportTempChange
end if

'AutoreportHumidityChange
if this.ConfigSet_AutoreportHumidityChange = true then
	this.ConfigSet_AutoreportHumidityChange = false
	this.SendCmd_ConfigSet_AutoreportHumidityChange
end if

if this.ConfigGet_AutoreportHumidityChange = true then
	this.ConfigGet_AutoreportHumidityChange = false
	this.SendCmd_ConfigGet_AutoreportHumidityChange
end if
]]>
							</Object>
							<Object ID="{585A4F36-8A2C-4620-97E5-6BB67D5FAAC6}" Name="ProcessConfigurationCommand" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'The Model_NNNNNN class that inherits from this base class should override this function
'in order to process commands specific to this device manufacturer and model (e.g. configuration parameters)

select case method.parameter
	case 6: 'AutoreportInterval
		oldValue = this.ConfigSet_AutoreportInterval
		this.AutoreportInterval = method.value
		this.ConfigSet_AutoreportInterval = oldValue
	case 7: 'AutoreportTempChange
		oldValue = this.ConfigSet_AutoreportTempChange
		this.AutoreportTempChange = method.value
		this.ConfigSet_AutoreportTempChange = oldValue
	case 8: 'AutoreportHumidityChange
		oldValue = this.ConfigSet_AutoreportHumidityChange
		this.AutoreportHumidityChange = method.value
		this.ConfigSet_AutoreportHumidityChange = oldValue
end select
]]>
								<Object ID="{2BC4FE84-729D-4AFF-BACB-936470E629EB}" Name="parameter" Flags="0x900" Class="sys://Schema/System/Number" />
								<Object ID="{308DAE0D-04A4-45FB-9035-00A496BFDB92}" Name="value" Flags="0x900" Class="sys://Schema/System/Number" />
							</Object>
							<Object ID="{D471C395-7D7C-4A36-8591-069E96000D83}" Name="AutoreportInterval" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="60" />
							<Object ID="{171F443F-776B-4E1E-8483-6F2BD007F086}" Name="OnChangeAutoreportInterval" Class="sys://Schema/Scripting/ClassProperty" Property="{D471C395-7D7C-4A36-8591-069E96000D83}" >
<![CDATA[
Script=
'Autoreport interval is between 1-1439; 0 is disable
if this.AutoreportInterval > 1439 then
	this.AutoreportInterval = 1439
end if
this.ConfigSet_AutoreportInterval = true
]]>
							</Object>
							<Object ID="{4FC0677C-BCC8-41EC-9438-85CA02139814}" Name="ConfigSet_AutoreportInterval" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{6C4522B7-BE70-4A31-A3FE-723A9E4EF750}" Name="SendCmd_ConfigSet_AutoreportInterval" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the configuration command to set the autoreport interval
parameterNum = 6
numBytes = 2
byte1 = this.AutoreportInterval mod 256
byte2 = this.AutoreportInterval \ 256

command = ">N" & this.Parent.NodeID & "SE112,4," & parameterNum & "," & numBytes & "," & byte2 & "," & byte1
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigSet_AutoreportInterval(): set interval=" & this.AutoreportInterval & ", on node=" & this.Parent.NodeID
]]>
							</Object>
							<Object ID="{9B1A0634-3CC4-4957-9344-C9425B5FD84D}" Name="ConfigGet_AutoreportInterval" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{F9E13E3A-0779-43C2-943C-BCF4EB12985E}" Name="SendCmd_ConfigGet_AutoreportInterval" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the configuration command to get the autoreport interval
parameterNum = 6

command = ">N" & this.Parent.NodeID & "SE112,5," & parameterNum
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigGet_AutoreportInterval(): command=" & command
]]>
							</Object>
							<Object ID="{FEEA976F-0412-4AB3-B195-73ACB670E6B5}" Name="AutoreportTempChange" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="10" />
							<Object ID="{AA188832-E6C7-45FF-9D5B-EB6FBA4011D2}" Name="OnChangeAutoreportTempChange" Class="sys://Schema/Scripting/ClassProperty" Property="{FEEA976F-0412-4AB3-B195-73ACB670E6B5}" >
<![CDATA[
Script=
'AutoreportTempChange is between 1 and 70; 0 is disable
if this.AutoreportTempChange > 70 then
	this.AutoreportTempChange = 70
end if
this.ConfigSet_AutoreportTempChange = true
]]>
							</Object>
							<Object ID="{0054167E-AD22-439C-A061-29F172814D5B}" Name="ConfigSet_AutoreportTempChange" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{D2F2AC62-1E00-4FFB-B0B0-36714E2C477B}" Name="SendCmd_ConfigSet_AutoreportTempChange" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send configuration command to set AutoreportTempChange
parameterNum = 7
numBytes = 1
byte1 = this.AutoreportTempChange

command = ">N" & this.Parent.NodeID & "SE112,4," & parameterNum & "," & numBytes & "," & byte1
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigSet_AutoreportTempChange(): set tempchange=" & byte1 & ", on node=" & this.Parent.NodeID
]]>
							</Object>
							<Object ID="{C0679BB1-847A-4264-B471-3511D602329A}" Name="ConfigGet_AutoreportTempChange" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{F506D1AC-E4E6-43E8-BEA3-96BF78F3A0E1}" Name="SendCmd_ConfigGet_AutoreportTempChange" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send configuration command to get AutoreportTempChange
parameterNum = 7

command = ">N" & this.Parent.NodeID & "SE112,5," & parameterNum
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigGet_AutoreportTempChange(): command=" & command
]]>
							</Object>
							<Object ID="{6138E1A4-731A-4DBC-B865-B8EDEBA958E6}" Name="AutoreportHumidityChange" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="10" />
							<Object ID="{AB8105F4-D037-4E1F-8B34-37B1997EAAF1}" Name="OnChangeAutoreportHumidityChange" Class="sys://Schema/Scripting/ClassProperty" Property="{6138E1A4-731A-4DBC-B865-B8EDEBA958E6}" >
<![CDATA[
Script=
' AutoreportHumidityChange is between 5-70; 0 is disable
if this.AutoReportHumidityChange > 70 then
	this.AutoReportHumidityChange = 70
end if
if this.AutoReportHumidityChange > 0  and this.AutoreportHumidityChange < 5 then
	this.AutoReportHumidityChange = 5
end if
this.ConfigSet_AutoReportHumidityChange = true
]]>
							</Object>
							<Object ID="{268F6558-5A84-446B-B9DA-B10349E2B684}" Name="ConfigSet_AutoreportHumidityChange" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{FDCBE0ED-9154-43F7-B092-C3CF8EE34ACB}" Name="SendCmd_ConfigSet_AutoreportHumidityChange" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send configuration command to set AutoreportHumidityChange
parameterNum = 8
numBytes = 1
byte1 = this.AutoreportHumidityChange

command = ">N" & this.Parent.NodeID & "SE112,4," & parameterNum & "," & numBytes & "," & byte1
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigSet_AutoreportHumidityChange(): set humiditychange=" & byte1 & ", on node=" & this.Parent.NodeID
]]>
							</Object>
							<Object ID="{3DD2E075-DA68-4F24-8610-39A3181B9750}" Name="ConfigGet_AutoreportHumidityChange" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{04514E12-B16B-4233-8B7A-18E7B57504C1}" Name="SendCmd_ConfigGet_AutoreportHumidityChange" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send configuration command to get AutoreportHumidityChange
parameterNum = 8

command = ">N" & this.Parent.NodeID & "SE112,5," & parameterNum
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigGet_AutoreportHumidityChange(): command=" & command
]]>
							</Object>
							<Object ID="{63B828BD-50C6-4C06-A593-5019F9E658E7}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{3023866E-5685-4A1A-B032-9FF4E6D7FC6E}" Name="Model_HM-DW001" Class="sys://Schema/System/Class" DisplayName="HM-DW001" Description="HomeManageables Door/Window Sensor" >
							<Object ID="{263DCC09-36EF-44C6-A4E4-033FCA6F6096}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{FD0FB869-5811-4C3A-9D88-2A9B8ACFA18D}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="111" ReadOnly="-1" />
							<Object ID="{5C776D72-F63E-4D5F-8690-7C310C892782}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="258" ReadOnly="-1" />
							<Object ID="{D2AD2076-5DB4-43A2-AE9B-86213EB9F129}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{A04DCEFE-13FB-4109-97C2-762387B22076}" Name="SendModelSpecificCommands" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
if gViziaIsDebugOn(2) then debugout "HM-DW001.SendModelSpecificCommands(): sending pending model-specific commands at " & now

if this.ConfigSet_OffDelay = true then
	this.ConfigSet_OffDelay = false
	this.SendCmd_ConfigSet_OffDelay
end if

if this.ConfigGet_OffDelay = true then
	this.ConfigGet_OffDelay = false
	this.SendCmd_ConfigGet_OffDelay
end if
]]>
							</Object>
							<Object ID="{5880CAAC-1CAF-4B28-BA10-8AEE7ECFD7C0}" Name="ProcessConfigurationCommand" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'The Model_NNNNNN class that inherits from this base class should override this function
'in order to process commands specific to this device manufacturer and model (e.g. configuration parameters)

select case method.parameter
	case 2: 'OffDelay
		oldValue = this.ConfigSet_OffDelay
		this.OffDelay = method.value
		this.ConfigSet_OffDelay = oldValue
end select
]]>
								<Object ID="{A22C2417-5ECF-4945-AD2A-2C95028D215E}" Name="parameter" Flags="0x900" Class="sys://Schema/System/Number" />
								<Object ID="{BAA844AE-592A-4EDF-9D3E-62B4A948344D}" Name="value" Flags="0x900" Class="sys://Schema/System/Number" />
							</Object>
							<Object ID="{7A28940E-8E83-4999-AC00-9F284E10AE7B}" Name="OffDelay" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="60" />
							<Object ID="{66220EA3-F30D-42FA-8C55-94FF7DEC23C7}" Name="OnChangeOffDelay" Class="sys://Schema/Scripting/ClassProperty" Property="{7A28940E-8E83-4999-AC00-9F284E10AE7B}" >
<![CDATA[
Script=
'OffDelay is between 1-127
if this.OffDelay > 127 then
	this.OffDelay = 127
end if
if this.OffDelay < 1 then
	this.OffDelay = 1
end if
this.ConfigSet_OffDelay = true
]]>
							</Object>
							<Object ID="{0ACAB75E-E629-43A2-9DEC-61FC392F525E}" Name="ConfigSet_OffDelay" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{EADB1D58-0F43-4578-A329-057639F9DDAD}" Name="SendCmd_ConfigSet_OffDelay" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the config command to set the OffDelay device parameter
parameterNum = 2
numBytes = 1
byte1 = this.OffDelay

command = ">N" & this.parent.NodeID & "SE112,4," & parameterNum & "," & numBytes & "," & byte1
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigSet_OffDelay(): set off delay=" & byte1 & ", on node=" & this.parent.NodeID
]]>
							</Object>
							<Object ID="{1C77BDEF-0F18-498F-B8F2-9524A4E75A61}" Name="ConfigGet_OffDelay" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{C43097A0-8087-4C4A-AFB9-26B80E19A7EF}" Name="SendCmd_ConfigGet_OffDelay" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the configuration command to get the off delay
parameterNum = 2

command = ">N" & this.Parent.NodeID & "SE112,5," & parameterNum
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigGet_OffDelay(): command=" & command
]]>
							</Object>
							<Object ID="{5B94E82B-0E99-4671-931C-2CA1ED0AB104}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{998E8894-BAFA-4DAD-8AB3-85110B0D0D84}" Name="Model_ZIR000" Class="sys://Schema/System/Class" Description="ACT ZIR000 Motion Sensor" DisplayName="ZIR000" >
							<Object ID="{45F97544-9CA7-4B60-9136-D466007F5681}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{C41AB894-E37B-4A16-A9C4-0F592C1E4206}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{D1230E12-81B5-4DB7-8071-CAA7CE963479}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="18770" ReadOnly="-1" />
							<Object ID="{27B1EC88-A692-467F-90CB-21D99AC8AA58}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="12336" ReadOnly="-1" />
							<Object ID="{EAC696D1-42B1-4F4D-99B1-C35E93924F13}" Name="SendModelSpecificCommands" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
if gViziaIsDebugOn(2) then debugout "ZIR000.SendModelSpecificCommands(): sending pending model-specific commands at " & now

'Off Delay
if this.ConfigSet_OffDelay = true then
	this.ConfigSet_OffDelay = false
	this.SendCmd_ConfigSet_OffDelay
end if

if this.ConfigGet_OffDelay = true then
	this.ConfigGet_OffDelay = false
	this.SendCmd_ConfigGet_OffDelay
end if
]]>
							</Object>
							<Object ID="{3BEDC0E6-0420-4C4E-A4AA-EB373CD635B6}" Name="ProcessConfigurationCommand" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'The Model_NNNNNN class that inherits from this base class should override this function
'in order to process commands specific to this device manufacturer and model (e.g. configuration parameters)

select case method.parameter
	case 18: 'OffDelay
		oldValue = this.ConfigSet_OffDelay
		this.OffDelay = method.value
		this.ConfigSet_OffDelay = oldValue
	case 22: 'AwakeDuration
		oldValue = this.ConfigSet_AwakeDuration
		this.AwakeDuration = method.value
		this.ConfigSet_AwakeDuration = oldValue
end select
]]>
								<Object ID="{2C0FFC5C-9248-4290-9608-51039DE5556B}" Name="parameter" Flags="0x900" Class="sys://Schema/System/Number" />
								<Object ID="{A45AE07F-D3EE-4ABE-B686-D19EBC598F92}" Name="value" Flags="0x900" Class="sys://Schema/System/Number" />
							</Object>
							<Object ID="{AAE89BB5-664C-48AC-AE89-E64B0DA6ED99}" Name="OffDelay" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="60" />
							<Object ID="{FD8A0EBD-3EA9-42B1-98BC-21B342033DAD}" Name="OnChangeOffDelay" Class="sys://Schema/Scripting/ClassProperty" Property="{AAE89BB5-664C-48AC-AE89-E64B0DA6ED99}" >
<![CDATA[
Script=
'OffDelay is between 1-255
if this.OffDelay > 255 then
	this.OffDelay = 255
end if
if this.OffDelay < 1 then
	this.OffDelay = 1
end if
this.ConfigSet_OffDelay = true
]]>
							</Object>
							<Object ID="{A9FD6EF2-538F-42D5-AAB4-7F803EDA778B}" Name="ConfigSet_OffDelay" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{CB3A95CF-7C79-4848-9B4C-B3127B19EAFC}" Name="SendCmd_ConfigSet_OffDelay" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the config command to set the OffDelay device parameter
parameterNum = 18
numBytes = 1
byte1 = this.OffDelay

command = ">N" & this.parent.NodeID & "SE112,4," & parameterNum & "," & numBytes & "," & byte1
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigSet_OffDelay(): set off delay=" & byte1 & ", on node=" & this.parent.NodeID
]]>
							</Object>
							<Object ID="{61E67832-5C20-41B3-8A9F-59FC47323116}" Name="ConfigGet_OffDelay" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{9A261394-3F41-47E9-BF62-C4F0F99811FD}" Name="SendCmd_ConfigGet_OffDelay" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the configuration command to get the off delay
parameterNum = 18

command = ">N" & this.Parent.NodeID & "SE112,5," & parameterNum
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigGet_OffDelay(): command=" & command
]]>
							</Object>
							<Object ID="{2B6BEC6C-0252-48C4-A09F-38C0F3C00926}" Name="AwakeDuration" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="15" />
							<Object ID="{B09773A8-FBC7-4E9D-B922-857A5BAD8ECD}" Name="OnChangeAwakeDuration" Class="sys://Schema/Scripting/ClassProperty" Property="{2B6BEC6C-0252-48C4-A09F-38C0F3C00926}" >
<![CDATA[
Script=
'AwakeDuration is between 15-45 seconds
if this.AwakeDuration > 45 then
	this.AwakeDuration = 45
end if
if this.AwakeDuration < 15 then
	this.AwakeDuration = 15
end if
this.ConfigSet_AwakeDuration = true
]]>
							</Object>
							<Object ID="{2F07ED09-74CA-466E-A96E-01ACBBE1EDE2}" Name="ConfigSet_AwakeDuration" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{3881B9D3-21F4-4448-B2BD-11828CB1B4B4}" Name="SendCmd_ConfigSet_AwakeDuration" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the config command to set the AwakeDuration device parameter
parameterNum = 22
numBytes = 1
byte1= this.AwakeDuration

command = ">N" & this.Parent.NodeID & "SE112,4," & parameterNum & "," & numBytes & "," & byte1
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigSet_AwakeDuration(): set off delay=" & byte1 & ", on node=" & this.Parent.NodeID
]]>
							</Object>
							<Object ID="{2CCB25A1-B319-45DC-BF0D-C9A89F02E3E8}" Name="ConfigGet_AwakeDuration" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{DC8DE585-A357-4E14-8A54-3F78F77F6FD0}" Name="SendCmd_ConfigGet_AwakeDuration" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the configuration command to get the off delay
parameterNum = 22

command = ">N" & this.Parent.NodeID & "SE112,5," & parameterNum
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigGet_OffDelay(): command=" & command
]]>
							</Object>
							<Object ID="{80BBBCB4-F817-477D-9565-0C2A61953696}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{6544F45B-BF7E-465D-855B-43C3D79D59E1}" Name="Model_HM-FS001" Class="sys://Schema/System/Class" DisplayName="HM-FS001" Description="HomeManageables Flood Sensor" >
							<Object ID="{23D98853-89EC-4559-8547-01A3875E882F}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" DefaultValue="1,2" ReadOnly="-1" />
							<Object ID="{B01ACFB7-4EAE-4EF1-9CA1-5A9EE80DFD1A}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="96" ReadOnly="-1" />
							<Object ID="{29032BCC-A084-4D71-9AF3-C6C2996428F2}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="11" ReadOnly="-1" />
							<Object ID="{5276DDF6-F325-400B-804F-0D523E916F1B}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{DF7018E8-9978-4F06-A8A4-0BF58385D636}" Name="SendModelSpecificCommands" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
if gViziaIsDebugOn(2) then debugout "HM-FS001.SendModelSpecificCommands(): sending pending model-specific commands at " & now
]]>
							</Object>
							<Object ID="{1F35888D-04E2-4A1E-AE47-833A8118A2E4}" Name="ProcessConfigurationCommand" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'The Model_NNNNNN class that inherits from this base class should override this function
'in order to process commands specific to this device manufacturer and model (e.g. configuration parameters)
]]>
								<Object ID="{A3D2FEA4-0874-45A7-BFD9-5A0959BCA314}" Name="parameter" Class="sys://Schema/System/Number" />
								<Object ID="{4B68AED8-51A7-4BAF-A9D9-3D7AC6D439C6}" Name="value" Class="sys://Schema/System/Number" />
							</Object>
							<Object ID="{6C7E9A3A-6BDE-4FB8-9817-9A26D75EC396}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{A37FBE47-DDEC-4F05-B590-F50D5D1B2B74}" Name="Model_HSM100" Class="sys://Schema/System/Class" Description="Homeseer motion, light, and temperature sensor" DisplayName="HSM100" >
							<Object ID="{0A1A12AB-42E7-4037-9325-91E783434C37}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" DefaultValue="1,3,5" ReadOnly="-1" />
							<Object ID="{4C5DD2E3-FAC4-4E45-9790-C8EEDA9434AC}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="30" ReadOnly="-1" />
							<Object ID="{F5433A9F-0223-481C-B9DF-B6D34251D7DB}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="2" ReadOnly="-1" />
							<Object ID="{33D53D89-111C-4F03-A0A9-405D4E3C1437}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{9F18EB20-3CA2-491A-B030-26683D530E1B}" Name="SendModelSpecificCommands" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
if gViziaIsDebugOn(2) then debugout "HSM100.SendModelSpecificCommands(): sending pending model-specific commands at " & now

'SensorMultiInstance Get
if this.SensorMultiInstanceGet = true then
	this.SendCmd_SensorMultiInstanceGet
end if

'Sensitivity
if this.ConfigSet_Sensitivity = true then
	this.ConfigSet_Sensitivity = false
	this.SendCmd_ConfigSet_Sensitivity
end if

if this.ConfigGet_Sensitivity = true then
	this.ConfigGet_Sensitivity = false
	this.SendCmd_ConfigGet_Sensitivity
end if

'OnTime
if this.ConfigSet_OnTime = true then
	this.ConfigSet_OnTime = false
	this.SendCmd_ConfigSet_OnTime
end if

if this.ConfigGet_OnTime = true then
	this.ConfigGet_OnTime = false
	this.SendCmd_ConfigGet_OnTime
end if

'LEDOnOff
if this.ConfigSet_LEDOnOff = true then
	this.ConfigSet_LEDOnOff = false
	this.SendCmd_ConfigSet_LEDOnOff
end if

if this.ConfigGet_LEDOnOff = true then
	this.ConfigGet_LEDOnOff = false
	this.SendCmd_ConfigGet_LEDOnOff
end if

'LightThreshold
if this.ConfigSet_LightThreshold = true then
	this.ConfigSet_LightThreshold = false
	this.SendCmd_ConfigSet_LightThreshold
end if

if this.ConfigGet_LightThreshold = true then
	this.ConfigGet_LightThreshold = false
	this.SendCmd_ConfigGet_LightThreshold
end if

'StayAwake
if this.ConfigSet_StayAwake = true then
	this.ConfigSet_StayAwake = false
	this.SendCmd_ConfigSet_StayAwake
end if

if this.ConfigGet_StayAwake = true then
	this.ConfigGet_StayAwake = false
	this.SendCmd_ConfigGet_StayAwake
end if

'OnValue
if this.ConfigSet_OnValue = true then
	this.ConfigSet_OnValue = false
	this.SendCmd_ConfigSet_OnValue
end if

if this.ConfigGet_OnValue = true then
	this.ConfigGet_OnValue = false
	this.SendCmd_ConfigGet_OnValue
end if
]]>
							</Object>
							<Object ID="{34FAF0B2-32E7-489B-AE18-5FF4E3665E7B}" Name="ProcessConfigurationCommand" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
if gViziaIsDebugOn(2) then debugout "HSM100.ProcessConfigurationCommand(): parameter" & method.parameter & "=" & method.value

select case method.parameter
	case 1: 'Sensitivity
		oldValue = this.ConfigSet_Sensitivity
		this.Sensitivity = method.value
		this.ConfigSet_Sensitivity = oldValue
	case 2: 'OnTime
		oldValue = this.ConfigSet_OnTime
		this.OnTime = method.value
		this.ConfigSet_OnTime = oldValue
	case 3: 'LEDOnOff
		oldValue = this.ConfigSet_LEDOnOff
		this.LEDOnOff = method.value
		this.ConfigSet_LEDOnOff = oldValue
	case 4: 'LightThreshold
		oldValue = this.ConfigSet_LightThreshold
		this.LightThreshold = method.value
		this.ConfigSet_LightThreshold = oldValue
	case 5: 'StayAwake
		oldValue = this.ConfigSet_StayAwake
		this.StayAwake = method.value
		this.ConfigSet_StayAwake = oldValue
	case 6: 'OnValue
		oldValue = this.ConfigSet_OnValue
		this.OnValue = method.value	
		this.ConfigSet_OnValue = oldValue
end select
]]>
								<Object ID="{CADBB6F7-34C0-4D43-86D2-DC4EEAA5ACFC}" Name="parameter" Flags="0x900" Class="sys://Schema/System/Number" />
								<Object ID="{B27B24F1-0E3D-454B-9B6E-5AAC627C907E}" Name="value" Flags="0x900" Class="sys://Schema/System/Number" />
							</Object>
							<Object ID="{78A1322A-AF1B-4E20-B198-52FCD18FE9C9}" Name="SensorMultiInstanceGet" Flags="0xB00" Class="sys://Schema/System/Boolean" DisplayName="Read Sensor" DefaultValue="-1" Bindable="-1" Description="Use this to request the sensor multilevel report from the device" />
							<Object ID="{AA74516A-3491-4F16-BBDB-14068023DD35}" Name="SendCmd_SensorMultiInstanceGet" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the SensorMultilevel ENCAP GET commands to get the temp and luminance reports from the sensor
iDelay = 1

'MULTI_INSTANCE GET LUMINANCE (instance 2)
command = ">N" & this.Parent.NodeID & "SE96,6,2,49,4"
'this.Parent.Parent.Parent.SendCommand command, true, 995
system.addTimer iDelay, "on error resume next: this.Parent.Parent.Parent.SendCommand '" & command & "', true, 995", 1, this.Parent.NodeID & "__" & command
if gViziaIsDebugOn(1) then debugout "SendCmd_SensorMultilevelGet(): MULTI_INSTANCE ENCAP GET LUMINANCE from node=" & this.Parent.NodeID

'MULTI_INSTANCE GET TEMP (instance 3)
command = ">N" & this.Parent.NodeID & "SE96,6,3,49,4"
'this.Parent.Parent.Parent.SendCommand command, true, 995
system.addTimer iDelay*2, "on error resume next: this.Parent.Parent.Parent.SendCommand '" & command & "', true, 995", 1, this.Parent.NodeID & "__" & command
if gViziaIsDebugOn(1) then debugout "SendCmd_SensorMultilevelGet(): MULTI_INSTANCE ENCAP GET TEMPERATURE from node=" & this.Parent.NodeID
]]>
							</Object>
							<Object ID="{18993123-FADF-4C48-9376-B504CDDA1044}" Name="Sensitivity" Flags="0x900" Class="sys://Schema/System/Number" Description="The amount of motion required for the sensor to detect motion." DefaultValue="100" />
							<Object ID="{A496DA1A-29D4-49D5-847B-B0D05A02DC3A}" Name="OnChangeSensitivity" Class="sys://Schema/Scripting/ClassProperty" Property="{18993123-FADF-4C48-9376-B504CDDA1044}" >
<![CDATA[
Script=
'Sensitivity is between 10-200
if this.Sensitivity > 200 then
	this.Sensitivity = 200
end if
if this.Sensitivity < 10 then
	this.Sensitivity = 10
end if
this.ConfigSet_Sensitivity = true
]]>
							</Object>
							<Object ID="{B87ED7AE-8EAA-4A67-9E7F-D09725A4C54C}" Name="ConfigSet_Sensitivity" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{82AB20B5-A869-4918-B9B2-1286605249D3}" Name="SendCmd_ConfigSet_Sensitivity" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the config command to set the Sensitivity device parameter
parameterNum = 1
numBytes = 1
byte1 = this.Sensitivity

command = ">N" & this.Parent.NodeID & "SE112,4," & parameterNum & "," & numBytes & "," & byte1
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigSet_Sensitivity(): CONFIGURATION SET value=" & byte1 & ", on node=" & this.Parent.NodeID
]]>
							</Object>
							<Object ID="{DEEB7704-6B88-4A22-B7EF-0EDC5C7D697E}" Name="ConfigGet_Sensitivity" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{4ED33A60-43DB-4D82-8C3A-268B908ACA8E}" Name="SendCmd_ConfigGet_Sensitivity" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the configuration command to get the Sensitivity
parameterNum = 1

command = ">N" & this.Parent.NodeID & "SE112,5," & parameterNum
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigGet_Sensitivity(): CONFIGURATION GET command=" & command
]]>
							</Object>
							<Object ID="{CCD069D9-BB41-4D43-8EC6-4C01B0E1F6F4}" Name="OnTime" Flags="0x900" Class="sys://Schema/System/Number" Description="The number of minutes the lights stay on after motion has been detected." DefaultValue="20" />
							<Object ID="{BD43470D-EB90-4090-8154-1265CAA6195C}" Name="OnChangeOnTime" Class="sys://Schema/Scripting/ClassProperty" Property="{CCD069D9-BB41-4D43-8EC6-4C01B0E1F6F4}" >
<![CDATA[
Script=
'OnTime can be between 0-255
'0 is a special case, which results in a BASIC SET command whenever motion is detected
if this.OnTime > 255 then
	this.OnTime = 255
end if
this.ConfigSet_OnTime = true
]]>
							</Object>
							<Object ID="{A4B7E72C-0966-4E3E-B8EF-6411EF398032}" Name="ConfigSet_OnTime" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{0D0A246F-D257-428D-A578-625304F757C1}" Name="SendCmd_ConfigSet_OnTime" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the config command to set the OnTime device parameter
parameterNum = 2
numBytes = 1
byte1 = this.OnTime

command = ">N" & this.Parent.NodeID & "SE112,4," & parameterNum & "," & numBytes & "," & byte1
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigSet_OnTime(): CONFIGURATION SET value=" & byte1 & ", on node=" & this.Parent.NodeID
]]>
							</Object>
							<Object ID="{B3336393-82EF-491C-AAF5-0108F0B8FADB}" Name="ConfigGet_OnTime" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{E09576CE-8977-4BBC-9A4C-763F9A445673}" Name="SendCmd_ConfigGet_OnTime" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the configuration command to get the OnTime
parameterNum = 2

command = ">N" & this.Parent.NodeID & "SE112,5," & parameterNum
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigGet_OnTime(): CONFIGURATION GET command=" & command
]]>
							</Object>
							<Object ID="{EF17006E-2454-498C-B29F-7D285CE9083A}" Name="LEDOnOff" Flags="0x900" Class="sys://Schema/System/Number" />
							<Object ID="{DF39075E-675B-477B-921C-FD6BCC62594C}" Name="OnChangeLEDOnOff" Class="sys://Schema/Scripting/ClassProperty" Property="{EF17006E-2454-498C-B29F-7D285CE9083A}" >
<![CDATA[
Script=
'The paremeter value can be 0 or 255
if this.LEDOnOff = 0 then
	this.LEDOnOff = 0
else
	this.LEDOnOff = 255
end if
this.ConfigSet_LEDOnOff = true
]]>
							</Object>
							<Object ID="{17E026A1-198D-4D10-8BAF-3D7050A11FDF}" Name="ConfigSet_LEDOnOff" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{0B898DD8-345B-4D7A-A1EC-21AF91880484}" Name="SendCmd_ConfigSet_LEDOnOff" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the config command to set the LEDOnOff device parameter
parameterNum = 3
numBytes = 1
byte1 = this.LEDOnOff

command = ">N" & this.Parent.NodeID & "SE112,4," & parameterNum & "," & numBytes & "," & byte1
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigSet_LEDOnOff(): set LEDOnOff=" & byte1 & ", on node=" & this.Parent.NodeID
]]>
							</Object>
							<Object ID="{CF55DEF5-859C-425C-A1FE-F342658B19B1}" Name="ConfigGet_LEDOnOff" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{4A45E11B-C5C4-4FB6-A209-A0697C3210C5}" Name="SendCmd_ConfigGet_LEDOnOff" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the configuration command to get the LEDOnOff parameter
parameterNum = 3

command = ">N" & this.Parent.NodeID & "SE112,5," & parameterNum
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigGet_LEDOnOff(): CONFIGURATION GET command=" & command
]]>
							</Object>
							<Object ID="{75CFF8D8-DD5D-4BE3-BBEC-FCDE4AAC1AFD}" Name="LightThreshold" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="10" />
							<Object ID="{D4204BFC-7A14-4194-969C-6CBA316E88C3}" Name="OnChangeLightThreshold" Class="sys://Schema/Scripting/ClassProperty" Property="{75CFF8D8-DD5D-4BE3-BBEC-FCDE4AAC1AFD}" >
<![CDATA[
Script=
'The paremeter value can be 0 or 100
if this.LightThreshold > 100 then
	this.LightThreshold = 100
end if
this.ConfigSet_LightThreshold = true
]]>
							</Object>
							<Object ID="{74B4B78B-AAD4-406D-98B4-7E490993591E}" Name="ConfigSet_LightThreshold" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{5EE1B3C8-39FF-4A83-B00D-E3222A1DB34D}" Name="SendCmd_ConfigSet_LightThreshold" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the config command to set the LightThreshold device parameter
parameterNum = 4
numBytes = 1
byte1 = this.LightThreshold

command = ">N" & this.Parent.NodeID & "SE112,4," & parameterNum & "," & numBytes & "," & byte1
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigSet_LightThreshold(): set LightThreshold=" & byte1 & ", on node=" & this.Parent.NodeID
]]>
							</Object>
							<Object ID="{08BA1100-35E5-4AE4-B337-F76BCE50FB39}" Name="ConfigGet_LightThreshold" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{A2B98050-C744-4F1F-A805-E1C5E98B065C}" Name="SendCmd_ConfigGet_LightThreshold" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the configuration command to get the LightThreshold parameter
parameterNum = 4

command = ">N" & this.Parent.NodeID & "SE112,5," & parameterNum
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigGet_LightThreshold(): CONFIGURATION GET command=" & command
]]>
							</Object>
							<Object ID="{F33D0024-00EA-403C-AA07-5122111805EE}" Name="StayAwake" Flags="0x900" Class="sys://Schema/System/Number" />
							<Object ID="{D25CD72A-8FD0-4821-BB57-FB3623D54C8A}" Name="OnChangeStayAwake" Class="sys://Schema/Scripting/ClassProperty" Property="{F33D0024-00EA-403C-AA07-5122111805EE}" >
<![CDATA[
Script=
'The paremeter value can be 0 to 255
if this.StayAwake > 255 then
	this.StayAwake = 255
end if
this.ConfigSet_StayAwake = true
]]>
							</Object>
							<Object ID="{49EFAF92-C53B-4740-B331-9DFD03DE5BCB}" Name="ConfigSet_StayAwake" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{6B46FFA4-78F5-4537-AD09-4EF0F3C399FC}" Name="SendCmd_ConfigSet_StayAwake" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the config command to set the StayAwake device parameter
parameterNum = 5
numBytes = 1
byte1 = this.StayAwake

command = ">N" & this.Parent.NodeID & "SE112,4," & parameterNum & "," & numBytes & "," & byte1
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigSet_StayAwake(): set StayAwake=" & byte1 & ", on node=" & this.Parent.NodeID
]]>
							</Object>
							<Object ID="{BAFC24EE-0734-4D24-BA72-564C950E5160}" Name="ConfigGet_StayAwake" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{89B15783-63C9-41F2-B73F-47845FEAD634}" Name="SendCmd_ConfigGet_StayAwake" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the configuration command to get the StayAwake parameter
parameterNum = 5

command = ">N" & this.Parent.NodeID & "SE112,5," & parameterNum
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigGet_StayAwake(): CONFIGURATION GET command=" & command
]]>
							</Object>
							<Object ID="{1E770A3A-7B1D-4B37-B624-2186B6447F8C}" Name="OnValue" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="255" DisplayName="OnValue" Description="Value of 1-100 sets the dim level percent. 255 turns on.  Don&apos;t use 0." />
							<Object ID="{BD351BCF-092D-4A73-B708-7EF7C748CE49}" Name="OnChangeOnValue" Class="sys://Schema/Scripting/ClassProperty" Property="{1E770A3A-7B1D-4B37-B624-2186B6447F8C}" >
<![CDATA[
Script=
'The parameter value can be 1 to 255
if this.OnValue > 100 then
	this.OnValue = 255
end if
if this.OnValue = 0 then
	this.OnValue = 1
end if
this.ConfigSet_OnValue = true
]]>
							</Object>
							<Object ID="{B619C489-9031-489B-9820-90847E1BB612}" Name="ConfigSet_OnValue" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{F5036DAB-11D0-48C9-8CFB-E57C042F3596}" Name="SendCmd_ConfigSet_OnValue" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the config command to set the OnValue device parameter
parameterNum = 4
numBytes = 1
byte1 = this.OnValue

command = ">N" & this.Parent.NodeID & "SE112,4," & parameterNum & "," & numBytes & "," & byte1
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigSet_OnValue(): set OnValue=" & byte1 & ", on node=" & this.Parent.NodeID
]]>
							</Object>
							<Object ID="{C8211D2F-00E9-42D4-948B-D43ABA74A34F}" Name="ConfigGet_OnValue" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{6371B4A2-E494-492A-AD68-7BC74F811D98}" Name="SendCmd_ConfigGet_OnValue" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the configuration command to get the OnValue parameter
parameterNum = 6

command = ">N" & this.Parent.NodeID & "SE112,5," & parameterNum
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigGet_OnValue(): CONFIGURATION GET command=" & command
]]>
							</Object>
							<Object ID="{8A20F806-7244-4411-9CB6-434CE231A9D0}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{312B97C2-CB25-4BAA-92A7-CFAEE0E12431}" Name="Model_HRDS1" Class="sys://Schema/System/Class" DisplayName="HRDS1" Description="Hawking Door/Window Sensor" >
							<Object ID="{2E57B735-B572-4CEA-BFB9-A0D43DC1A3F3}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{39EFA53E-2DCD-4E2E-B283-B1A55AAF326F}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="96" ReadOnly="-1" />
							<Object ID="{3E491655-9AFB-4D75-BBE0-C4F001FBA150}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="514" ReadOnly="-1" />
							<Object ID="{D6B47B8A-14EC-49DA-8714-92AF8063717A}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{A48766C9-661A-4DF1-BC84-A1FB7AFC4CCE}" Name="SendModelSpecificCommands" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
if gViziaIsDebugOn(2) then debugout "HRDS1.SendModelSpecificCommands(): sending pending model-specific commands at " & now

if this.ConfigSet_OffDelay = true then
	this.ConfigSet_OffDelay = false
	this.SendCmd_ConfigSet_OffDelay
end if

if this.ConfigGet_OffDelay = true then
	this.ConfigGet_OffDelay = false
	this.SendCmd_ConfigGet_OffDelay
end if
]]>
							</Object>
							<Object ID="{50CA2528-7D83-4A63-8B5B-FFF6EF7164C7}" Name="ProcessConfigurationCommand" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'The Model_NNNNNN class that inherits from this base class should override this function
'in order to process commands specific to this device manufacturer and model (e.g. configuration parameters)

select case method.parameter
	case 2: 'OffDelay
		oldValue = this.ConfigSet_OffDelay
		this.OffDelay = method.value
		this.ConfigSet_OffDelay = oldValue
end select
]]>
								<Object ID="{E9235021-D9DF-49EF-80EB-4A0B73468475}" Name="parameter" Flags="0x900" Class="sys://Schema/System/Number" />
								<Object ID="{E68317C9-E07A-40A0-83DD-B04005E39D47}" Name="value" Flags="0x900" Class="sys://Schema/System/Number" />
							</Object>
							<Object ID="{C22F3245-4ABB-436E-B694-C44DB7BEEAF0}" Name="OffDelay" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="60" />
							<Object ID="{5BDC796F-4124-4B06-9EBA-941F9160102F}" Name="OnChangeOffDelay" Class="sys://Schema/Scripting/ClassProperty" Property="{C22F3245-4ABB-436E-B694-C44DB7BEEAF0}" >
<![CDATA[
Script=
'OffDelay is between 1-127
if this.OffDelay > 127 then
	this.OffDelay = 127
end if
if this.OffDelay < 1 then
	this.OffDelay = 1
end if
this.ConfigSet_OffDelay = true
]]>
							</Object>
							<Object ID="{B8EAD215-A9A4-4130-8FD6-99905344346B}" Name="ConfigSet_OffDelay" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{296C049A-BAAA-43C1-BFD8-08FB7836DC63}" Name="SendCmd_ConfigSet_OffDelay" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the config command to set the OffDelay device parameter
parameterNum = 2
numBytes = 1
byte1 = this.OffDelay

command = ">N" & this.parent.NodeID & "SE112,4," & parameterNum & "," & numBytes & "," & byte1
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigSet_OffDelay(): set off delay=" & byte1 & ", on node=" & this.parent.NodeID
]]>
							</Object>
							<Object ID="{1850449B-C6FC-43D3-8E35-6473E0A3F106}" Name="ConfigGet_OffDelay" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{E3C8FAD2-8C91-40EA-A53C-B866D24DC60C}" Name="SendCmd_ConfigGet_OffDelay" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the configuration command to get the off delay
parameterNum = 2

command = ">N" & this.Parent.NodeID & "SE112,5," & parameterNum
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigGet_OffDelay(): command=" & command
]]>
							</Object>
							<Object ID="{F25A9D77-E0CE-448B-A671-F25B924DAC15}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{DECFC483-DB53-491C-938B-001C69C4106E}" Name="Model_SM103" Class="sys://Schema/System/Class" DisplayName="SM103" Description="Everspring Door/Window Sensor" >
							<Object ID="{B614A473-A98B-4D49-B2E8-E3F819B3E9E9}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{D164C0A6-88DD-4F58-8730-2D85259D9D78}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="96" ReadOnly="-1" />
							<Object ID="{F9576FFF-D29B-4D35-B79F-C567F368FF91}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="2" ReadOnly="-1" />
							<Object ID="{602F8ED3-0926-4E71-96C6-98C8BC1E9044}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{1420F002-5BCC-4D0A-992D-D9419C316642}" Name="SendModelSpecificCommands" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
if gViziaIsDebugOn(2) then debugout "SM103.SendModelSpecificCommands(): sending pending model-specific commands at " & now

if this.ConfigSet_OffDelay = true then
	this.ConfigSet_OffDelay = false
	this.SendCmd_ConfigSet_OffDelay
end if

if this.ConfigGet_OffDelay = true then
	this.ConfigGet_OffDelay = false
	this.SendCmd_ConfigGet_OffDelay
end if
]]>
							</Object>
							<Object ID="{92A24474-0F90-4AF7-BE15-EC19B72037E3}" Name="ProcessConfigurationCommand" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'The Model_NNNNNN class that inherits from this base class should override this function
'in order to process commands specific to this device manufacturer and model (e.g. configuration parameters)

select case method.parameter
	case 2: 'OffDelay
		oldValue = this.ConfigSet_OffDelay
		this.OffDelay = method.value
		this.ConfigSet_OffDelay = oldValue
end select
]]>
								<Object ID="{04C4A9AE-3D3E-4BFD-B742-1CFA71B3FF3C}" Name="parameter" Flags="0x900" Class="sys://Schema/System/Number" />
								<Object ID="{C566E11C-C81D-4C21-B4E9-6073CFB68AAF}" Name="value" Flags="0x900" Class="sys://Schema/System/Number" />
							</Object>
							<Object ID="{DBE72689-DFCA-4B0A-A715-D329419C2E1D}" Name="OffDelay" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="60" />
							<Object ID="{E8D52E86-B383-46C2-B85B-0292C3833440}" Name="OnChangeOffDelay" Class="sys://Schema/Scripting/ClassProperty" Property="{DBE72689-DFCA-4B0A-A715-D329419C2E1D}" >
<![CDATA[
Script=
'OffDelay is between 1-127
if this.OffDelay > 127 then
	this.OffDelay = 127
end if
if this.OffDelay < 1 then
	this.OffDelay = 1
end if
this.ConfigSet_OffDelay = true
]]>
							</Object>
							<Object ID="{AD230D32-628B-4D4C-A600-C4AB2276FC59}" Name="ConfigSet_OffDelay" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{E81F27ED-F802-4777-B9C0-FE345D194644}" Name="SendCmd_ConfigSet_OffDelay" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the config command to set the OffDelay device parameter
parameterNum = 2
numBytes = 1
byte1 = this.OffDelay

command = ">N" & this.parent.NodeID & "SE112,4," & parameterNum & "," & numBytes & "," & byte1
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigSet_OffDelay(): set off delay=" & byte1 & ", on node=" & this.parent.NodeID
]]>
							</Object>
							<Object ID="{222A7FA4-8D86-4249-8B12-D41099CDB3C9}" Name="ConfigGet_OffDelay" Flags="0x900" Class="sys://Schema/System/Boolean" />
							<Object ID="{BFCE3BE9-44BF-43DC-BECA-B08F78BB20D4}" Name="SendCmd_ConfigGet_OffDelay" Class="sys://Schema/Scripting/ClassFunction" >
<![CDATA[
Script=
'Send the configuration command to get the off delay
parameterNum = 2

command = ">N" & this.Parent.NodeID & "SE112,5," & parameterNum
this.Parent.Parent.Parent.SendCommand command, true, 995

if gViziaIsDebugOn(2) then debugout "SendCmd_ConfigGet_OffDelay(): command=" & command
]]>
							</Object>
							<Object ID="{59F10F0C-49B2-41C1-BD51-A14743CD99B9}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{A45B6359-F5D7-4524-90F8-A77B9504B4AD}" Name="Model_HA03" Class="sys://Schema/System/Class" Description="Intermatic HA03 Lamp Module" DisplayName="HA03" >
							<Object ID="{904AC31E-6388-4981-89A2-83003212A48F}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
							<Object ID="{5561208A-CFA7-4633-A5F2-FDD275DA928A}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="5" ReadOnly="-1" />
							<Object ID="{D12B4A41-2D12-46D5-B731-250D06FF3089}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="3" ReadOnly="-1" />
							<Object ID="{B39E029B-8284-4192-AD1B-EBBBB1CB8A9D}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="3" ReadOnly="-1" />
							<Object ID="{A78A7996-863B-4C31-8C10-48A63A7E2C30}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{84E7A854-7E6B-4CF6-A363-B638AF2F10BA}" Name="Model_TZMT400" Class="sys://Schema/System/Class" Description="Schlage TZMT400 Thermostat" DisplayName="TZMT400" >
							<Object ID="{B8A2621E-341B-4205-8AC3-C767EDE1FB3E}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
							<Object ID="{1FECF8E4-84E0-457E-9DE5-8D4777A4C903}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="919" ReadOnly="-1" />
							<Object ID="{5ECF0585-89A8-4863-A628-46BF564A1B8B}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="919" ReadOnly="-1" />
							<Object ID="{9848FB10-8394-473F-B0E1-A1F1067482FF}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="919" ReadOnly="-1" />
							<Object ID="{178BC07E-3845-4F85-9F29-F5897FB24F6A}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{E645B2EA-EE53-4B42-98DE-9CCEA96386AF}" Name="Model_VRS05-1LX" Class="sys://Schema/System/Class" Description="Leviton VRS05-1LX Switch" DisplayName="VRS05-1LX" >
							<Object ID="{EA199A9A-AF78-4760-8058-39BF9E32609E}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
							<Object ID="{1C1EBC2D-48B7-499D-8A9F-77B5A81184A5}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="29" ReadOnly="-1" />
							<Object ID="{FE28542C-4B64-488A-A35B-5E4B70E5AC8B}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="3841" ReadOnly="-1" />
							<Object ID="{FAAA3F59-F7E7-42E3-9201-33D79C50467A}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="521" ReadOnly="-1" />
							<Object ID="{014150E8-2DEA-495B-8A44-10833DBDD167}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{62C16737-B564-4656-A649-F9F4A9C0AA44}" Name="Model_VRP03-1LW" Class="sys://Schema/System/Class" Description="Leviton VRP03-1LW Plug In Lamp Module" DisplayName="VRP03-1LW" >
							<Object ID="{28AF5C39-B5D9-4789-9BA6-FC9EC168F9CF}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
							<Object ID="{F592BFF7-2E24-467F-B3C7-F6E800BB6D40}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="29" ReadOnly="-1" />
							<Object ID="{4608BB0C-7BCC-4308-8257-C0689A5C0092}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="513" ReadOnly="-1" />
							<Object ID="{F3091686-34EB-4633-899E-E7F62A1373DA}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="518" ReadOnly="-1" />
							<Object ID="{D8099B1E-ED12-41CA-BA4C-835223095DFC}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{A5B57E27-4C6C-45D0-89D6-2C4A9F05D9D3}" Name="Model_VRI06-1LX" Class="sys://Schema/System/Class" Description="Leviton VRI06-1LX Dimmer" DisplayName="VRI06-1LX" >
							<Object ID="{DDADAC77-8673-4C05-9B9A-B9B888B65D8D}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
							<Object ID="{48E0872B-E0BC-458D-A8AC-29B6631E441E}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="29" ReadOnly="-1" />
							<Object ID="{7C3ADFB6-CD24-46BB-9A8E-BB1D0C142AB2}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="1025" ReadOnly="-1" />
							<Object ID="{2A40A04A-0EE3-4EFE-9890-2D9E4E72331B}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="521" ReadOnly="-1" />
							<Object ID="{207B9EDE-34EA-4AE0-A30D-F42267A56E61}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{013CCBA6-A13D-44AD-86BC-EE2353A72BFD}" Name="Model_99100" Class="sys://Schema/System/Class" Description="Kwikset 99100-xx Deadbolt" DisplayName="99100" >
							<Object ID="{6C2BC485-B895-4EA5-BC7B-14D335555B1A}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
							<Object ID="{17487A60-97B5-4253-9652-16CC49A40C04}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="144" ReadOnly="-1" />
							<Object ID="{19452D57-B4EF-45CF-949C-27BC04359006}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{5E2F8E23-3EC1-45E4-BA28-D30988C38071}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{3658E25D-DA37-48FB-964F-BDFD0E5BD28F}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{538C3C6A-426A-4485-AE18-70A7D5228B88}" Name="Model_VRS15-1LX" Class="sys://Schema/System/Class" Description="Leviton VRS15-1LX 15A Switch" DisplayName="VRS15-1LX" >
							<Object ID="{834B0E02-7C93-478B-9AB1-8F3A9627DE38}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
							<Object ID="{E8322A54-E381-4FD1-8137-3DFC744143AF}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="29" ReadOnly="-1" />
							<Object ID="{E77B5B73-5969-4D55-ADFB-56FAD4D18932}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="769" ReadOnly="-1" />
							<Object ID="{EC530646-7F76-4AE8-AE76-5BE79A6D1DD8}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="521" ReadOnly="-1" />
							<Object ID="{1D902B64-76C0-434D-A5EB-CF738CB2611D}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{CFFFE665-F6BD-4424-A2F3-8488C4B9C0D0}" Name="Model_VRF01-1LX" Class="sys://Schema/System/Class" Description="Leviton VRF01-1LX 1.5A Fan Speed Controller" DisplayName="VRF01-1LX" >
							<Object ID="{C3A3CF06-83E0-49BB-9FC0-BEC8E75D371F}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
							<Object ID="{51C2960D-61AE-44F8-9728-BE8C481C78F4}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="29" ReadOnly="-1" />
							<Object ID="{E10C8B8F-A1DD-4A14-89D0-594A3188DD0B}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="4097" ReadOnly="-1" />
							<Object ID="{131E799E-F6B2-47E9-9A67-260D0CEA0F97}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="521" ReadOnly="-1" />
							<Object ID="{EE4D5009-00FD-4296-B330-115D4BD6D8C0}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{EEB09635-7133-4CB0-8034-AFC9DA5FD205}" Name="Model_45605" Class="sys://Schema/System/Class" Description="GE 45605 duplex receptacle." DisplayName="45605" >
							<Object ID="{622C417D-CE50-49CA-8514-38F11C22FD43}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
							<Object ID="{5CF4C5E5-02E7-4912-A773-7D9F7D8B0658}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="99" ReadOnly="-1" />
							<Object ID="{6879CAAB-0732-42F3-A8B2-2D2E5BC7DBE5}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="21074" ReadOnly="-1" />
							<Object ID="{D36C1755-422A-4A4D-9256-5980AB04861B}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="13616" ReadOnly="-1" />
							<Object ID="{B2102CF3-6C9B-4641-992E-B07BF67EF204}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{5459C3AB-8EB1-486A-835E-F373C17EB8E4}" Name="Model_TZEMT400" Class="sys://Schema/System/Class" Description="Trane TZEMT400 Thermostat" DisplayName="TZEMT400" >
							<Object ID="{769A7D92-981E-46D9-9CAC-365FA4F8AD2E}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
							<Object ID="{CC45A78B-DE39-4EE7-9EB3-9021DD42FA38}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="139" />
							<Object ID="{C0F92C67-586B-42B9-BA7C-2F03D939E8A3}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="21586" ReadOnly="-1" />
							<Object ID="{E735BB87-4A8C-4763-A24E-A0B664A29900}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="21553" ReadOnly="-1" />
							<Object ID="{AF606299-032C-484C-BF39-1EBDDCB8831F}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{391C25B2-B33F-45C7-9AD4-EEE1580D1612}" Name="Model_VRCZ4-M0" Class="sys://Schema/System/Class" Description="Leviton VRCZ04 4 Zone Controller" DisplayName="VRCZ04-M0" >
							<Object ID="{8FC06B23-71E6-4686-A290-697B79EFD739}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
							<Object ID="{D5754603-A387-4CB4-B885-508F1FA499E3}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="29" ReadOnly="-1" />
							<Object ID="{706463D3-0806-4A1B-84DC-0A725808598C}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="1794" ReadOnly="-1" />
							<Object ID="{B534C807-2030-48A8-9BAE-3A7616E58D09}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="609" ReadOnly="-1" />
							<Object ID="{C1E1693D-ACE2-41DE-B46B-2F56D9C4429B}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
						<Object ID="{B9B29BE2-521A-434B-BD3B-D6E30721B43C}" Name="Model_VRCZ4-MR" Class="sys://Schema/System/Class" Description="Leviton VRCZ04 4 Zone Controller with Switch" DisplayName="VRCZ04-MR" >
							<Object ID="{CF11A50A-FEBA-46EB-8087-46E65C8EB276}" Name="Capabilities" Flags="0x900" Class="sys://Schema/System/Text" ReadOnly="-1" />
							<Object ID="{FCA67037-4568-456D-95D9-041B893C4597}" Name="CodeManufacturer" Flags="0x900" Class="sys://Schema/System/MultiValue" Filter="{E2757022-ABD7-4180-AC22-CCFA3DF6FB96}" DefaultValue="29" ReadOnly="-1" />
							<Object ID="{C42B21EF-DC1D-44A6-A51E-C4E71310282E}" Name="CodeProductType" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="4610" ReadOnly="-1" />
							<Object ID="{6D3B7827-11B0-4F90-89C7-93E63279A7B6}" Name="CodeProductID" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="579" ReadOnly="-1" />
							<Object ID="{58BF6803-8F7C-4754-B86D-D11070C7359F}" Class="sys://Schema/System/SuperClass" LinkObject="{EB7F447C-3DDE-43DC-8F94-9D8D3F661134}" />
						</Object>
					</Object>
					<Object ID="{762DC62C-8C1E-42CF-8A48-BD6B5F52157D}" Name="Templates" Flags="0x120000" Class="sys://Schema/System/TemplateFolder" />
					<Object ID="{6B57BBC3-B22F-4D96-A81D-0F4A16D2F467}" Name="GlobalScripts" Flags="0x120000" Class="sys://Schema/Scripting/GlobalScriptFolder" >
						<Object ID="{551B3766-D4C1-4F8D-AF61-82F12016C51C}" Name="Supported_Sensors" Class="sys://Schema/Scripting/Global" >
<![CDATA[
Script=
'Supported Sensor Devices
'HM-TS001 - HomeManageables Temperature/Humidity Sensor
'HM-DW001 - HomeManageables Door/Window Sensor
'HM-FS001 - HomeManageables Flood Sensor (no longer produced by manufacturer)
'ZIR000 - ACT Motion Sensor
'HSM100 - Homeseer motion, light, and temperature sensor
'HRDS1 - Hawking Door/Window Sensor (same functionality as HM-DW001)
'SM103 - Everspring Door/Window Sensor (same functionality as HM-DW001)
]]>
						</Object>
					</Object>
					<Object ID="{6C157188-A478-4265-8D2E-1CA8D353BB62}" Name="Logic" Flags="0x120000" Class="sys://Schema/Logic/RuleFolder" />
					<Object ID="{22E771AF-5B77-4CA5-9E80-811E9B8C1FB6}" Name="Variables" Flags="0x120000" Class="sys://Schema/System/VariableFolder" />
					<Object ID="{F69B4115-069C-4338-BB54-F26890BABCE4}" Name="Timers" Flags="0x120000" Class="sys://Schema/Timers/TimerFolder" />
					<Object ID="{B1608FC4-9F69-475C-9298-3B7E1C012C40}" Name="Macros" Flags="0x120000" Class="sys://Schema/System/MacroHolder" />
				</Object>
				<Object ID="{7A5D86FE-2F5F-413B-BFF9-BDE9C02DAB33}" Name="SensorTypes" Class="sys://Schema/System/Module" >
					<Object ID="{32F5638C-7359-4C54-85F3-A856E3E868FD}" Name="Classes" Flags="0x120000" Class="sys://Schema/System/ClassFolder" >
						<Object ID="{30C016B0-860F-432E-BF74-538020F90F76}" Name="SensorType" Class="sys://Schema/System/Class" Virtual="-1" >
							<Object ID="{32C54930-5EF1-4456-96AF-4783AEA82B74}" Name="Capability" Flags="0x900" Class="sys://Schema/System/Text" DefaultValue="0" Browsable="0" ReadOnly="-1" />
							<Object ID="{66F4E43D-726E-4BF6-9A2F-89B6B0EC544B}" Name="Binding" Class="sys://Schema/System/SuperClass" LinkObject="{65311CA4-A02B-41D5-B8C0-156A1325BA6A}" />
						</Object>
						<Object ID="{C999A94D-AE84-4067-9BDB-1F220ECACC13}" Name="SensorType_Binary" Class="sys://Schema/System/Class" >
							<Object ID="{DD3AB766-6C6A-44B4-8208-89671D2A100D}" Class="sys://Schema/System/SuperClass" LinkObject="{7A709084-31E7-43B5-B252-89C29FD21F16}" />
							<Object ID="{0D0A02D6-62D3-4753-9C5F-6E73320F630F}" Name="Capability" Flags="0x900" Class="sys://Schema/System/Text" DefaultValue="1" ReadOnly="-1" />
							<Object ID="{72542298-22F2-4212-9BB6-03000639A0B6}" Class="sys://Schema/System/SuperClass" LinkObject="{30C016B0-860F-432E-BF74-538020F90F76}" />
						</Object>
						<Object ID="{6651C4F2-B1A8-4323-A22F-1DB2B6355DF4}" Name="SensorType_Alarm" Class="sys://Schema/System/Class" Icon="" >
							<Object ID="{457C4230-F427-4B63-94CA-37779F3E8F19}" Name="Capability" Flags="0x900" Class="sys://Schema/System/Text" DefaultValue="2" ReadOnly="-1" />
							<Object ID="{E9C182F1-4961-4238-B652-F7DDD67C511D}" Name="SensorAlarm" Flags="0xB00" Class="sys://Schema/System/Boolean" ReadOnly="-1" Bindable="-1" />
							<Object ID="{F2AA1702-37D2-4A2F-A13D-C72346B97AE1}" Name="SensorAlarmType" Flags="0xB00" Class="sys://Schema/System/Number" Bindable="-1" />
							<Object ID="{C789F4B7-26F6-4DA6-8FB2-CC003CD2C769}" Name="SensorAlarmLevel" Flags="0xB00" Class="sys://Schema/System/Number" Bindable="-1" />
							<Object ID="{D0F09753-7B26-40D3-B7D0-6ABBCD1BA06F}" Name="LastSensorAlarmTime" Flags="0xB00" Class="sys://Schema/System/DateTime" DefaultValue="1/1/2005 4:16:49 PM" ReadOnly="-1" Bindable="-1" AutoSet="0" />
							<Object ID="{D42150FA-AA14-4CB6-AFBA-1E1204DBFB10}" Name="LastSensorAlarmClearTime" Flags="0xB00" Class="sys://Schema/System/DateTime" DefaultValue="1/8/2011 4:34:10 PM" ReadOnly="-1" Bindable="-1" AutoSet="0" />
							<Object ID="{9D6FC100-4EBB-4DD1-9BC4-9908B2E3090C}" Class="sys://Schema/System/SuperClass" LinkObject="{30C016B0-860F-432E-BF74-538020F90F76}" />
						</Object>
						<Object ID="{525FF8D6-E0E5-4276-968A-6FFD0D68DA25}" Name="SensorType_Temperature" Class="sys://Schema/System/Class" >
							<Object ID="{6F5C6925-847D-4C61-B6B2-73AB94E10E23}" Class="sys://Schema/System/SuperClass" LinkObject="{65C7B5C2-153D-4711-BAD7-D334FDB12338}" />
							<Object ID="{C1D759FC-690E-46B4-9106-9E12D258D133}" Name="Capability" Flags="0x900" Class="sys://Schema/System/Number" DefaultValue="3" ReadOnly="-1" />
							<Object ID="{7D543EA2-CEC0-44A1-853E-289FBABFA01A}" Class="sys://Schema/System/SuperClass" LinkObject="{30C016B0-860F-432E-BF74-538020F90F76}" />
						</Object>
						<Object ID="{58EE30BD-7C6C-4611-8632-28AF285D59BC}" Name="SensorType_Humidity" Class="sys://Schema/System/Class" >
							<Object ID="{309F5916-D235-4C03-8E09-99F4E695FB93}" Class="sys://Schema/System/SuperClass" LinkObject="{E8D39E6C-8B3E-49F2-867B-FEF151C186D5}" />
							<Object ID="{C403C45F-6EA7-4B9F-B3E6-44F855FD9A8B}" Name="Capability" Flags="0x900" Class="sys://Schema/System/Text" DefaultValue="4" ReadOnly="-1" />
							<Object ID="{7ECC2797-59E8-4CFD-9331-551146D88239}" Class="sys://Schema/System/SuperClass" LinkObject="{30C016B0-860F-432E-BF74-538020F90F76}" />
						</Object>
						<Object ID="{A48DD108-EF18-4386-A173-95FAF23B2F03}" Name="SensorType_Light" Class="sys://Schema/System/Class" >
							<Object ID="{4CEC15DF-19C3-47F9-BCB2-5175703D40AF}" Class="sys://Schema/System/SuperClass" LinkObject="{75A7DE58-9BBC-4E29-B003-3DB68FEC84B7}" />
							<Object ID="{D278FC75-3239-456A-B99A-A141C66E5796}" Name="Capability" Flags="0x900" Class="sys://Schema/System/Text" DefaultValue="5" ReadOnly="-1" />
							<Object ID="{246599F0-12D0-4689-AE0D-BDFC3F6A78EE}" Class="sys://Schema/System/SuperClass" LinkObject="{30C016B0-860F-432E-BF74-538020F90F76}" />
						</Object>
					</Object>
					<Object ID="{E94E4DEB-F1CC-4BA8-A7B5-C0049F249C73}" Name="Templates" Flags="0x120000" Class="sys://Schema/System/TemplateFolder" />
					<Object ID="{FAEA0F09-918C-429D-8648-3206893B2B5B}" Name="GlobalScripts" Flags="0x120000" Class="sys://Schema/Scripting/GlobalScriptFolder" />
					<Object ID="{5B2C6311-69A9-456B-ACE5-CB3C20C2C25F}" Name="Logic" Flags="0x120000" Class="sys://Schema/Logic/RuleFolder" />
					<Object ID="{59984F7B-663A-4B5A-A2AE-018DBC5C435B}" Name="Variables" Flags="0x120000" Class="sys://Schema/System/VariableFolder" />
					<Object ID="{69BCF7AC-F61C-48F1-96A5-ADBA98064715}" Name="Timers" Flags="0x120000" Class="sys://Schema/Timers/TimerFolder" />
					<Object ID="{CDF3E6E3-3C6C-4248-AB5B-588418F2CB76}" Name="Macros" Flags="0x120000" Class="sys://Schema/System/MacroHolder" />
				</Object>
			</Object>
		</Object>
	</Object>
</Object>
